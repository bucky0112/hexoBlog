{"meta":{"version":1,"warehouse":"3.0.2"},"models":{"Asset":[{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":0,"renderable":1},{"_id":"themes/next/source/images/apple-touch-icon-next.png","path":"images/apple-touch-icon-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/favicon-16x16-next.png","path":"images/favicon-16x16-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/logo.svg","path":"images/logo.svg","modified":0,"renderable":1},{"_id":"themes/next/source/js/bookmark.js","path":"js/bookmark.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/local-search.js","path":"js/local-search.js","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/js/next-boot.js","path":"js/next-boot.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/algolia-search.js","path":"js/algolia-search.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/utils.js","path":"js/utils.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/anime.min.js","path":"lib/anime.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/images/favicon-32x32-next.png","path":"images/favicon-32x32-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/js/motion.js","path":"js/motion.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/schemes/muse.js","path":"js/schemes/muse.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/LICENSE","path":"lib/algolia-instant-search/LICENSE","modified":0,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css.map","path":"lib/algolia-instant-search/instantsearch.min.css.map","modified":0,"renderable":1},{"_id":"themes/next/source/js/schemes/pisces.js","path":"js/schemes/pisces.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","path":"lib/algolia-instant-search/instantsearch.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/README.md","path":"lib/algolia-instant-search/README.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pjax/CHANGELOG.md","path":"lib/pjax/CHANGELOG.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pjax/LICENSE","path":"lib/pjax/LICENSE","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pjax/README.md","path":"lib/pjax/README.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pjax/index.d.ts","path":"lib/pjax/index.d.ts","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pjax/index.js","path":"lib/pjax/index.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pjax/package.json","path":"lib/pjax/package.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pjax/pjax.js","path":"lib/pjax/pjax.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pjax/pjax.min.js","path":"lib/pjax/pjax.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pjax/example/forms.html","path":"lib/pjax/example/forms.html","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pjax/example/index.html","path":"lib/pjax/example/index.html","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pjax/example/example.js","path":"lib/pjax/example/example.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pjax/example/page2.html","path":"lib/pjax/example/page2.html","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pjax/example/page3.html","path":"lib/pjax/example/page3.html","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pjax/lib/eval-script.js","path":"lib/pjax/lib/eval-script.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pjax/lib/abort-request.js","path":"lib/pjax/lib/abort-request.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pjax/lib/execute-scripts.js","path":"lib/pjax/lib/execute-scripts.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pjax/lib/foreach-els.js","path":"lib/pjax/lib/foreach-els.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pjax/lib/foreach-selectors.js","path":"lib/pjax/lib/foreach-selectors.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pjax/lib/is-supported.js","path":"lib/pjax/lib/is-supported.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pjax/lib/parse-options.js","path":"lib/pjax/lib/parse-options.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pjax/lib/send-request.js","path":"lib/pjax/lib/send-request.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pjax/lib/switches-selectors.js","path":"lib/pjax/lib/switches-selectors.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pjax/lib/switches.js","path":"lib/pjax/lib/switches.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pjax/lib/uniqueid.js","path":"lib/pjax/lib/uniqueid.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pjax/tests/setup.js","path":"lib/pjax/tests/setup.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pjax/tests/test.ts","path":"lib/pjax/tests/test.ts","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/all.min.css","path":"lib/font-awesome/css/all.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/webfonts/fa-regular-400.woff2","path":"lib/font-awesome/webfonts/fa-regular-400.woff2","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/webfonts/fa-brands-400.woff2","path":"lib/font-awesome/webfonts/fa-brands-400.woff2","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/webfonts/fa-solid-900.woff2","path":"lib/font-awesome/webfonts/fa-solid-900.woff2","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pjax/lib/events/off.js","path":"lib/pjax/lib/events/off.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pjax/lib/events/on.js","path":"lib/pjax/lib/events/on.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pjax/lib/events/trigger.js","path":"lib/pjax/lib/events/trigger.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pjax/lib/proto/attach-form.js","path":"lib/pjax/lib/proto/attach-form.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pjax/lib/proto/attach-link.js","path":"lib/pjax/lib/proto/attach-link.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pjax/lib/proto/handle-response.js","path":"lib/pjax/lib/proto/handle-response.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pjax/lib/proto/log.js","path":"lib/pjax/lib/proto/log.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pjax/lib/proto/parse-element.js","path":"lib/pjax/lib/proto/parse-element.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pjax/lib/util/clone.js","path":"lib/pjax/lib/util/clone.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pjax/lib/util/contains.js","path":"lib/pjax/lib/util/contains.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pjax/lib/util/noop.js","path":"lib/pjax/lib/util/noop.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pjax/lib/util/update-query-string.js","path":"lib/pjax/lib/util/update-query-string.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pjax/lib/util/extend.js","path":"lib/pjax/lib/util/extend.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pjax/tests/lib/abort-request.js","path":"lib/pjax/tests/lib/abort-request.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pjax/tests/lib/eval-scripts.js","path":"lib/pjax/tests/lib/eval-scripts.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pjax/tests/lib/events.js","path":"lib/pjax/tests/lib/events.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pjax/tests/lib/execute-scripts.js","path":"lib/pjax/tests/lib/execute-scripts.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pjax/tests/lib/foreach-els.js","path":"lib/pjax/tests/lib/foreach-els.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pjax/tests/lib/foreach-selectors.js","path":"lib/pjax/tests/lib/foreach-selectors.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pjax/tests/lib/is-supported.js","path":"lib/pjax/tests/lib/is-supported.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pjax/tests/lib/parse-options.js","path":"lib/pjax/tests/lib/parse-options.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pjax/tests/lib/send-request.js","path":"lib/pjax/tests/lib/send-request.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pjax/tests/lib/switch-selectors.js","path":"lib/pjax/tests/lib/switch-selectors.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pjax/tests/lib/switches.js","path":"lib/pjax/tests/lib/switches.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pjax/tests/lib/uniqueid.js","path":"lib/pjax/tests/lib/uniqueid.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pjax/tests/lib/proto/attach-form.js","path":"lib/pjax/tests/lib/proto/attach-form.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pjax/tests/lib/proto/attach-link.js","path":"lib/pjax/tests/lib/proto/attach-link.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pjax/tests/lib/proto/handle-response.js","path":"lib/pjax/tests/lib/proto/handle-response.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pjax/tests/lib/proto/parse-element.js","path":"lib/pjax/tests/lib/proto/parse-element.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pjax/tests/lib/util/clone.js","path":"lib/pjax/tests/lib/util/clone.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pjax/tests/lib/util/contains.js","path":"lib/pjax/tests/lib/util/contains.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pjax/tests/lib/util/extend.js","path":"lib/pjax/tests/lib/util/extend.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pjax/tests/lib/util/noop.js","path":"lib/pjax/tests/lib/util/noop.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pjax/tests/lib/util/update-query-string.js","path":"lib/pjax/tests/lib/util/update-query-string.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","path":"lib/algolia-instant-search/instantsearch.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/images/avatar.jpg","path":"images/avatar.jpg","modified":0,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js.map","path":"lib/algolia-instant-search/instantsearch.min.js.map","modified":0,"renderable":1}],"Cache":[{"_id":"source/.DS_Store","hash":"9534e1b4d2dda797e295dc86be7e86fa30aed1b3","modified":1586189428205},{"_id":"themes/next/.DS_Store","hash":"f09a86bb4ce7d04901ec1bb4cb55bee99909840c","modified":1586190165093},{"_id":"themes/next/.editorconfig","hash":"8570735a8d8d034a3a175afd1dd40b39140b3e6a","modified":1586188437804},{"_id":"themes/next/.eslintrc.json","hash":"cc5f297f0322672fe3f684f823bc4659e4a54c41","modified":1586188437805},{"_id":"themes/next/.gitattributes","hash":"a54f902957d49356376b59287b894b1a3d7a003f","modified":1586188437805},{"_id":"themes/next/.gitignore","hash":"56f3470755c20311ddd30d421b377697a6e5e68b","modified":1586188437810},{"_id":"themes/next/README.md","hash":"9b4b7d66aca47f9c65d6321b14eef48d95c4dff1","modified":1586188437811},{"_id":"themes/next/_config.yml","hash":"bec7424de52af5d593d3f498d8be802018d3a6ca","modified":1586425120824},{"_id":"themes/next/.stylintrc","hash":"2cf4d637b56d8eb423f59656a11f6403aa90f550","modified":1586188437810},{"_id":"themes/next/.travis.yml","hash":"ecca3b919a5b15886e3eca58aa84aafc395590da","modified":1586188437811},{"_id":"themes/next/LICENSE.md","hash":"18144d8ed58c75af66cb419d54f3f63374cd5c5b","modified":1586188437811},{"_id":"themes/next/crowdin.yml","hash":"e026078448c77dcdd9ef50256bb6635a8f83dca6","modified":1586188437813},{"_id":"themes/next/gulpfile.js","hash":"1b4fc262b89948937b9e3794de812a7c1f2f3592","modified":1586188437822},{"_id":"themes/next/package.json","hash":"62fad6de02adbbba9fb096cbe2dcc15fe25f2435","modified":1586188437861},{"_id":"source/_posts/使用Hexo在GitHub部署Blog.md","hash":"af6a6e7395e546a56ef9db20e164abd4ab1cc211","modified":1586161931815},{"_id":"source/_posts/先別急著寫leetcode課程心得.md","hash":"6eb69ca37ad986a882f35ba439ae2023aab6f427","modified":1585984852320},{"_id":"source/_posts/hello-world.md","hash":"7d98d6592de80fdcd2949bd7401cec12afd98cdf","modified":1586187989082},{"_id":"source/_posts/JavaScript的怪奇物語.md","hash":"78ddbfdb7db82d03b66c518c52841772c62ad8b9","modified":1585672396871},{"_id":"source/categories/index.md","hash":"ecab068573b4ecd908bc39c7a76c76969adf3a15","modified":1586143869820},{"_id":"source/_posts/基礎 Vue.js-1.md","hash":"c941d4ade28f63d1d0d4afa2927243739b2c5259","modified":1585558784332},{"_id":"source/_posts/基礎Vue-js-2.md","hash":"46806ccabfc1e4b40ceaa5ab57202d4be17896a9","modified":1585575394918},{"_id":"source/_posts/基礎Vue-js-3.md","hash":"9bdc1a637f9f9ef149c59f3ac8b1cd452121cb56","modified":1585580126046},{"_id":"source/link/index.md","hash":"25b6ca8e9565e772b91e6afe3575df7479ca5783","modified":1586144763078},{"_id":"source/tags/index.md","hash":"4817082ed9e8b00eae1e10f26ebd681bb124855b","modified":1586143881111},{"_id":"themes/next/.github/PULL_REQUEST_TEMPLATE.md","hash":"1a435c20ae8fa183d49bbf96ac956f7c6c25c8af","modified":1586188437808},{"_id":"themes/next/.github/CODE_OF_CONDUCT.md","hash":"aa4cb7aff595ca628cb58160ee1eee117989ec4e","modified":1586188437806},{"_id":"themes/next/.github/CONTRIBUTING.md","hash":"e554931b98f251fd49ff1d2443006d9ea2c20461","modified":1586188437806},{"_id":"themes/next/.github/config.yml","hash":"1d3f4e8794986817c0fead095c74f756d45f91ed","modified":1586188437808},{"_id":"themes/next/.github/issue_label_bot.yaml","hash":"fca600ddef6f80c5e61aeed21722d191e5606e5b","modified":1586188437809},{"_id":"themes/next/.github/lock.yml","hash":"61173b9522ebac13db2c544e138808295624f7fd","modified":1586188437809},{"_id":"themes/next/.github/mergeable.yml","hash":"0ee56e23bbc71e1e76427d2bd255a9879bd36e22","modified":1586188437809},{"_id":"themes/next/.github/issue-close-app.yml","hash":"7cba457eec47dbfcfd4086acd1c69eaafca2f0cd","modified":1586188437809},{"_id":"themes/next/.github/support.yml","hash":"d75db6ffa7b4ca3b865a925f9de9aef3fc51925c","modified":1586188437810},{"_id":"themes/next/.github/release-drafter.yml","hash":"3cc10ce75ecc03a5ce86b00363e2a17eb65d15ea","modified":1586188437810},{"_id":"themes/next/docs/AGPL3.md","hash":"0d2b8c5fa8a614723be0767cc3bca39c49578036","modified":1586188437813},{"_id":"themes/next/.github/stale.yml","hash":"fdf82de9284f8bc8e0b0712b4cc1cb081a94de59","modified":1586188437810},{"_id":"themes/next/docs/AUTHORS.md","hash":"10135a2f78ac40e9f46b3add3e360c025400752f","modified":1586188437815},{"_id":"themes/next/docs/DATA-FILES.md","hash":"cddbdc91ee9e65c37a50bec12194f93d36161616","modified":1586188437815},{"_id":"themes/next/docs/ALGOLIA-SEARCH.md","hash":"c7a994b9542040317d8f99affa1405c143a94a38","modified":1586188437814},{"_id":"themes/next/docs/INSTALLATION.md","hash":"af88bcce035780aaa061261ed9d0d6c697678618","modified":1586188437815},{"_id":"themes/next/docs/LEANCLOUD-COUNTER-SECURITY.md","hash":"94dc3404ccb0e5f663af2aa883c1af1d6eae553d","modified":1586188437816},{"_id":"themes/next/docs/LICENSE.txt","hash":"368bf2c29d70f27d8726dd914f1b3211cae4bbab","modified":1586188437816},{"_id":"themes/next/docs/MATH.md","hash":"d645b025ec7fb9fbf799b9bb76af33b9f5b9ed93","modified":1586188437817},{"_id":"themes/next/docs/UPDATE-FROM-5.1.X.md","hash":"8b6e4b2c9cfcb969833092bdeaed78534082e3e6","modified":1586188437817},{"_id":"themes/next/languages/ar.yml","hash":"9815e84e53d750c8bcbd9193c2d44d8d910e3444","modified":1586188437823},{"_id":"themes/next/languages/de.yml","hash":"74c59f2744217003b717b59d96e275b54635abf5","modified":1586188437823},{"_id":"themes/next/languages/default.yml","hash":"45bc5118828bdc72dcaa25282cd367c8622758cb","modified":1586188437823},{"_id":"themes/next/languages/es.yml","hash":"c64cf05f356096f1464b4b1439da3c6c9b941062","modified":1586188437824},{"_id":"themes/next/languages/en.yml","hash":"45bc5118828bdc72dcaa25282cd367c8622758cb","modified":1586188437823},{"_id":"themes/next/languages/fr.yml","hash":"752bf309f46a2cd43890b82300b342d7218d625f","modified":1586188437824},{"_id":"themes/next/languages/fa.yml","hash":"3676b32fda37e122f3c1a655085a1868fb6ad66b","modified":1586188437824},{"_id":"themes/next/languages/hu.yml","hash":"b1ebb77a5fd101195b79f94de293bcf9001d996f","modified":1586188437825},{"_id":"themes/next/languages/id.yml","hash":"572ed855d47aafe26f58c73b1394530754881ec2","modified":1586188437825},{"_id":"themes/next/languages/it.yml","hash":"44759f779ce9c260b895532de1d209ad4bd144bf","modified":1586188437825},{"_id":"themes/next/languages/ja.yml","hash":"0cf0baa663d530f22ff380a051881216d6adcdd8","modified":1586188437826},{"_id":"themes/next/languages/ko.yml","hash":"0feea9e43cd399f3610b94d755a39fff1d371e97","modified":1586188437826},{"_id":"themes/next/languages/nl.yml","hash":"5af3473d9f22897204afabc08bb984b247493330","modified":1586188437827},{"_id":"themes/next/languages/pt-BR.yml","hash":"67555b1ba31a0242b12fc6ce3add28531160e35b","modified":1586188437827},{"_id":"themes/next/languages/pt.yml","hash":"718d131f42f214842337776e1eaddd1e9a584054","modified":1586188437827},{"_id":"themes/next/languages/ru.yml","hash":"e993d5ca072f7f6887e30fc0c19b4da791ca7a88","modified":1586188437828},{"_id":"themes/next/languages/tr.yml","hash":"fe793f4c2608e3f85f0b872fd0ac1fb93e6155e2","modified":1586188437828},{"_id":"themes/next/languages/uk.yml","hash":"3a6d635b1035423b22fc86d9455dba9003724de9","modified":1586188437829},{"_id":"themes/next/languages/vi.yml","hash":"93393b01df148dcbf0863f6eee8e404e2d94ef9e","modified":1586188437829},{"_id":"themes/next/languages/zh-CN.yml","hash":"a1f15571ee7e1e84e3cc0985c3ec4ba1a113f6f8","modified":1586188437829},{"_id":"themes/next/languages/zh-HK.yml","hash":"3789f94010f948e9f23e21235ef422a191753c65","modified":1586188437830},{"_id":"themes/next/languages/zh-TW.yml","hash":"8c09da7c4ec3fca2c6ee897b2eea260596a2baa1","modified":1586188437830},{"_id":"themes/next/layout/_layout.swig","hash":"6a6e92a4664cdb981890a27ac11fd057f44de1d5","modified":1586188437831},{"_id":"themes/next/layout/archive.swig","hash":"e4e31317a8df68f23156cfc49e9b1aa9a12ad2ed","modified":1586188437859},{"_id":"themes/next/layout/category.swig","hash":"1bde61cf4d2d171647311a0ac2c5c7933f6a53b0","modified":1586188437860},{"_id":"themes/next/layout/index.swig","hash":"7f403a18a68e6d662ae3e154b2c1d3bbe0801a23","modified":1586188437860},{"_id":"themes/next/layout/page.swig","hash":"db581bdeac5c75fabb0f17d7c5e746e47f2a9168","modified":1586188437860},{"_id":"themes/next/layout/post.swig","hash":"2f6d992ced7e067521fdce05ffe4fd75481f41c5","modified":1586188437861},{"_id":"themes/next/layout/tag.swig","hash":"0dfb653bd5de980426d55a0606d1ab122bd8c017","modified":1586188437861},{"_id":"themes/next/scripts/renderer.js","hash":"49a65df2028a1bc24814dc72fa50d52231ca4f05","modified":1586188437870},{"_id":"themes/next/source/.DS_Store","hash":"38935a63afc005352272db433e4fc3279d3f6ce7","modified":1586190178974},{"_id":"themes/next/.github/ISSUE_TEMPLATE/other.md","hash":"d3efc0df0275c98440e69476f733097916a2d579","modified":1586188437807},{"_id":"themes/next/.github/ISSUE_TEMPLATE/feature-request.md","hash":"12d99fb8b62bd9e34d9672f306c9ae4ace7e053e","modified":1586188437807},{"_id":"themes/next/.github/ISSUE_TEMPLATE/bug-report.md","hash":"c3e6b8196c983c40fd140bdeca012d03e6e86967","modified":1586188437807},{"_id":"themes/next/.github/ISSUE_TEMPLATE/question.md","hash":"53df7d537e26aaf062d70d86835c5fd8f81412f3","modified":1586188437808},{"_id":"themes/next/docs/ru/DATA-FILES.md","hash":"0bd2d696f62a997a11a7d84fec0130122234174e","modified":1586188437818},{"_id":"themes/next/docs/ru/INSTALLATION.md","hash":"9c4fe2873123bf9ceacab5c50d17d8a0f1baef27","modified":1586188437818},{"_id":"themes/next/docs/ru/README.md","hash":"85dd68ed1250897a8e4a444a53a68c1d49eb7e11","modified":1586188437818},{"_id":"themes/next/docs/ru/UPDATE-FROM-5.1.X.md","hash":"5237a368ab99123749d724b6c379415f2c142a96","modified":1586188437819},{"_id":"themes/next/docs/zh-CN/ALGOLIA-SEARCH.md","hash":"34b88784ec120dfdc20fa82aadeb5f64ef614d14","modified":1586188437819},{"_id":"themes/next/docs/zh-CN/CODE_OF_CONDUCT.md","hash":"fb23b85db6f7d8279d73ae1f41631f92f64fc864","modified":1586188437820},{"_id":"themes/next/docs/zh-CN/CONTRIBUTING.md","hash":"d3f03be036b75dc71cf3c366cd75aee7c127c874","modified":1586188437820},{"_id":"themes/next/docs/zh-CN/DATA-FILES.md","hash":"ca1030efdfca5e20f9db2e7a428998e66a24c0d0","modified":1586188437820},{"_id":"themes/next/docs/zh-CN/INSTALLATION.md","hash":"579c7bd8341873fb8be4732476d412814f1a3df7","modified":1586188437820},{"_id":"themes/next/docs/zh-CN/LEANCLOUD-COUNTER-SECURITY.md","hash":"8b18f84503a361fc712b0fe4d4568e2f086ca97d","modified":1586188437821},{"_id":"themes/next/docs/zh-CN/MATH.md","hash":"b92585d251f1f9ebe401abb5d932cb920f9b8b10","modified":1586188437822},{"_id":"themes/next/docs/zh-CN/README.md","hash":"c038629ff8f3f24e8593c4c8ecf0bef3a35c750d","modified":1586188437822},{"_id":"themes/next/docs/zh-CN/UPDATE-FROM-5.1.X.md","hash":"d9ce7331c1236bbe0a551d56cef2405e47e65325","modified":1586188437822},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"9c8dc0b8170679cdc1ee9ee8dbcbaebf3f42897b","modified":1586188437831},{"_id":"themes/next/layout/_macro/post.swig","hash":"090b5a9b6fca8e968178004cbd6cff205b7eba57","modified":1586188437832},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"71655ca21907e9061b6e8ac52d0d8fbf54d0062b","modified":1586188437833},{"_id":"themes/next/layout/_partials/comments.swig","hash":"db6ab5421b5f4b7cb32ac73ad0e053fdf065f83e","modified":1586188437833},{"_id":"themes/next/layout/_partials/footer.swig","hash":"700c3e7bd449bce51f6faee42c052e13ed5f8b3e","modified":1586188437834},{"_id":"themes/next/layout/_partials/languages.swig","hash":"ba9e272f1065b8f0e8848648caa7dea3f02c6be1","modified":1586188437838},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"9876dbfc15713c7a47d4bcaa301f4757bd978269","modified":1586188437839},{"_id":"themes/next/layout/_partials/widgets.swig","hash":"83a40ce83dfd5cada417444fb2d6f5470aae6bb0","modified":1586188437843},{"_id":"themes/next/layout/_scripts/index.swig","hash":"cea942b450bcb0f352da78d76dc6d6f1d23d5029","modified":1586188437844},{"_id":"themes/next/layout/_scripts/noscript.swig","hash":"d1f2bfde6f1da51a2b35a7ab9e7e8eb6eefd1c6b","modified":1586188437844},{"_id":"themes/next/layout/_scripts/pjax.swig","hash":"4d2c93c66e069852bb0e3ea2e268d213d07bfa3f","modified":1586188437845},{"_id":"themes/next/layout/_scripts/three.swig","hash":"a4f42f2301866bd25a784a2281069d8b66836d0b","modified":1586188437847},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"ef38c213679e7b6d2a4116f56c9e55d678446069","modified":1586188437847},{"_id":"themes/next/layout/_third-party/baidu-push.swig","hash":"8627c8c8b031ecee16c522433b66fa4d6979b8ea","modified":1586188437849},{"_id":"themes/next/layout/_third-party/index.swig","hash":"70c3c01dd181de81270c57f3d99b6d8f4c723404","modified":1586188437853},{"_id":"themes/next/layout/_third-party/quicklink.swig","hash":"311e5eceec9e949f1ea8d623b083cec0b8700ff2","modified":1586188437854},{"_id":"themes/next/layout/_third-party/rating.swig","hash":"2731e262a6b88eaee2a3ca61e6a3583a7f594702","modified":1586188437855},{"_id":"themes/next/scripts/events/index.js","hash":"bf5e93f9209d111a014a7a6a17e86c05be552d13","modified":1586188437862},{"_id":"themes/next/scripts/filters/default-injects.js","hash":"aec50ed57b9d5d3faf2db3c88374f107203617e0","modified":1586188437867},{"_id":"themes/next/scripts/filters/front-matter.js","hash":"703bdd142a671b4b67d3d9dfb4a19d1dd7e7e8f7","modified":1586188437867},{"_id":"themes/next/scripts/filters/locals.js","hash":"b193a936ee63451f09f8886343dcfdca577c0141","modified":1586188437867},{"_id":"themes/next/scripts/filters/minify.js","hash":"19985723b9f677ff775f3b17dcebf314819a76ac","modified":1586188437868},{"_id":"themes/next/scripts/filters/post.js","hash":"44ba9b1c0bdda57590b53141306bb90adf0678db","modified":1586188437868},{"_id":"themes/next/scripts/helpers/engine.js","hash":"bdb424c3cc0d145bd0c6015bb1d2443c8a9c6cda","modified":1586188437868},{"_id":"themes/next/scripts/helpers/font.js","hash":"40cf00e9f2b7aa6e5f33d412e03ed10304b15fd7","modified":1586188437869},{"_id":"themes/next/scripts/helpers/next-config.js","hash":"5e11f30ddb5093a88a687446617a46b048fa02e5","modified":1586188437869},{"_id":"themes/next/scripts/helpers/next-url.js","hash":"958e86b2bd24e4fdfcbf9ce73e998efe3491a71f","modified":1586188437869},{"_id":"themes/next/scripts/tags/button.js","hash":"8c6b45f36e324820c919a822674703769e6da32c","modified":1586188437871},{"_id":"themes/next/scripts/tags/caniuse.js","hash":"94e0bbc7999b359baa42fa3731bdcf89c79ae2b3","modified":1586188437871},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"f1826ade2d135e2f60e2d95cb035383685b3370c","modified":1586188437871},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"d902fd313e8d35c3cc36f237607c2a0536c9edf1","modified":1586188437871},{"_id":"themes/next/scripts/tags/label.js","hash":"fc5b267d903facb7a35001792db28b801cccb1f8","modified":1586188437872},{"_id":"themes/next/scripts/tags/mermaid.js","hash":"983c6c4adea86160ecc0ba2204bc312aa338121d","modified":1586188437872},{"_id":"themes/next/scripts/tags/note.js","hash":"0a02bb4c15aec41f6d5f1271cdb5c65889e265d9","modified":1586188437872},{"_id":"themes/next/scripts/tags/pdf.js","hash":"8c613b39e7bff735473e35244b5629d02ee20618","modified":1586188437872},{"_id":"themes/next/scripts/tags/tabs.js","hash":"93d8a734a3035c1d3f04933167b500517557ba3e","modified":1586188437872},{"_id":"themes/next/scripts/tags/video.js","hash":"e5ff4c44faee604dd3ea9db6b222828c4750c227","modified":1586188437873},{"_id":"themes/next/source/css/_colors.styl","hash":"a8442520f719d3d7a19811cb3b85bcfd4a596e1f","modified":1586188437880},{"_id":"themes/next/source/css/_mixins.styl","hash":"e31a557f8879c2f4d8d5567ee1800b3e03f91f6e","modified":1586188437935},{"_id":"themes/next/source/css/main.styl","hash":"a3a3bbb5a973052f0186b3523911cb2539ff7b88","modified":1586188437954},{"_id":"themes/next/source/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1586188437955},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1586188437956},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1586188437957},{"_id":"themes/next/source/images/.DS_Store","hash":"df2fbeb1400acda0909a32c1cf6bf492f1121e07","modified":1586190883039},{"_id":"themes/next/source/images/algolia_logo.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1586188437954},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1586188437958},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1586188437959},{"_id":"themes/next/source/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1586188437959},{"_id":"themes/next/source/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1586188437960},{"_id":"themes/next/source/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1586188437961},{"_id":"themes/next/source/images/logo.svg","hash":"d29cacbae1bdc4bbccb542107ee0524fe55ad6de","modified":1586188437962},{"_id":"themes/next/source/js/bookmark.js","hash":"a00945ff886e9f6f835731cdaf29a3a3727c8877","modified":1586188437963},{"_id":"themes/next/source/js/local-search.js","hash":"d6673063958127a03881dab2f0376a47f5e08a88","modified":1586188437964},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1586188437958},{"_id":"themes/next/source/js/next-boot.js","hash":"a22eeb6048ddd6b9224c8a671cbcfa303a2f7a1a","modified":1586188437964},{"_id":"themes/next/source/js/algolia-search.js","hash":"23cc3c013185eb97ef347c3b4c92d928f2f3398f","modified":1586188437963},{"_id":"themes/next/source/js/utils.js","hash":"91d174e12c61c332f3b06085d635c2b0f686a758","modified":1586188437966},{"_id":"themes/next/source/lib/anime.min.js","hash":"47cb482a8a488620a793d50ba8f6752324b46af3","modified":1586188437966},{"_id":"themes/next/source/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1586188437961},{"_id":"themes/next/source/js/motion.js","hash":"72df86f6dfa29cce22abeff9d814c9dddfcf13a9","modified":1586188437964},{"_id":"themes/next/layout/_partials/head/head-unique.swig","hash":"000bad572d76ee95d9c0a78f9ccdc8d97cc7d4b4","modified":1586188437834},{"_id":"themes/next/layout/_partials/head/head.swig","hash":"810d544019e4a8651b756dd23e5592ee851eda71","modified":1586188437835},{"_id":"themes/next/layout/_partials/header/brand.swig","hash":"c70f8e71e026e878a4e9d5ab3bbbf9b0b23c240c","modified":1586188437835},{"_id":"themes/next/layout/_partials/header/index.swig","hash":"7dbe93b8297b746afb89700b4d29289556e85267","modified":1586188437836},{"_id":"themes/next/layout/_partials/header/menu-item.swig","hash":"9440d8a3a181698b80e1fa47f5104f4565d8cdf3","modified":1586188437836},{"_id":"themes/next/layout/_partials/header/menu.swig","hash":"d31f896680a6c2f2c3f5128b4d4dd46c87ce2130","modified":1586188437837},{"_id":"themes/next/layout/_partials/header/sub-menu.swig","hash":"ae2261bea836581918a1c2b0d1028a78718434e0","modified":1586188437838},{"_id":"themes/next/layout/_partials/page/breadcrumb.swig","hash":"c851717497ca64789f2176c9ecd1dedab237b752","modified":1586188437838},{"_id":"themes/next/layout/_partials/page/page-header.swig","hash":"9b7a66791d7822c52117fe167612265356512477","modified":1586188437839},{"_id":"themes/next/layout/_partials/post/post-copyright.swig","hash":"954ad71536b6eb08bd1f30ac6e2f5493b69d1c04","modified":1586188437840},{"_id":"themes/next/layout/_partials/post/post-followme.swig","hash":"ceba16b9bd3a0c5c8811af7e7e49d0f9dcb2f41e","modified":1586188437840},{"_id":"themes/next/layout/_partials/post/post-footer.swig","hash":"8f14f3f8a1b2998d5114cc56b680fb5c419a6b07","modified":1586188437840},{"_id":"themes/next/layout/_partials/post/post-related.swig","hash":"f79c44692451db26efce704813f7a8872b7e63a0","modified":1586188437841},{"_id":"themes/next/layout/_partials/post/post-reward.swig","hash":"2b1a73556595c37951e39574df5a3f20b2edeaef","modified":1586188437841},{"_id":"themes/next/layout/_partials/search/algolia-search.swig","hash":"48430bd03b8f19c9b8cdb2642005ed67d56c6e0b","modified":1586188437841},{"_id":"themes/next/layout/_partials/search/index.swig","hash":"2be50f9bfb1c56b85b3b6910a7df27f51143632c","modified":1586188437842},{"_id":"themes/next/layout/_partials/sidebar/site-overview.swig","hash":"c46849e0af8f8fb78baccd40d2af14df04a074af","modified":1586188437843},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"f48a6a8eba04eb962470ce76dd731e13074d4c45","modified":1586188437842},{"_id":"themes/next/layout/_scripts/pages/schedule.swig","hash":"077b5d66f6309f2e7dcf08645058ff2e03143e6c","modified":1586188437845},{"_id":"themes/next/layout/_scripts/schemes/gemini.swig","hash":"1c910fc066c06d5fbbe9f2b0c47447539e029af7","modified":1586188437845},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"7f14ef43d9e82bc1efc204c5adf0b1dbfc919a9f","modified":1586188437846},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"7f14ef43d9e82bc1efc204c5adf0b1dbfc919a9f","modified":1586188437846},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"1c910fc066c06d5fbbe9f2b0c47447539e029af7","modified":1586188437846},{"_id":"themes/next/layout/_third-party/analytics/baidu-analytics.swig","hash":"4790058691b7d36cf6d2d6b4e93795a7b8d608ad","modified":1586188437848},{"_id":"themes/next/layout/_third-party/analytics/google-analytics.swig","hash":"2fa2b51d56bfac6a1ea76d651c93b9c20b01c09b","modified":1586188437848},{"_id":"themes/next/layout/_third-party/analytics/growingio.swig","hash":"5adea065641e8c55994dd2328ddae53215604928","modified":1586188437849},{"_id":"themes/next/layout/_third-party/analytics/index.swig","hash":"1472cabb0181f60a6a0b7fec8899a4d03dfb2040","modified":1586188437849},{"_id":"themes/next/layout/_third-party/chat/chatra.swig","hash":"f910618292c63871ca2e6c6e66c491f344fa7b1f","modified":1586188437850},{"_id":"themes/next/layout/_third-party/chat/tidio.swig","hash":"cba0e6e0fad08568a9e74ba9a5bee5341cfc04c1","modified":1586188437850},{"_id":"themes/next/layout/_third-party/comments/changyan.swig","hash":"f39a5bf3ce9ee9adad282501235e0c588e4356ec","modified":1586188437850},{"_id":"themes/next/layout/_third-party/comments/disqus.swig","hash":"b14908644225d78c864cd0a9b60c52407de56183","modified":1586188437851},{"_id":"themes/next/layout/_third-party/comments/disqusjs.swig","hash":"82f5b6822aa5ec958aa987b101ef860494c6cf1f","modified":1586188437851},{"_id":"themes/next/layout/_third-party/comments/gitalk.swig","hash":"d6ceb70648555338a80ae5724b778c8c58d7060d","modified":1586188437852},{"_id":"themes/next/layout/_third-party/comments/livere.swig","hash":"f7a9eca599a682479e8ca863db59be7c9c7508c8","modified":1586188437852},{"_id":"themes/next/layout/_third-party/comments/valine.swig","hash":"be0a8eccf1f6dc21154af297fc79555343031277","modified":1586188437852},{"_id":"themes/next/layout/_third-party/math/index.swig","hash":"6c5976621efd5db5f7c4c6b4f11bc79d6554885f","modified":1586188437853},{"_id":"themes/next/layout/_third-party/math/katex.swig","hash":"4791c977a730f29c846efcf6c9c15131b9400ead","modified":1586188437853},{"_id":"themes/next/layout/_third-party/math/mathjax.swig","hash":"ecf751321e799f0fb3bf94d049e535130e2547aa","modified":1586188437854},{"_id":"themes/next/layout/_third-party/search/algolia-search.swig","hash":"d35a999d67f4c302f76fdf13744ceef3c6506481","modified":1586188437855},{"_id":"themes/next/layout/_third-party/search/localsearch.swig","hash":"767b6c714c22588bcd26ba70b0fc19b6810cbacd","modified":1586188437855},{"_id":"themes/next/layout/_third-party/search/swiftype.swig","hash":"ba0dbc06b9d244073a1c681ff7a722dcbf920b51","modified":1586188437856},{"_id":"themes/next/layout/_third-party/statistics/busuanzi-counter.swig","hash":"4b1986e43d6abce13450d2b41a736dd6a5620a10","modified":1586188437857},{"_id":"themes/next/layout/_third-party/statistics/cnzz-analytics.swig","hash":"a17ace37876822327a2f9306a472974442c9005d","modified":1586188437857},{"_id":"themes/next/layout/_third-party/statistics/firestore.swig","hash":"b26ac2bfbe91dd88267f8b96aee6bb222b265b7a","modified":1586188437857},{"_id":"themes/next/layout/_third-party/statistics/index.swig","hash":"5f6a966c509680dbfa70433f9d658cee59c304d7","modified":1586188437858},{"_id":"themes/next/layout/_third-party/statistics/lean-analytics.swig","hash":"d56d5af427cdfecc33a0f62ee62c056b4e33d095","modified":1586188437858},{"_id":"themes/next/layout/_third-party/tags/mermaid.swig","hash":"f3c43664a071ff3c0b28bd7e59b5523446829576","modified":1586188437859},{"_id":"themes/next/layout/_third-party/tags/pdf.swig","hash":"d30b0e255a8092043bac46441243f943ed6fb09b","modified":1586188437859},{"_id":"themes/next/scripts/events/lib/config.js","hash":"d34c6040b13649714939f59be5175e137de65ede","modified":1586188437863},{"_id":"themes/next/scripts/events/lib/injects-point.js","hash":"6661c1c91c7cbdefc6a5e6a034b443b8811235a1","modified":1586188437863},{"_id":"themes/next/scripts/events/lib/injects.js","hash":"f233d8d0103ae7f9b861344aa65c1a3c1de8a845","modified":1586188437863},{"_id":"themes/next/scripts/filters/comment/changyan.js","hash":"a54708fd9309b4357c423a3730eb67f395344a5e","modified":1586188437864},{"_id":"themes/next/scripts/filters/comment/common.js","hash":"2486f3e0150c753e5f3af1a3665d074704b8ee2c","modified":1586188437865},{"_id":"themes/next/scripts/filters/comment/default-config.js","hash":"7f2d93af012c1e14b8596fecbfc7febb43d9b7f5","modified":1586188437865},{"_id":"themes/next/scripts/filters/comment/disqus.js","hash":"4c0c99c7e0f00849003dfce02a131104fb671137","modified":1586188437865},{"_id":"themes/next/scripts/filters/comment/disqusjs.js","hash":"7f8b92913d21070b489457fa5ed996d2a55f2c32","modified":1586188437866},{"_id":"themes/next/scripts/filters/comment/gitalk.js","hash":"e51dc3072c1ba0ea3008f09ecae8b46242ec6021","modified":1586188437866},{"_id":"themes/next/scripts/filters/comment/livere.js","hash":"d5fefc31fba4ab0188305b1af1feb61da49fdeb0","modified":1586188437866},{"_id":"themes/next/scripts/filters/comment/valine.js","hash":"6cbd85f9433c06bae22225ccf75ac55e04f2d106","modified":1586188437866},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"f70be8e229da7e1715c11dd0e975a2e71e453ac8","modified":1586188437949},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"62df49459d552bbf73841753da8011a1f5e875c8","modified":1586188437952},{"_id":"themes/next/source/css/_variables/base.styl","hash":"818508748b7a62e02035e87fe58e75b603ed56dc","modified":1586188437953},{"_id":"themes/next/source/css/_variables/Gemini.styl","hash":"f4e694e5db81e57442c7e34505a416d818b3044a","modified":1586188437948},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"612ec843372dae709acb17112c1145a53450cc59","modified":1586188437952},{"_id":"themes/next/source/js/schemes/muse.js","hash":"47c4f60eb7f7dc3303e84914b611dc34827069e1","modified":1586188437965},{"_id":"themes/next/source/lib/algolia-instant-search/LICENSE","hash":"b29db4c99aa5b8d574026f68804051ff4b75466e","modified":1586270319282},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css.map","hash":"d055d06395af598682873d1b458166dc6f513072","modified":1586270319283},{"_id":"themes/next/source/js/schemes/pisces.js","hash":"3d9d3c14b77044d66be1898a9a934696e9127c82","modified":1586188437965},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","hash":"6e01a39d7f6d58a0895957361b0a942543c18332","modified":1586270319283},{"_id":"themes/next/source/lib/algolia-instant-search/README.md","hash":"73c4092f53b27d322f89dc33ba26f826e10bd3fc","modified":1586270319282},{"_id":"themes/next/source/lib/pjax/.eslintignore","hash":"9039b3607514f44ee5955e986ee96920ea324398","modified":1586272861334},{"_id":"themes/next/source/lib/pjax/.editorconfig","hash":"c064a6369e31f846061fec42fd20c94cd34baebf","modified":1586272861333},{"_id":"themes/next/source/lib/pjax/.eslintrc.json","hash":"cdbc258b29270771e1846aeacc67198d0aed5447","modified":1586272861334},{"_id":"themes/next/source/lib/pjax/.gitignore","hash":"af77252405d1ae97b1d4139b53f2684b64d87596","modified":1586272861334},{"_id":"themes/next/source/lib/pjax/.travis.yml","hash":"0948420e18b2cec89c40093da5c7c14fa4c9bc5d","modified":1586272861334},{"_id":"themes/next/source/lib/pjax/.prettierignore","hash":"9039b3607514f44ee5955e986ee96920ea324398","modified":1586272861334},{"_id":"themes/next/source/lib/pjax/CHANGELOG.md","hash":"4482a245ac2c867102490c71d0fcbb502be0e3e5","modified":1586272861334},{"_id":"themes/next/source/lib/pjax/LICENSE","hash":"0cadc79604daeacf95062d1e5ccd43edbfaed836","modified":1586272861335},{"_id":"themes/next/source/lib/pjax/README.md","hash":"6e83f73f2c43fc4f85eda51daed5c321ec55c83c","modified":1586272861335},{"_id":"themes/next/source/lib/pjax/index.d.ts","hash":"b90fe99fe90ee7024d760467e75565da561f7ccd","modified":1586272861336},{"_id":"themes/next/source/lib/pjax/index.js","hash":"4af61bcf253ce67d67bb0f524b441869301de9a5","modified":1586272861337},{"_id":"themes/next/source/lib/pjax/package.json","hash":"1c0055fc51eee37e39ca9d5b6ea5078677b20201","modified":1586272861343},{"_id":"themes/next/source/lib/pjax/pjax.js","hash":"e973e2c6ffb6f6d7b4a1730ba0ed6d3628b2b39f","modified":1586272861344},{"_id":"themes/next/source/lib/pjax/pjax.min.js","hash":"68d0c6ad28f042c78fc18a6e9d782a7047c01905","modified":1586272861344},{"_id":"themes/next/source/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1586188437974},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1586188437975},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"8e7b57a72e757cf95278239641726bb2d5b869d1","modified":1586188437884},{"_id":"themes/next/source/css/_common/components/back-to-top-sidebar.styl","hash":"ca5e70662dcfb261c25191cc5db5084dcf661c76","modified":1586188437881},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"a47725574e1bee3bc3b63b0ff2039cc982b17eff","modified":1586188437883},{"_id":"themes/next/source/css/_common/components/reading-progress.styl","hash":"2e3bf7baf383c9073ec5e67f157d3cb3823c0957","modified":1586188437897},{"_id":"themes/next/source/css/_common/outline/mobile.styl","hash":"681d33e3bc85bdca407d93b134c089264837378c","modified":1586188437904},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"a1690e035b505d28bdef2b4424c13fc6312ab049","modified":1586188437905},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"0b2c4b78eead410020d7c4ded59c75592a648df8","modified":1586188437912},{"_id":"themes/next/source/css/_common/scaffolding/buttons.styl","hash":"a2e9e00962e43e98ec2614d6d248ef1773bb9b78","modified":1586188437913},{"_id":"themes/next/source/css/_common/scaffolding/comments.styl","hash":"b1f0fab7344a20ed6748b04065b141ad423cf4d9","modified":1586188437913},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"b56367ea676ea8e8783ea89cd4ab150c7da7a060","modified":1586188437916},{"_id":"themes/next/source/css/_common/scaffolding/pagination.styl","hash":"8f58570a1bbc34c4989a47a1b7d42a8030f38b06","modified":1586188437917},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"523fb7b653b87ae37fc91fc8813e4ffad87b0d7e","modified":1586188437917},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"b3bea92eef0e1fe2e7e294dac2184d16b5b8d666","modified":1586188437918},{"_id":"themes/next/source/css/_common/scaffolding/toggles.styl","hash":"179e33b8ac7f4d8a8e76736a7e4f965fe9ab8b42","modified":1586188437933},{"_id":"themes/next/source/css/_schemes/Mist/_layout.styl","hash":"bb7ace23345364eb14983e860a7172e1683a4c94","modified":1586188437938},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"7104b9cef90ca3b140d7a7afcf15540a250218fc","modified":1586188437939},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expand.styl","hash":"74558e8409e56f8b6c193d7ef93f5a661e381680","modified":1586435509832},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"f6516d0f7d89dc7b6c6e143a5af54b926f585d82","modified":1586188437938},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"a717969829fa6ef88225095737df3f8ee86c286b","modified":1586188437940},{"_id":"themes/next/source/css/_schemes/Gemini/index.styl","hash":"7785bd756e0c4acede3a47fec1ed7b55988385a5","modified":1586188437937},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"4d1c17345d2d39ef7698f7acf82dfc0f59308c34","modified":1586188437941},{"_id":"themes/next/source/css/_schemes/Muse/_sub-menu.styl","hash":"c48ccd8d6651fe1a01faff8f01179456d39ba9b1","modified":1586188437942},{"_id":"themes/next/source/css/_schemes/Muse/_sidebar.styl","hash":"2b2e7b5cea7783c9c8bb92655e26a67c266886f0","modified":1586188437942},{"_id":"themes/next/source/css/_schemes/Muse/_header.styl","hash":"f0131db6275ceaecae7e1a6a3798b8f89f6c850d","modified":1586188437940},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"6ad168288b213cec357e9b5a97674ff2ef3a910c","modified":1586188437943},{"_id":"themes/next/source/css/_schemes/Pisces/_header.styl","hash":"e282df938bd029f391c466168d0e68389978f120","modified":1586188437944},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"93db5dafe9294542a6b5f647643cb9deaced8e06","modified":1586188437941},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"70a4324b70501132855b5e59029acfc5d3da1ebd","modified":1586188437944},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"85da2f3006f4bef9a2199416ecfab4d288f848c4","modified":1586188437944},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"44f47c88c06d89d06f220f102649057118715828","modified":1586188437945},{"_id":"themes/next/source/css/_schemes/Pisces/_sub-menu.styl","hash":"e740deadcfc4f29c5cb01e40f9df6277262ba4e3","modified":1586188437945},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"6ad168288b213cec357e9b5a97674ff2ef3a910c","modified":1586188437946},{"_id":"themes/next/source/lib/algolia-instant-search/.git/config","hash":"ae057b7f33eac7ddf41bed1c7a3323eb69ec0b7c","modified":1586270319274},{"_id":"themes/next/source/lib/algolia-instant-search/.git/HEAD","hash":"acbaef275e46a7f14c1ef456fff2c8bbe8c84724","modified":1586270319272},{"_id":"themes/next/source/lib/algolia-instant-search/.git/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1586270311475},{"_id":"themes/next/source/lib/algolia-instant-search/.git/index","hash":"77e58ab1349feb75832132ece8b740c2af310c4b","modified":1586270319313},{"_id":"themes/next/source/lib/algolia-instant-search/.git/packed-refs","hash":"dc5939fb60e7abf14be4a48afc6f33d2ef552182","modified":1586270319268},{"_id":"themes/next/source/lib/algolia-instant-search/.github/stale.yml","hash":"fd0856f6745db8bd0228079ccb92a662830cc4fb","modified":1586270319282},{"_id":"themes/next/source/lib/pjax/.git/HEAD","hash":"acbaef275e46a7f14c1ef456fff2c8bbe8c84724","modified":1586272861324},{"_id":"themes/next/source/lib/pjax/.git/config","hash":"b668d1d9a28843557320d14b8660f46e0eeb76d7","modified":1586272861326},{"_id":"themes/next/source/lib/pjax/.git/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1586272847077},{"_id":"themes/next/source/lib/pjax/.git/index","hash":"2eed2a5f446fc52569198cc67e053099b03b6b22","modified":1586272861353},{"_id":"themes/next/source/lib/pjax/.git/packed-refs","hash":"edbdf218d3ec5dca511b8e29e88aebcf725d68ad","modified":1586272861320},{"_id":"themes/next/source/lib/pjax/example/forms.html","hash":"aa62fc6e697e17e16a947eb0176dc24e2e42d72c","modified":1586272861336},{"_id":"themes/next/source/lib/pjax/example/index.html","hash":"4a00b556253eeb11fc10013c8c3940a019154001","modified":1586272861336},{"_id":"themes/next/source/lib/pjax/example/example.js","hash":"48b27c93eb351d2fa91247c35038a9f1627e971a","modified":1586272861335},{"_id":"themes/next/source/lib/pjax/example/page2.html","hash":"7654e0a5a471bec5d74fb88d9f2f218817afdd52","modified":1586272861336},{"_id":"themes/next/source/lib/pjax/example/page3.html","hash":"8d1d6a9afd80caf29e5b22f10a849b23a864a6a4","modified":1586272861336},{"_id":"themes/next/source/lib/pjax/lib/eval-script.js","hash":"d5980b3c5f3c1a95427eab0d7d2263324fb72bca","modified":1586272861337},{"_id":"themes/next/source/lib/pjax/lib/abort-request.js","hash":"cbae038c94f70163340801cb608f4e503640b88d","modified":1586272861337},{"_id":"themes/next/source/lib/pjax/lib/execute-scripts.js","hash":"8c7c18b14c11af7e2d8dd0146b7df428bf8149bb","modified":1586272861338},{"_id":"themes/next/source/lib/pjax/lib/foreach-els.js","hash":"d8e50967878930891112f4acb46f47697ddc3ad7","modified":1586272861338},{"_id":"themes/next/source/lib/pjax/lib/foreach-selectors.js","hash":"b11d36344a7a6aa36d533a335785772c9bfb6bc9","modified":1586272861338},{"_id":"themes/next/source/lib/pjax/lib/is-supported.js","hash":"62ede7268080ab7efddd64fced8b3e79af2901f6","modified":1586272861339},{"_id":"themes/next/source/lib/pjax/lib/parse-options.js","hash":"054a902e9f350f7414b80f62419da004dd90aa37","modified":1586272861339},{"_id":"themes/next/source/lib/pjax/lib/send-request.js","hash":"15c341d066b0d60879ef3ca5ff858103381fb378","modified":1586272861341},{"_id":"themes/next/source/lib/pjax/lib/switches-selectors.js","hash":"f31b4af163db3d9a5b3bb7c7534a4a2dd5543435","modified":1586272861341},{"_id":"themes/next/source/lib/pjax/lib/switches.js","hash":"4e283f667c10e0fea15e269f1c73ccb699979bb4","modified":1586272861342},{"_id":"themes/next/source/lib/pjax/lib/uniqueid.js","hash":"eb127cf8936e5bdcaa7459cf5bd042ff96b5a387","modified":1586272861342},{"_id":"themes/next/source/lib/pjax/tests/setup.js","hash":"4a9489e72cbe98527931d95d68b68e2d6a9bff6e","modified":1586272861352},{"_id":"themes/next/source/lib/pjax/tests/test.ts","hash":"3a5222592fc1883ba6d07fbb2095e4bb4866e9d9","modified":1586272861353},{"_id":"themes/next/source/lib/font-awesome/css/all.min.css","hash":"0038dc97c79451578b7bd48af60ba62282b4082b","modified":1586188437968},{"_id":"themes/next/source/lib/font-awesome/webfonts/fa-regular-400.woff2","hash":"260bb01acd44d88dcb7f501a238ab968f86bef9e","modified":1586188437969},{"_id":"themes/next/source/lib/font-awesome/webfonts/fa-brands-400.woff2","hash":"509988477da79c146cb93fb728405f18e923c2de","modified":1586188437969},{"_id":"themes/next/source/lib/font-awesome/webfonts/fa-solid-900.woff2","hash":"75a88815c47a249eadb5f0edc1675957f860cca7","modified":1586188437970},{"_id":"themes/next/source/css/_common/components/pages/breadcrumb.styl","hash":"fafc96c86926b22afba8bb9418c05e6afbc05a57","modified":1586188437885},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"2bd0eb1512415325653b26d62a4463e6de83c5ac","modified":1586188437885},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"7504dbc5c70262b048143b2c37d2b5aa2809afa2","modified":1586188437886},{"_id":"themes/next/source/css/_common/components/pages/schedule.styl","hash":"e771dcb0b4673e063c0f3e2d73e7336ac05bcd57","modified":1586188437886},{"_id":"themes/next/source/css/_common/components/pages/tag-cloud.styl","hash":"d21d4ac1982c13d02f125a67c065412085a92ff2","modified":1586188437886},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"e75693f33dbc92afc55489438267869ae2f3db54","modified":1586188437887},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"902569a9dea90548bec21a823dd3efd94ff7c133","modified":1586188437892},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"ded41fd9d20a5e8db66aaff7cc50f105f5ef2952","modified":1586188437892},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"72d495a88f7d6515af425c12cbc67308a57d88ea","modified":1586188437893},{"_id":"themes/next/source/css/_common/components/post/post-header.styl","hash":"65cb6edb69e94e70e3291e9132408361148d41d5","modified":1586188437894},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"6a97bcfa635d637dc59005be3b931109e0d1ead5","modified":1586188437894},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"eca4d80dd0df1c3b1bc06bd39e6a4bd6c56198df","modified":1586188437894},{"_id":"themes/next/source/css/_common/components/post/post-rtl.styl","hash":"f5c2788a78790aca1a2f37f7149d6058afb539e0","modified":1586188437895},{"_id":"themes/next/source/css/_common/components/post/post-widgets.styl","hash":"5b5649b9749e3fd8b63aef22ceeece0a6e1df605","modified":1586188437896},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"a760ee83ba6216871a9f14c5e56dc9bd0d9e2103","modified":1586188437896},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"99e12c9ce3d14d4837e3d3f12fc867ba9c565317","modified":1586188437895},{"_id":"themes/next/source/css/_common/components/post/post-followme.styl","hash":"1e4190c10c9e0c9ce92653b0dbcec21754b0b69d","modified":1586188437893},{"_id":"themes/next/source/css/_common/components/post/post-copyright.styl","hash":"f49ca072b5a800f735e8f01fc3518f885951dd8e","modified":1586188437892},{"_id":"themes/next/source/css/_common/components/third-party/math.styl","hash":"b49e9fbd3c182b8fc066b8c2caf248e3eb748619","modified":1586188437898},{"_id":"themes/next/source/css/_common/components/third-party/related-posts.styl","hash":"e2992846b39bf3857b5104675af02ba73e72eed5","modified":1586188437898},{"_id":"themes/next/source/css/_common/components/third-party/search.styl","hash":"9f0b93d109c9aec79450c8a0cf4a4eab717d674d","modified":1586188437899},{"_id":"themes/next/source/css/_common/components/third-party/gitalk.styl","hash":"8a7fc03a568b95be8d3337195e38bc7ec5ba2b23","modified":1586188437897},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"9a878d0119785a2316f42aebcceaa05a120b9a7a","modified":1586188437900},{"_id":"themes/next/source/css/_common/outline/footer/footer.styl","hash":"454a4aebfabb4469b92a8cbb49f46c49ac9bf165","modified":1586188437900},{"_id":"themes/next/source/css/_common/outline/header/bookmark.styl","hash":"e2d606f1ac343e9be4f15dbbaf3464bc4df8bf81","modified":1586188437901},{"_id":"themes/next/source/css/_common/outline/header/github-banner.styl","hash":"e7a9fdb6478b8674b1cdf94de4f8052843fb71d9","modified":1586188437902},{"_id":"themes/next/source/css/_common/outline/header/header.styl","hash":"a793cfff86ad4af818faef04c18013077873f8f0","modified":1586188437902},{"_id":"themes/next/source/css/_common/outline/header/headerband.styl","hash":"0caf32492692ba8e854da43697a2ec8a41612194","modified":1586188437902},{"_id":"themes/next/source/css/_common/outline/header/menu.styl","hash":"5f432a6ed9ca80a413c68b00e93d4a411abf280a","modified":1586188437903},{"_id":"themes/next/source/css/_common/outline/header/site-meta.styl","hash":"45a239edca44acecf971d99b04f30a1aafbf6906","modified":1586188437903},{"_id":"themes/next/source/css/_common/outline/header/site-nav.styl","hash":"b2fc519828fe89a1f8f03ff7b809ad68cd46f3d7","modified":1586188437904},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-author-links.styl","hash":"2cb1876e9e0c9ac32160888af27b1178dbcb0616","modified":1586188437905},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-author.styl","hash":"fa0222197b5eee47e18ac864cdc6eac75678b8fe","modified":1586188437906},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-blogroll.styl","hash":"44487d9ab290dc97871fa8dd4487016deb56e123","modified":1586188437907},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-button.styl","hash":"1f0e7fbe80956f47087c2458ea880acf7a83078b","modified":1586188437908},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-dimmer.styl","hash":"9b479c2f9a9bfed77885e5093b8245cc5d768ec7","modified":1586188437908},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-nav.styl","hash":"a960a2dd587b15d3b3fe1b59525d6fa971c6a6ec","modified":1586188437909},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-toggle.styl","hash":"b3220db827e1adbca7880c2bb23e78fa7cbe95cb","modified":1586188437910},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar.styl","hash":"a9cd93c36bae5af9223e7804963096274e8a4f03","modified":1586188437911},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-toc.styl","hash":"a05a4031e799bc864a4536f9ef61fe643cd421af","modified":1586188437910},{"_id":"themes/next/source/css/_common/outline/sidebar/site-state.styl","hash":"2a47f8a6bb589c2fb635e6c1e4a2563c7f63c407","modified":1586188437912},{"_id":"themes/next/source/css/_common/scaffolding/highlight/copy-code.styl","hash":"f71a3e86c05ea668b008cf05a81f67d92b6d65e4","modified":1586188437913},{"_id":"themes/next/source/css/_common/scaffolding/highlight/diff.styl","hash":"d3f73688bb7423e3ab0de1efdf6db46db5e34f80","modified":1586188437914},{"_id":"themes/next/source/css/_common/scaffolding/highlight/highlight.styl","hash":"35c871a809afa8306c8cde13651010e282548bc6","modified":1586188437915},{"_id":"themes/next/source/css/_common/scaffolding/highlight/theme.styl","hash":"3b3acc5caa0b95a2598bef4eeacb21bab21bea56","modified":1586188437916},{"_id":"themes/next/source/css/_common/scaffolding/tags/blockquote-center.styl","hash":"1d2778ca5aeeeafaa690dc2766b01b352ab76a02","modified":1586188437918},{"_id":"themes/next/source/css/_common/scaffolding/tags/group-pictures.styl","hash":"709d10f763e357e1472d6471f8be384ec9e2d983","modified":1586188437919},{"_id":"themes/next/source/css/_common/scaffolding/tags/label.styl","hash":"d7fce4b51b5f4b7c31d93a9edb6c6ce740aa0d6b","modified":1586188437929},{"_id":"themes/next/source/css/_common/scaffolding/tags/note.styl","hash":"e4d9a77ffe98e851c1202676940097ba28253313","modified":1586188437931},{"_id":"themes/next/source/css/_common/scaffolding/tags/tabs.styl","hash":"f23670f1d8e749f3e83766d446790d8fd9620278","modified":1586188437932},{"_id":"themes/next/source/css/_common/scaffolding/tags/tags.styl","hash":"9e4c0653cfd3cc6908fa0d97581bcf80861fb1e7","modified":1586188437933},{"_id":"themes/next/source/css/_common/scaffolding/tags/pdf.styl","hash":"b49c64f8e9a6ca1c45c0ba98febf1974fdd03616","modified":1586188437932},{"_id":"themes/next/source/lib/algolia-instant-search/.git/hooks/pre-applypatch.sample","hash":"f208287c1a92525de9f5462e905a9d31de1e2d75","modified":1586270311480},{"_id":"themes/next/source/lib/algolia-instant-search/.git/hooks/fsmonitor-watchman.sample","hash":"f7c0aa40cb0d620ff0bca3efe3521ec79e5d7156","modified":1586270311477},{"_id":"themes/next/source/lib/algolia-instant-search/.git/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1586270311475},{"_id":"themes/next/source/lib/algolia-instant-search/.git/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1586270311479},{"_id":"themes/next/source/lib/algolia-instant-search/.git/hooks/pre-commit.sample","hash":"33729ad4ce51acda35094e581e4088f3167a0af8","modified":1586270311476},{"_id":"themes/next/source/lib/algolia-instant-search/.git/hooks/pre-merge-commit.sample","hash":"04c64e58bc25c149482ed45dbd79e40effb89eb7","modified":1586270311480},{"_id":"themes/next/source/lib/algolia-instant-search/.git/hooks/pre-rebase.sample","hash":"288efdc0027db4cfd8b7c47c4aeddba09b6ded12","modified":1586270311476},{"_id":"themes/next/source/lib/algolia-instant-search/.git/hooks/pre-push.sample","hash":"5c8518bfd1d1d3d2c1a7194994c0a16d8a313a41","modified":1586270311481},{"_id":"themes/next/source/lib/algolia-instant-search/.git/info/exclude","hash":"c879df015d97615050afa7b9641e3352a1e701ac","modified":1586270311474},{"_id":"themes/next/source/lib/algolia-instant-search/.git/hooks/pre-receive.sample","hash":"705a17d259e7896f0082fe2e9f2c0c3b127be5ac","modified":1586270311478},{"_id":"themes/next/source/lib/algolia-instant-search/.git/hooks/update.sample","hash":"e729cd61b27c128951d139de8e7c63d1a3758dde","modified":1586270311481},{"_id":"themes/next/source/lib/algolia-instant-search/.git/hooks/prepare-commit-msg.sample","hash":"2584806ba147152ae005cb675aa4f01d5d068456","modified":1586270311479},{"_id":"themes/next/source/lib/algolia-instant-search/.git/hooks/applypatch-msg.sample","hash":"4de88eb95a5e93fd27e78b5fb3b5231a8d8917dd","modified":1586270311477},{"_id":"themes/next/source/lib/algolia-instant-search/.git/logs/HEAD","hash":"b8b41381c48951f4ad88dedce3d474662b1a7983","modified":1586270319273},{"_id":"themes/next/source/lib/pjax/.git/hooks/applypatch-msg.sample","hash":"4de88eb95a5e93fd27e78b5fb3b5231a8d8917dd","modified":1586272847079},{"_id":"themes/next/source/lib/pjax/.git/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1586272847078},{"_id":"themes/next/source/lib/pjax/.git/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1586272847082},{"_id":"themes/next/source/lib/pjax/.git/hooks/pre-applypatch.sample","hash":"f208287c1a92525de9f5462e905a9d31de1e2d75","modified":1586272847083},{"_id":"themes/next/source/lib/pjax/.git/hooks/pre-commit.sample","hash":"33729ad4ce51acda35094e581e4088f3167a0af8","modified":1586272847079},{"_id":"themes/next/source/lib/pjax/.git/hooks/pre-merge-commit.sample","hash":"04c64e58bc25c149482ed45dbd79e40effb89eb7","modified":1586272847082},{"_id":"themes/next/source/lib/pjax/.git/hooks/pre-push.sample","hash":"5c8518bfd1d1d3d2c1a7194994c0a16d8a313a41","modified":1586272847083},{"_id":"themes/next/source/lib/pjax/.git/hooks/pre-rebase.sample","hash":"288efdc0027db4cfd8b7c47c4aeddba09b6ded12","modified":1586272847079},{"_id":"themes/next/source/lib/pjax/.git/hooks/pre-receive.sample","hash":"705a17d259e7896f0082fe2e9f2c0c3b127be5ac","modified":1586272847081},{"_id":"themes/next/source/lib/pjax/.git/hooks/fsmonitor-watchman.sample","hash":"f7c0aa40cb0d620ff0bca3efe3521ec79e5d7156","modified":1586272847080},{"_id":"themes/next/source/lib/pjax/.git/hooks/prepare-commit-msg.sample","hash":"2584806ba147152ae005cb675aa4f01d5d068456","modified":1586272847081},{"_id":"themes/next/source/lib/pjax/.git/hooks/update.sample","hash":"e729cd61b27c128951d139de8e7c63d1a3758dde","modified":1586272847084},{"_id":"themes/next/source/lib/pjax/.git/info/exclude","hash":"c879df015d97615050afa7b9641e3352a1e701ac","modified":1586272847077},{"_id":"themes/next/source/lib/pjax/.git/logs/HEAD","hash":"8f2241dd55a9f77d8cea0f877a7d1fba0fba7892","modified":1586272861325},{"_id":"themes/next/source/lib/pjax/lib/events/off.js","hash":"79920b24246e150f1c73511f1a271b93b9c5d9c8","modified":1586272861337},{"_id":"themes/next/source/lib/pjax/lib/events/on.js","hash":"111fba16cc4ca701aefedea2589c832b60af303d","modified":1586272861338},{"_id":"themes/next/source/lib/pjax/lib/events/trigger.js","hash":"c05ba73199c5e2c7682655491ed37743bd451751","modified":1586272861338},{"_id":"themes/next/source/lib/pjax/lib/proto/attach-form.js","hash":"b41c66e58897e6371fbd04cd2b9eb7bae10e0d89","modified":1586272861340},{"_id":"themes/next/source/lib/pjax/lib/proto/attach-link.js","hash":"d15a61235aa8c1615e60ea34d9bbee834be804d0","modified":1586272861340},{"_id":"themes/next/source/lib/pjax/lib/proto/handle-response.js","hash":"f68bab958cce4dbbcb91920d7a8aba55b9066b41","modified":1586272861340},{"_id":"themes/next/source/lib/pjax/lib/proto/log.js","hash":"c728730594aed7d81509787c5bb487af014415e1","modified":1586272861340},{"_id":"themes/next/source/lib/pjax/lib/proto/parse-element.js","hash":"52bef8a845aab0d54907f73875fa58b4084019be","modified":1586272861341},{"_id":"themes/next/source/lib/pjax/lib/util/clone.js","hash":"55027b88e007818c6963205fcd0090a61af8237c","modified":1586272861342},{"_id":"themes/next/source/lib/pjax/lib/util/contains.js","hash":"fcc9be0477d941b7c4ba71de328773e556ded7ce","modified":1586272861342},{"_id":"themes/next/source/lib/pjax/lib/util/noop.js","hash":"2c9f7e231af1a62db195875ca62df7edc253c3c4","modified":1586272861343},{"_id":"themes/next/source/lib/pjax/lib/util/update-query-string.js","hash":"eefcbff322f8c607865d47ee8fa49f1c8bfa8d7a","modified":1586272861343},{"_id":"themes/next/source/lib/pjax/lib/util/extend.js","hash":"e599aaef93e3a00ccbd92cd87df09898d712e398","modified":1586272861343},{"_id":"themes/next/source/lib/pjax/tests/lib/abort-request.js","hash":"96d7a604ca275455199bd94d16b9cdc254bee9b9","modified":1586272861345},{"_id":"themes/next/source/lib/pjax/tests/lib/eval-scripts.js","hash":"3c9125a04cec9d511f16f9311656533ef6a115d1","modified":1586272861345},{"_id":"themes/next/source/lib/pjax/tests/lib/events.js","hash":"70ca7ec140d1dcf8c4958e7b6788b09ef2b60181","modified":1586272861346},{"_id":"themes/next/source/lib/pjax/tests/lib/execute-scripts.js","hash":"2d02a0151ead9924516cdae9308f8667b27a7ea7","modified":1586272861346},{"_id":"themes/next/source/lib/pjax/tests/lib/foreach-els.js","hash":"85995dd27d0d866cfaf5c560732fab8b0099938c","modified":1586272861346},{"_id":"themes/next/source/lib/pjax/tests/lib/foreach-selectors.js","hash":"898b48ef191719070488f16a54fba8a794b10057","modified":1586272861347},{"_id":"themes/next/source/lib/pjax/tests/lib/is-supported.js","hash":"e25c7e69c8b7a64a44affcae317adb2b3889aee6","modified":1586272861347},{"_id":"themes/next/source/lib/pjax/tests/lib/parse-options.js","hash":"45ab302da33e5457a71fd22bbd082e51f5b06b49","modified":1586272861347},{"_id":"themes/next/source/lib/pjax/tests/lib/send-request.js","hash":"d6adad7f95754c53b9885c0999a5118995fdc76f","modified":1586272861349},{"_id":"themes/next/source/lib/pjax/tests/lib/switch-selectors.js","hash":"993dd67b1b629288feb8d167fb12b602626cf1d5","modified":1586272861350},{"_id":"themes/next/source/lib/pjax/tests/lib/switches.js","hash":"f5dfdf57bafd2b4edd5f854d70837b5fe760756e","modified":1586272861350},{"_id":"themes/next/source/lib/pjax/tests/lib/uniqueid.js","hash":"430550f31b9e6356c2e3a033c1b418bd6acd9667","modified":1586272861351},{"_id":"themes/next/source/lib/algolia-instant-search/.git/objects/08/777d50ffb9e517f20d2cbf2ea19130862fb501","hash":"110fcf7830673d2a7715f8347834f7393597ecd0","modified":1586270319246},{"_id":"themes/next/source/lib/algolia-instant-search/.git/objects/0c/dada082d621dbfdd00f7020c33dc751129167f","hash":"b490c11cdefde6b331a7d4ddb055e34ad08459d8","modified":1586270313022},{"_id":"themes/next/source/lib/algolia-instant-search/.git/objects/2b/a3834eb798ac34ab72ed5fdf7a56d175fee554","hash":"e8edf92b35519a3ec9333c7b54243eca7edc37f2","modified":1586270318287},{"_id":"themes/next/source/lib/algolia-instant-search/.git/objects/2f/9eba51ec174b1e0c719d12cafa7c3c07140471","hash":"fc994d9d8b3b21ec7c941eea7e3862970e297e9b","modified":1586270313023},{"_id":"themes/next/source/lib/algolia-instant-search/.git/objects/54/7b348ba5c8725ea590087860a352c8ff41cb98","hash":"79281e0d03b3acdbce61914bbfef33ae0c29be6d","modified":1586270313021},{"_id":"themes/next/source/lib/algolia-instant-search/.git/objects/26/041255661ec27600579e1ba00c5898aa6f8b48","hash":"d6013a8e8a369061c0ef69f48f89ec61320f0ba7","modified":1586270319250},{"_id":"themes/next/source/lib/algolia-instant-search/.git/objects/59/0f6f985f6018c397b2499bb49e599b7109ec06","hash":"650b4b24a81daa3b02646b7ffd5ccdac11ab6be8","modified":1586270318288},{"_id":"themes/next/source/lib/algolia-instant-search/.git/objects/69/a20d65d83035fdb01734a8eabe3340f740a4cb","hash":"9e95b02d8e43ec92e06bee3f60dffb74e8e7b9fa","modified":1586270313024},{"_id":"themes/next/source/lib/algolia-instant-search/.git/objects/6d/b4c7bd4b80f34ae7165de7d91291759569d572","hash":"f04a0f8b9dde5d5c36f470634ca8f958a3b6aa15","modified":1586270319249},{"_id":"themes/next/source/lib/algolia-instant-search/.git/objects/6d/c836cd5e780134d73d56944a2e7039bacc7cb3","hash":"5a6fc74f4eff0b3bf6429b28df2a5d721c92933a","modified":1586270318285},{"_id":"themes/next/source/lib/algolia-instant-search/.git/objects/0d/49463cf444a6411519b6d7b5bb65fa7e96c4dc","hash":"8baa9ed7c87fbf1a9fdeb378c656471cb98c48e5","modified":1586270313027},{"_id":"themes/next/source/lib/algolia-instant-search/.git/objects/74/1e8eedaad6125d0feee4afcc124ba0bffc48c5","hash":"0963b162d9de3c8df0d966c07299efd39389da5d","modified":1586270313028},{"_id":"themes/next/source/lib/algolia-instant-search/.git/objects/72/77a0daac0e35928cb7e7905e28b7d490f18fea","hash":"fd53bdb026530aa2254de2dbc21f91c6ac4ca66a","modified":1586270313210},{"_id":"themes/next/source/lib/algolia-instant-search/.git/objects/92/1eb7be3c529d19b6c92ce67e4099e8f7d6adf3","hash":"023bef5405aee54ae6b00e1e02eb6984b691ccbf","modified":1586270319247},{"_id":"themes/next/source/lib/algolia-instant-search/.git/objects/be/20adccf394f75e31e8f8b5fdf22728a1770602","hash":"665067f8dc3adcb99fa753845e7be4440eed9fc3","modified":1586270313014},{"_id":"themes/next/source/lib/algolia-instant-search/.git/objects/a4/0c9f2635389a60948f0f2235f037277f8acff6","hash":"ec4074d54b477aea533dab38384dd9a52fa58854","modified":1586270313026},{"_id":"themes/next/source/lib/algolia-instant-search/.git/objects/c7/fbb078f1639009ff35512e07a344065d222948","hash":"123afd34f26169b38c32f4b035562726036fd960","modified":1586270313016},{"_id":"themes/next/source/lib/algolia-instant-search/.git/objects/c9/af6112eed1dab47eba55651562f768bfbc861d","hash":"a3ce783cca46bdcba0a1eda2d034c77221e07e06","modified":1586270313017},{"_id":"themes/next/source/lib/algolia-instant-search/.git/objects/b2/88437db05849d7556c1ca77f48e1e467c49837","hash":"08035d18e8af952a4da5c5b726fa291fcf5664db","modified":1586270319252},{"_id":"themes/next/source/lib/algolia-instant-search/.git/objects/da/0b2b5f2ab8f750444499f17e4cbf6074aef7f0","hash":"b343b66897d47a95d9a4363eaab8ff61a1c8a683","modified":1586270313018},{"_id":"themes/next/source/lib/algolia-instant-search/.git/refs/heads/master","hash":"cb263068622d3a28d619a3576c4efbed8e9e546d","modified":1586270319273},{"_id":"themes/next/source/lib/algolia-instant-search/.git/objects/f5/e09255981809338b668b56510e360595fc12fa","hash":"c385e27cf914367d1fde121a2c920b93832cf2ed","modified":1586270319245},{"_id":"themes/next/source/lib/algolia-instant-search/.git/objects/eb/c17e345ba26077f759ce9f3af0868234200765","hash":"7e458a3ddef5d0a43916751453e8d404ab22cc2a","modified":1586270319253},{"_id":"themes/next/source/lib/pjax/.git/objects/pack/pack-6676209366959508b7039bccc564fff2659503c6.idx","hash":"eec4e30af70e4d372ab4327a48d2d5b40ae113b9","modified":1586272861307},{"_id":"themes/next/source/lib/pjax/.git/refs/heads/master","hash":"3c8414e83b32974579667c4c79e04af7d699edde","modified":1586272861325},{"_id":"themes/next/source/lib/pjax/tests/lib/proto/attach-form.js","hash":"3614a962e3185b354a2e0d987bcecdef4a209da6","modified":1586272861348},{"_id":"themes/next/source/lib/pjax/tests/lib/proto/attach-link.js","hash":"9d283cb0b09730e932673c73a3352a2d2e8939fa","modified":1586272861348},{"_id":"themes/next/source/lib/pjax/tests/lib/proto/handle-response.js","hash":"26e0e334f0b20ff2fe75b3ab12a93ce44a5823f0","modified":1586272861349},{"_id":"themes/next/source/lib/pjax/tests/lib/proto/parse-element.js","hash":"474edc8844028de67cbad054da79c05727620785","modified":1586272861349},{"_id":"themes/next/source/lib/pjax/tests/lib/util/clone.js","hash":"4b0e62bd0f4eef3549b0da70987f63ce4953bef0","modified":1586272861351},{"_id":"themes/next/source/lib/pjax/tests/lib/util/contains.js","hash":"bc0c8be855e9736cb256a2aa44fd46f3a7d1d6c5","modified":1586272861351},{"_id":"themes/next/source/lib/pjax/tests/lib/util/extend.js","hash":"d45488ff6f8e3e1b59a62d0c88c86b750fe50ed4","modified":1586272861352},{"_id":"themes/next/source/lib/pjax/tests/lib/util/noop.js","hash":"6959a4c02c41453a5edfa4163e36752fcfa3edf9","modified":1586272861352},{"_id":"themes/next/source/lib/pjax/tests/lib/util/update-query-string.js","hash":"4158dcd877c5f229400417e0da22eb4c5b8e8e38","modified":1586272861352},{"_id":"themes/next/source/lib/algolia-instant-search/.git/logs/refs/heads/master","hash":"b8b41381c48951f4ad88dedce3d474662b1a7983","modified":1586270319273},{"_id":"themes/next/source/lib/algolia-instant-search/.git/objects/2b/d5d590d07a161741477ace2339eb37c07cc40c","hash":"10a1f52729a36d3b9d594e93473fef26fed768e1","modified":1586270319243},{"_id":"themes/next/source/lib/pjax/.git/logs/refs/heads/master","hash":"8f2241dd55a9f77d8cea0f877a7d1fba0fba7892","modified":1586272861325},{"_id":"themes/next/source/lib/algolia-instant-search/.git/refs/remotes/origin/HEAD","hash":"d9427cda09aba1cdde5c69c2b13c905bddb0bc51","modified":1586270319271},{"_id":"themes/next/source/lib/algolia-instant-search/.git/objects/a7/8511a30ca600e9db1ecc1a835c0d4b65fbec6b","hash":"c5fbf2c49ade74e34a3ed2cce39a6b54e4686e3e","modified":1586270313931},{"_id":"themes/next/source/lib/pjax/.git/refs/remotes/origin/HEAD","hash":"d9427cda09aba1cdde5c69c2b13c905bddb0bc51","modified":1586272861324},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","hash":"d8f2e1de2142c44500d41debeeb319ba8adb1ccd","modified":1586270319286},{"_id":"themes/next/source/lib/pjax/.git/logs/refs/remotes/origin/HEAD","hash":"8f2241dd55a9f77d8cea0f877a7d1fba0fba7892","modified":1586272861323},{"_id":"themes/next/source/lib/algolia-instant-search/.git/logs/refs/remotes/origin/HEAD","hash":"b8b41381c48951f4ad88dedce3d474662b1a7983","modified":1586270319271},{"_id":"themes/next/source/images/avatar.jpg","hash":"ea20921ecd4d0be8f9b78d7c98ad28e82c8e6664","modified":1585926291289},{"_id":"themes/next/source/lib/pjax/.git/objects/pack/pack-6676209366959508b7039bccc564fff2659503c6.pack","hash":"9eee1305363808025c13b7012f1362993ec9a9f2","modified":1586272861306},{"_id":"themes/next/source/lib/algolia-instant-search/.git/objects/e4/c7790c85a26069925132383ac286502de41c71","hash":"76b2ebe5b1dc357c9c59c97dbe17c35069257531","modified":1586270318284},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js.map","hash":"753adf35c67993265fb13b827aeee3f95e3442af","modified":1586270319311},{"_id":"public/search.json","hash":"924894a5ac1abc5e09ffac3f222318160ecc176d","modified":1586275756335},{"_id":"public/categories/index.html","hash":"56348e20edb57287ec403e2cfb90b68abc6676b0","modified":1586435710396},{"_id":"public/link/index.html","hash":"b543804330ce544142d63100fe03d4d242101ccb","modified":1586435710396},{"_id":"public/tags/index.html","hash":"9e751e69a4950da2e1739e67312ea7457d82b1fe","modified":1586435710396},{"_id":"public/categories/Hexo/index.html","hash":"aca49a1d18a80c29c010bf7f2f1050040b74cd26","modified":1586435710396},{"_id":"public/categories/先別急著寫-leetcode-課程心得/index.html","hash":"8e4b15b0bfe9ac7f1ff641b90636f7a23d9189ee","modified":1586435710396},{"_id":"public/categories/JavaScript-的怪奇物語/index.html","hash":"2dc1a2f954e622d430479d437d652514afa4504c","modified":1586435710396},{"_id":"public/tags/hexo/index.html","hash":"a7d31402b1c4d3667ee7a83b36c85f2ca30db9e8","modified":1586435710396},{"_id":"public/tags/next/index.html","hash":"d28fd94f3555eb5628cb481ced0fe187acbcc1c2","modified":1586435710396},{"_id":"public/tags/先別急著寫-leetcode/index.html","hash":"8c969b3d71bc0c0200eda2b3c9539d9cbacdbe78","modified":1586435710396},{"_id":"public/2020/04/03/先別急著寫leetcode課程心得/index.html","hash":"95cd97f21ab51899c07d826e47663381755dc506","modified":1586435710396},{"_id":"public/2020/04/01/JavaScript的怪奇物語/index.html","hash":"f421a5a7e72c07339b93686e2406b804bda2fdd1","modified":1586435710396},{"_id":"public/2020/03/30/基礎Vue-js-3/index.html","hash":"35f6fa1404e3dea98082b9c7d884ffa37399945f","modified":1586435710396},{"_id":"public/2020/03/30/基礎Vue-js-2/index.html","hash":"94f082b07405c05e6ba86d8a6a453677252f87a3","modified":1586435710396},{"_id":"public/2020/03/30/基礎 Vue.js-1/index.html","hash":"f8e24c90e6149a1ded2e048fb045ee797b1e0b04","modified":1586435710396},{"_id":"public/2020/03/28/使用Hexo在GitHub部署Blog/index.html","hash":"0320f970fd644041ce52ab2de53919fcc84e78cb","modified":1586435710396},{"_id":"public/archives/index.html","hash":"f5702ae7ca9a6e012e000d79c953ec4bf4eb1f22","modified":1586435710396},{"_id":"public/archives/2020/index.html","hash":"63bf47dd37bd0cb979ae3bee249ff893be05372b","modified":1586435710396},{"_id":"public/archives/2020/03/index.html","hash":"404c0531bd0926c62fdc85b39b1930a9960ef05c","modified":1586435710396},{"_id":"public/archives/2020/04/index.html","hash":"fde91bfc36328c79536e13353721ca0a471c6ad5","modified":1586435710396},{"_id":"public/categories/vue/index.html","hash":"04501e19632bb13b189000d1b6b317f204f47952","modified":1586435710396},{"_id":"public/index.html","hash":"629c188054924fac6e75dd0289ca01b0381331af","modified":1586435710396},{"_id":"public/tags/javascript/index.html","hash":"b6e7713724c2b4831c5ee2000eabdc158f66a05c","modified":1586435710396},{"_id":"public/tags/vue/index.html","hash":"494704de3abc13a1f2b4762e6ab1c05031eb6d73","modified":1586435710396},{"_id":"public/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1586275756335},{"_id":"public/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1586275756335},{"_id":"public/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1586275756335},{"_id":"public/images/algolia_logo.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1586275756335},{"_id":"public/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1586275756335},{"_id":"public/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1586275756335},{"_id":"public/images/logo.svg","hash":"d29cacbae1bdc4bbccb542107ee0524fe55ad6de","modified":1586275756335},{"_id":"public/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1586275756335},{"_id":"public/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1586275756335},{"_id":"public/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1586275756335},{"_id":"public/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1586275756335},{"_id":"public/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1586275756335},{"_id":"public/lib/algolia-instant-search/LICENSE","hash":"b29db4c99aa5b8d574026f68804051ff4b75466e","modified":1586275756335},{"_id":"public/lib/algolia-instant-search/instantsearch.min.css.map","hash":"d055d06395af598682873d1b458166dc6f513072","modified":1586275756335},{"_id":"public/lib/pjax/LICENSE","hash":"0cadc79604daeacf95062d1e5ccd43edbfaed836","modified":1586275756335},{"_id":"public/lib/pjax/index.d.ts","hash":"b90fe99fe90ee7024d760467e75565da561f7ccd","modified":1586275756335},{"_id":"public/lib/pjax/tests/test.ts","hash":"3a5222592fc1883ba6d07fbb2095e4bb4866e9d9","modified":1586275756335},{"_id":"public/lib/font-awesome/webfonts/fa-regular-400.woff2","hash":"260bb01acd44d88dcb7f501a238ab968f86bef9e","modified":1586275756335},{"_id":"public/assets/algolia/algoliasearchLite.min.js","hash":"284416885e4e80e27fa4eae6fc305f4de15b914c","modified":1586275756335},{"_id":"public/lib/font-awesome/webfonts/fa-brands-400.woff2","hash":"509988477da79c146cb93fb728405f18e923c2de","modified":1586275756335},{"_id":"public/lib/font-awesome/webfonts/fa-solid-900.woff2","hash":"75a88815c47a249eadb5f0edc1675957f860cca7","modified":1586275756335},{"_id":"public/assets/algolia/algoliasearchLite.js","hash":"e56ad6b82caf69066de545201014291fc961635e","modified":1586275756335},{"_id":"public/assets/algolia/algoliasearch.min.js","hash":"a3b131a9a47ccc16f4dd8988fabb6d306548db2f","modified":1586275756335},{"_id":"public/js/local-search.js","hash":"d6673063958127a03881dab2f0376a47f5e08a88","modified":1586275756335},{"_id":"public/js/bookmark.js","hash":"a00945ff886e9f6f835731cdaf29a3a3727c8877","modified":1586275756335},{"_id":"public/js/next-boot.js","hash":"a22eeb6048ddd6b9224c8a671cbcfa303a2f7a1a","modified":1586275756335},{"_id":"public/js/algolia-search.js","hash":"23cc3c013185eb97ef347c3b4c92d928f2f3398f","modified":1586275756335},{"_id":"public/js/utils.js","hash":"91d174e12c61c332f3b06085d635c2b0f686a758","modified":1586275756335},{"_id":"public/js/schemes/muse.js","hash":"47c4f60eb7f7dc3303e84914b611dc34827069e1","modified":1586275756335},{"_id":"public/js/motion.js","hash":"72df86f6dfa29cce22abeff9d814c9dddfcf13a9","modified":1586275756335},{"_id":"public/js/schemes/pisces.js","hash":"3d9d3c14b77044d66be1898a9a934696e9127c82","modified":1586275756335},{"_id":"public/lib/algolia-instant-search/instantsearch.min.css","hash":"6e01a39d7f6d58a0895957361b0a942543c18332","modified":1586275756335},{"_id":"public/lib/pjax/index.js","hash":"4af61bcf253ce67d67bb0f524b441869301de9a5","modified":1586275756335},{"_id":"public/lib/pjax/package.json","hash":"da55143475b12cb91a44aeb5a995c53879fe3326","modified":1586275756335},{"_id":"public/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1586275756335},{"_id":"public/lib/pjax/example/example.js","hash":"48b27c93eb351d2fa91247c35038a9f1627e971a","modified":1586275756335},{"_id":"public/lib/pjax/lib/eval-script.js","hash":"d5980b3c5f3c1a95427eab0d7d2263324fb72bca","modified":1586275756335},{"_id":"public/lib/pjax/lib/abort-request.js","hash":"cbae038c94f70163340801cb608f4e503640b88d","modified":1586275756335},{"_id":"public/lib/pjax/lib/execute-scripts.js","hash":"8c7c18b14c11af7e2d8dd0146b7df428bf8149bb","modified":1586275756335},{"_id":"public/lib/pjax/lib/foreach-els.js","hash":"d8e50967878930891112f4acb46f47697ddc3ad7","modified":1586275756335},{"_id":"public/lib/pjax/lib/foreach-selectors.js","hash":"b11d36344a7a6aa36d533a335785772c9bfb6bc9","modified":1586275756335},{"_id":"public/lib/pjax/lib/is-supported.js","hash":"62ede7268080ab7efddd64fced8b3e79af2901f6","modified":1586275756335},{"_id":"public/lib/pjax/lib/parse-options.js","hash":"054a902e9f350f7414b80f62419da004dd90aa37","modified":1586275756335},{"_id":"public/lib/pjax/lib/send-request.js","hash":"15c341d066b0d60879ef3ca5ff858103381fb378","modified":1586275756335},{"_id":"public/lib/pjax/lib/switches-selectors.js","hash":"f31b4af163db3d9a5b3bb7c7534a4a2dd5543435","modified":1586275756335},{"_id":"public/lib/pjax/lib/switches.js","hash":"4e283f667c10e0fea15e269f1c73ccb699979bb4","modified":1586275756335},{"_id":"public/lib/pjax/lib/uniqueid.js","hash":"eb127cf8936e5bdcaa7459cf5bd042ff96b5a387","modified":1586275756335},{"_id":"public/lib/pjax/tests/setup.js","hash":"4a9489e72cbe98527931d95d68b68e2d6a9bff6e","modified":1586275756335},{"_id":"public/lib/pjax/lib/events/off.js","hash":"79920b24246e150f1c73511f1a271b93b9c5d9c8","modified":1586275756335},{"_id":"public/lib/pjax/lib/events/on.js","hash":"111fba16cc4ca701aefedea2589c832b60af303d","modified":1586275756335},{"_id":"public/lib/pjax/lib/events/trigger.js","hash":"c05ba73199c5e2c7682655491ed37743bd451751","modified":1586275756335},{"_id":"public/lib/pjax/lib/proto/attach-form.js","hash":"b41c66e58897e6371fbd04cd2b9eb7bae10e0d89","modified":1586275756335},{"_id":"public/lib/pjax/lib/proto/attach-link.js","hash":"d15a61235aa8c1615e60ea34d9bbee834be804d0","modified":1586275756335},{"_id":"public/lib/pjax/lib/proto/handle-response.js","hash":"f68bab958cce4dbbcb91920d7a8aba55b9066b41","modified":1586275756335},{"_id":"public/lib/pjax/lib/proto/log.js","hash":"c728730594aed7d81509787c5bb487af014415e1","modified":1586275756335},{"_id":"public/lib/pjax/lib/proto/parse-element.js","hash":"52bef8a845aab0d54907f73875fa58b4084019be","modified":1586275756335},{"_id":"public/lib/pjax/lib/util/clone.js","hash":"55027b88e007818c6963205fcd0090a61af8237c","modified":1586275756335},{"_id":"public/lib/pjax/lib/util/contains.js","hash":"fcc9be0477d941b7c4ba71de328773e556ded7ce","modified":1586275756335},{"_id":"public/lib/pjax/lib/util/noop.js","hash":"2c9f7e231af1a62db195875ca62df7edc253c3c4","modified":1586275756335},{"_id":"public/lib/pjax/lib/util/extend.js","hash":"e599aaef93e3a00ccbd92cd87df09898d712e398","modified":1586275756335},{"_id":"public/lib/pjax/lib/util/update-query-string.js","hash":"eefcbff322f8c607865d47ee8fa49f1c8bfa8d7a","modified":1586275756335},{"_id":"public/lib/pjax/tests/lib/abort-request.js","hash":"96d7a604ca275455199bd94d16b9cdc254bee9b9","modified":1586275756335},{"_id":"public/lib/pjax/tests/lib/execute-scripts.js","hash":"2d02a0151ead9924516cdae9308f8667b27a7ea7","modified":1586275756335},{"_id":"public/lib/pjax/tests/lib/foreach-els.js","hash":"85995dd27d0d866cfaf5c560732fab8b0099938c","modified":1586275756335},{"_id":"public/lib/pjax/tests/lib/eval-scripts.js","hash":"3c9125a04cec9d511f16f9311656533ef6a115d1","modified":1586275756335},{"_id":"public/lib/pjax/tests/lib/events.js","hash":"70ca7ec140d1dcf8c4958e7b6788b09ef2b60181","modified":1586275756335},{"_id":"public/lib/pjax/tests/lib/foreach-selectors.js","hash":"898b48ef191719070488f16a54fba8a794b10057","modified":1586275756335},{"_id":"public/lib/pjax/tests/lib/is-supported.js","hash":"e25c7e69c8b7a64a44affcae317adb2b3889aee6","modified":1586275756335},{"_id":"public/lib/pjax/tests/lib/parse-options.js","hash":"45ab302da33e5457a71fd22bbd082e51f5b06b49","modified":1586275756335},{"_id":"public/lib/pjax/tests/lib/send-request.js","hash":"d6adad7f95754c53b9885c0999a5118995fdc76f","modified":1586275756335},{"_id":"public/lib/pjax/tests/lib/switch-selectors.js","hash":"993dd67b1b629288feb8d167fb12b602626cf1d5","modified":1586275756335},{"_id":"public/lib/pjax/tests/lib/switches.js","hash":"f5dfdf57bafd2b4edd5f854d70837b5fe760756e","modified":1586275756335},{"_id":"public/lib/pjax/tests/lib/uniqueid.js","hash":"430550f31b9e6356c2e3a033c1b418bd6acd9667","modified":1586275756335},{"_id":"public/lib/pjax/tests/lib/proto/attach-form.js","hash":"3614a962e3185b354a2e0d987bcecdef4a209da6","modified":1586275756335},{"_id":"public/lib/pjax/tests/lib/proto/attach-link.js","hash":"9d283cb0b09730e932673c73a3352a2d2e8939fa","modified":1586275756335},{"_id":"public/lib/pjax/tests/lib/proto/handle-response.js","hash":"26e0e334f0b20ff2fe75b3ab12a93ce44a5823f0","modified":1586275756335},{"_id":"public/lib/pjax/tests/lib/proto/parse-element.js","hash":"474edc8844028de67cbad054da79c05727620785","modified":1586275756335},{"_id":"public/lib/pjax/tests/lib/util/clone.js","hash":"4b0e62bd0f4eef3549b0da70987f63ce4953bef0","modified":1586275756335},{"_id":"public/lib/pjax/tests/lib/util/contains.js","hash":"bc0c8be855e9736cb256a2aa44fd46f3a7d1d6c5","modified":1586275756335},{"_id":"public/lib/pjax/tests/lib/util/extend.js","hash":"d45488ff6f8e3e1b59a62d0c88c86b750fe50ed4","modified":1586275756335},{"_id":"public/lib/pjax/tests/lib/util/noop.js","hash":"6959a4c02c41453a5edfa4163e36752fcfa3edf9","modified":1586275756335},{"_id":"public/lib/pjax/tests/lib/util/update-query-string.js","hash":"4158dcd877c5f229400417e0da22eb4c5b8e8e38","modified":1586275756335},{"_id":"public/lib/algolia-instant-search/README.html","hash":"fe4bba5584188826c364fd05c9194944f8b911bb","modified":1586275756335},{"_id":"public/lib/pjax/CHANGELOG.html","hash":"6c0d09dac56e59897d1555628df9f2124822a27d","modified":1586275756335},{"_id":"public/lib/pjax/example/forms.html","hash":"aa62fc6e697e17e16a947eb0176dc24e2e42d72c","modified":1586275756335},{"_id":"public/lib/pjax/example/index.html","hash":"4a00b556253eeb11fc10013c8c3940a019154001","modified":1586275756335},{"_id":"public/lib/pjax/example/page2.html","hash":"7654e0a5a471bec5d74fb88d9f2f218817afdd52","modified":1586275756335},{"_id":"public/lib/pjax/example/page3.html","hash":"8d1d6a9afd80caf29e5b22f10a849b23a864a6a4","modified":1586275756335},{"_id":"public/css/main.css","hash":"b51192eed6eb0bc0b37e5d7356f3602e22f688e6","modified":1586275756335},{"_id":"public/lib/anime.min.js","hash":"47cb482a8a488620a793d50ba8f6752324b46af3","modified":1586275756335},{"_id":"public/lib/pjax/pjax.js","hash":"e973e2c6ffb6f6d7b4a1730ba0ed6d3628b2b39f","modified":1586275756335},{"_id":"public/lib/pjax/pjax.min.js","hash":"68d0c6ad28f042c78fc18a6e9d782a7047c01905","modified":1586275756335},{"_id":"public/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1586275756335},{"_id":"public/lib/font-awesome/css/all.min.css","hash":"0038dc97c79451578b7bd48af60ba62282b4082b","modified":1586275756335},{"_id":"public/lib/algolia-instant-search/instantsearch.min.js","hash":"d8f2e1de2142c44500d41debeeb319ba8adb1ccd","modified":1586275756335},{"_id":"public/lib/pjax/README.html","hash":"09cc188504d4a7bf5f0e9cb2f211e97f0d6f6001","modified":1586275756335},{"_id":"public/assets/algolia/algoliasearch.js","hash":"6948fcdf071e4983e784e8c458cf201536f77792","modified":1586275756335},{"_id":"public/images/avatar.jpg","hash":"ea20921ecd4d0be8f9b78d7c98ad28e82c8e6664","modified":1586275756335},{"_id":"public/lib/algolia-instant-search/instantsearch.min.js.map","hash":"753adf35c67993265fb13b827aeee3f95e3442af","modified":1586275756335}],"Category":[{"name":"Hexo","_id":"ck8q2oqrs0004k6u79gq7hrmf"},{"name":"先別急著寫 leetcode 課程心得","_id":"ck8q2oqs5000ak6u73y3q3kuo"},{"name":"JavaScript 的怪奇物語","_id":"ck8q2oqs9000fk6u78uwy8l4n"},{"name":"vue","_id":"ck8q2oqsb000kk6u7cn6r63me"}],"Data":[],"Page":[{"title":"分類","date":"2020-03-28T06:26:34.000Z","type":"categories","comments":0,"_content":"","source":"categories/index.md","raw":"---\ntitle: 分類\ndate: 2020-03-28 14:26:34\ntype: 'categories'\ncomments: false\n---\n","updated":"2020-04-06T03:31:09.820Z","path":"categories/index.html","layout":"page","_id":"ck8q2oqrn0001k6u7ff6jhn4o","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"Link","date":"2020-03-29T09:34:55.000Z","type":"link","comments":0,"_content":"## 前端乾貨\n\n* [卡斯伯Blog](https://wcc723.github.io)\n* [Huli](https://blog.huli.tw)\n* [PJCHENder 那些沒告訴你的小細節](https://pjchender.blogspot.com)\n* [Welcome.Web.World](https://hsiangfeng.github.io/)","source":"link/index.md","raw":"---\ntitle: Link\ndate: 2020-03-29 17:34:55\ntype: 'link'\ncomments: false\n---\n## 前端乾貨\n\n* [卡斯伯Blog](https://wcc723.github.io)\n* [Huli](https://blog.huli.tw)\n* [PJCHENder 那些沒告訴你的小細節](https://pjchender.blogspot.com)\n* [Welcome.Web.World](https://hsiangfeng.github.io/)","updated":"2020-04-06T03:46:03.078Z","path":"link/index.html","layout":"page","_id":"ck8q2oqrq0003k6u7f3mjf1y4","content":"<h2 id=\"前端乾貨\"><a href=\"#前端乾貨\" class=\"headerlink\" title=\"前端乾貨\"></a>前端乾貨</h2><ul>\n<li><a href=\"https://wcc723.github.io\" target=\"_blank\" rel=\"noopener\">卡斯伯Blog</a></li>\n<li><a href=\"https://blog.huli.tw\" target=\"_blank\" rel=\"noopener\">Huli</a></li>\n<li><a href=\"https://pjchender.blogspot.com\" target=\"_blank\" rel=\"noopener\">PJCHENder 那些沒告訴你的小細節</a></li>\n<li><a href=\"https://hsiangfeng.github.io/\" target=\"_blank\" rel=\"noopener\">Welcome.Web.World</a></li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"前端乾貨\"><a href=\"#前端乾貨\" class=\"headerlink\" title=\"前端乾貨\"></a>前端乾貨</h2><ul>\n<li><a href=\"https://wcc723.github.io\" target=\"_blank\" rel=\"noopener\">卡斯伯Blog</a></li>\n<li><a href=\"https://blog.huli.tw\" target=\"_blank\" rel=\"noopener\">Huli</a></li>\n<li><a href=\"https://pjchender.blogspot.com\" target=\"_blank\" rel=\"noopener\">PJCHENder 那些沒告訴你的小細節</a></li>\n<li><a href=\"https://hsiangfeng.github.io/\" target=\"_blank\" rel=\"noopener\">Welcome.Web.World</a></li>\n</ul>\n"},{"title":"標籤","date":"2020-03-29T08:35:38.000Z","type":"tags","comments":0,"_content":"","source":"tags/index.md","raw":"---\ntitle: 標籤\ndate: 2020-03-29 16:35:38\ntype: \"tags\"\ncomments: false\n---\n","updated":"2020-04-06T03:31:21.111Z","path":"tags/index.html","layout":"page","_id":"ck8q2oqrv0007k6u7cqx0hmfz","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"使用 Hexo 在 GitHub 部署 Blog","date":"2020-03-28T06:55:52.000Z","keywords":["hexo","next","github","blog"],"decription":null,"_content":"\n本來一直不是很想用 Hexo，因為覺得很多人使用，所以有使用另一種 Hugo 來架設 Blog，但是用完一直覺得不合口味，原本打算就將就著用。\n\n剛好看到 Hexo 最多人使用的主題 - Next，感覺還不錯，真香，就來裝裝看吧！\n<!--more-->\n\n## 前置作業\n---\n\n**安裝需求**\n\n需要安裝：\n\n* Node.js\n* Git\n\n> 以下方式為 Mac 使用者方法，其他作業系統請詳閱[官網](https://hexo.io/docs/index.html)\n\n1. 安裝 Xcode\n\n首先到 App Store 安裝 Xcode，安裝完成後，\n開啟它並前往 Preferences -> Download -> Command Line Tools -> Install 安裝命令列工具。\n\n2. 安裝 node.js\n\n使用 NVM，或是直接用 HomeBrew 安裝：\n\n```\n$ brew install node\n```\n\n3. 安裝 Hexo：\n\n```\n$ npm install -g hexo-cli\n```\n\n4. 完成後可以輸入指令，看看有無安裝成功，成功的話會顯示版本：\n\n```\n$ hexo version\n```\n\n我的版本是：\n\nhexo: 4.2.0\nhexo-cli: 3.1.0\n\n## 建立專案\n---\n\n在指定資料夾建立檔案：\n\n```\n$ hexo init <folder>\n$ cd <folder>\n$ npm install\n```\n\n完成後會建立以下資料：\n\n![](https://i.imgur.com/1eucaEQ.png)\n\n## 更改主題與其他設定\n---\n\n主題選用的是 [Next](https://github.com/theme-next/hexo-theme-next)，更改步驟如下：\n\n1. 把 next 這個主題 clone 下來：\n\n```\n   $ git clone https://github.com/theme-next/hexo-theme-next themes/next\n```\n\n2. 找到 /_config.yml，打開修改：\n\n```\n# Extensions\n## Plugins: https://hexo.io/plugins/\n## Themes: https://hexo.io/themes/\ntheme: next    // 改為 next\n```\n\n3. 網站設定：\n\n```\n# Site\ntitle: 標題\nsubtitle: 副標題\ndescription: 網站描述\nkeywords: 網站關鍵字\nauthor: 作者名\nlanguage: zh-TW\ntimezone: 時區\n```\n\n其他一些細部設定就可以自己慢慢摸索。\n\n如果要先看看網站的樣式，可以啟動本地端的 server：\n\n```\n$ hexo server\n```\n\n## 寫作\n---\n\n接下來，大概設定完就可以開始建立文章了。\n\n指令是：\n\n```\n$ hexo new [layout] <title>\n```\n\nLayout 有 3 種，分別是：post、page(頁面)、draft(草稿)，\n\n假設要發一篇檔名為 Hello-World 草稿的話：`hexo new draft Hello-World`\n\n如果要將 draft 發布為 post 的話，就鍵入：\n\n```\n$ hexo publish [layout] <title>\n```\n\n## 把網站部署到 GitHub\n---\n\n既然都做的差不多了，就可以開始把網站部署到 GitHub Pages。\n\n1. 新增名為 `<username>.github.io` 的 repo，例如：`bucky0112.github.io`\n\n2. 安裝 [hexo-deployer-git](https://github.com/hexojs/hexo-deployer-git) 這個插件：\n\n```\n$ npm install hexo-deployer-git --save\n```\n\n3. 修改 /_config.yml：\n\n```\nurl: https://username.github.io\nroot: /repo.github.io/\n\ndeploy:\n  type: git\n  repo: <repository url> #新增repo的網址\n  branch: master\n```\n\n4. 上傳網站，執行：\n\n```\n$ hexo deploy\n```\n\n5. 接著需要等待一些時間，讓子彈飛一會，就可以去你的網站看看成果了。\n\n```\nhttps://username.github.io/repo.github.io\n```\n\n## Hexo 常用指令\n---\n\n以下是之後再使用 Hexo 發佈文章時常用的指令：\n\n```\n$ hexo generate      #產生靜態檔案 / hexo g\n$ hexo deploy        #部署網站 \n$ hexo server        #啟動本地端伺服器 / hexo s\n$ hexo new <post>    #新增文章\n$ hexo clean         #清除快取檔案和已產生的靜態檔案\n```","source":"_posts/使用Hexo在GitHub部署Blog.md","raw":"---\ntitle: 使用 Hexo 在 GitHub 部署 Blog\ndate: 2020-03-28 14:55:52\ntags:\n- hexo\n- next\ncategories: Hexo\nkeywords:   \n- hexo\n- next\n- github\n- blog\ndecription: #文章敘述\n---\n\n本來一直不是很想用 Hexo，因為覺得很多人使用，所以有使用另一種 Hugo 來架設 Blog，但是用完一直覺得不合口味，原本打算就將就著用。\n\n剛好看到 Hexo 最多人使用的主題 - Next，感覺還不錯，真香，就來裝裝看吧！\n<!--more-->\n\n## 前置作業\n---\n\n**安裝需求**\n\n需要安裝：\n\n* Node.js\n* Git\n\n> 以下方式為 Mac 使用者方法，其他作業系統請詳閱[官網](https://hexo.io/docs/index.html)\n\n1. 安裝 Xcode\n\n首先到 App Store 安裝 Xcode，安裝完成後，\n開啟它並前往 Preferences -> Download -> Command Line Tools -> Install 安裝命令列工具。\n\n2. 安裝 node.js\n\n使用 NVM，或是直接用 HomeBrew 安裝：\n\n```\n$ brew install node\n```\n\n3. 安裝 Hexo：\n\n```\n$ npm install -g hexo-cli\n```\n\n4. 完成後可以輸入指令，看看有無安裝成功，成功的話會顯示版本：\n\n```\n$ hexo version\n```\n\n我的版本是：\n\nhexo: 4.2.0\nhexo-cli: 3.1.0\n\n## 建立專案\n---\n\n在指定資料夾建立檔案：\n\n```\n$ hexo init <folder>\n$ cd <folder>\n$ npm install\n```\n\n完成後會建立以下資料：\n\n![](https://i.imgur.com/1eucaEQ.png)\n\n## 更改主題與其他設定\n---\n\n主題選用的是 [Next](https://github.com/theme-next/hexo-theme-next)，更改步驟如下：\n\n1. 把 next 這個主題 clone 下來：\n\n```\n   $ git clone https://github.com/theme-next/hexo-theme-next themes/next\n```\n\n2. 找到 /_config.yml，打開修改：\n\n```\n# Extensions\n## Plugins: https://hexo.io/plugins/\n## Themes: https://hexo.io/themes/\ntheme: next    // 改為 next\n```\n\n3. 網站設定：\n\n```\n# Site\ntitle: 標題\nsubtitle: 副標題\ndescription: 網站描述\nkeywords: 網站關鍵字\nauthor: 作者名\nlanguage: zh-TW\ntimezone: 時區\n```\n\n其他一些細部設定就可以自己慢慢摸索。\n\n如果要先看看網站的樣式，可以啟動本地端的 server：\n\n```\n$ hexo server\n```\n\n## 寫作\n---\n\n接下來，大概設定完就可以開始建立文章了。\n\n指令是：\n\n```\n$ hexo new [layout] <title>\n```\n\nLayout 有 3 種，分別是：post、page(頁面)、draft(草稿)，\n\n假設要發一篇檔名為 Hello-World 草稿的話：`hexo new draft Hello-World`\n\n如果要將 draft 發布為 post 的話，就鍵入：\n\n```\n$ hexo publish [layout] <title>\n```\n\n## 把網站部署到 GitHub\n---\n\n既然都做的差不多了，就可以開始把網站部署到 GitHub Pages。\n\n1. 新增名為 `<username>.github.io` 的 repo，例如：`bucky0112.github.io`\n\n2. 安裝 [hexo-deployer-git](https://github.com/hexojs/hexo-deployer-git) 這個插件：\n\n```\n$ npm install hexo-deployer-git --save\n```\n\n3. 修改 /_config.yml：\n\n```\nurl: https://username.github.io\nroot: /repo.github.io/\n\ndeploy:\n  type: git\n  repo: <repository url> #新增repo的網址\n  branch: master\n```\n\n4. 上傳網站，執行：\n\n```\n$ hexo deploy\n```\n\n5. 接著需要等待一些時間，讓子彈飛一會，就可以去你的網站看看成果了。\n\n```\nhttps://username.github.io/repo.github.io\n```\n\n## Hexo 常用指令\n---\n\n以下是之後再使用 Hexo 發佈文章時常用的指令：\n\n```\n$ hexo generate      #產生靜態檔案 / hexo g\n$ hexo deploy        #部署網站 \n$ hexo server        #啟動本地端伺服器 / hexo s\n$ hexo new <post>    #新增文章\n$ hexo clean         #清除快取檔案和已產生的靜態檔案\n```","slug":"使用Hexo在GitHub部署Blog","published":1,"updated":"2020-04-06T08:32:11.815Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck8q2oqrd0000k6u73hma25ne","content":"<p>本來一直不是很想用 Hexo，因為覺得很多人使用，所以有使用另一種 Hugo 來架設 Blog，但是用完一直覺得不合口味，原本打算就將就著用。</p>\n<p>剛好看到 Hexo 最多人使用的主題 - Next，感覺還不錯，真香，就來裝裝看吧！</p>\n<a id=\"more\"></a>\n\n<h2 id=\"前置作業\"><a href=\"#前置作業\" class=\"headerlink\" title=\"前置作業\"></a>前置作業</h2><hr>\n<p><strong>安裝需求</strong></p>\n<p>需要安裝：</p>\n<ul>\n<li>Node.js</li>\n<li>Git</li>\n</ul>\n<blockquote>\n<p>以下方式為 Mac 使用者方法，其他作業系統請詳閱<a href=\"https://hexo.io/docs/index.html\" target=\"_blank\" rel=\"noopener\">官網</a></p>\n</blockquote>\n<ol>\n<li>安裝 Xcode</li>\n</ol>\n<p>首先到 App Store 安裝 Xcode，安裝完成後，<br>開啟它並前往 Preferences -&gt; Download -&gt; Command Line Tools -&gt; Install 安裝命令列工具。</p>\n<ol start=\"2\">\n<li>安裝 node.js</li>\n</ol>\n<p>使用 NVM，或是直接用 HomeBrew 安裝：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ brew install node</span><br></pre></td></tr></table></figure>\n\n<ol start=\"3\">\n<li>安裝 Hexo：</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ npm install -g hexo-cli</span><br></pre></td></tr></table></figure>\n\n<ol start=\"4\">\n<li>完成後可以輸入指令，看看有無安裝成功，成功的話會顯示版本：</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo version</span><br></pre></td></tr></table></figure>\n\n<p>我的版本是：</p>\n<p>hexo: 4.2.0<br>hexo-cli: 3.1.0</p>\n<h2 id=\"建立專案\"><a href=\"#建立專案\" class=\"headerlink\" title=\"建立專案\"></a>建立專案</h2><hr>\n<p>在指定資料夾建立檔案：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo init &lt;folder&gt;</span><br><span class=\"line\">$ cd &lt;folder&gt;</span><br><span class=\"line\">$ npm install</span><br></pre></td></tr></table></figure>\n\n<p>完成後會建立以下資料：</p>\n<p><img data-src=\"https://i.imgur.com/1eucaEQ.png\" alt=\"\"></p>\n<h2 id=\"更改主題與其他設定\"><a href=\"#更改主題與其他設定\" class=\"headerlink\" title=\"更改主題與其他設定\"></a>更改主題與其他設定</h2><hr>\n<p>主題選用的是 <a href=\"https://github.com/theme-next/hexo-theme-next\" target=\"_blank\" rel=\"noopener\">Next</a>，更改步驟如下：</p>\n<ol>\n<li>把 next 這個主題 clone 下來：</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git clone https:&#x2F;&#x2F;github.com&#x2F;theme-next&#x2F;hexo-theme-next themes&#x2F;next</span><br></pre></td></tr></table></figure>\n\n<ol start=\"2\">\n<li>找到 /_config.yml，打開修改：</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># Extensions</span><br><span class=\"line\">## Plugins: https:&#x2F;&#x2F;hexo.io&#x2F;plugins&#x2F;</span><br><span class=\"line\">## Themes: https:&#x2F;&#x2F;hexo.io&#x2F;themes&#x2F;</span><br><span class=\"line\">theme: next    &#x2F;&#x2F; 改為 next</span><br></pre></td></tr></table></figure>\n\n<ol start=\"3\">\n<li>網站設定：</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># Site</span><br><span class=\"line\">title: 標題</span><br><span class=\"line\">subtitle: 副標題</span><br><span class=\"line\">description: 網站描述</span><br><span class=\"line\">keywords: 網站關鍵字</span><br><span class=\"line\">author: 作者名</span><br><span class=\"line\">language: zh-TW</span><br><span class=\"line\">timezone: 時區</span><br></pre></td></tr></table></figure>\n\n<p>其他一些細部設定就可以自己慢慢摸索。</p>\n<p>如果要先看看網站的樣式，可以啟動本地端的 server：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"寫作\"><a href=\"#寫作\" class=\"headerlink\" title=\"寫作\"></a>寫作</h2><hr>\n<p>接下來，大概設定完就可以開始建立文章了。</p>\n<p>指令是：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new [layout] &lt;title&gt;</span><br></pre></td></tr></table></figure>\n\n<p>Layout 有 3 種，分別是：post、page(頁面)、draft(草稿)，</p>\n<p>假設要發一篇檔名為 Hello-World 草稿的話：<code>hexo new draft Hello-World</code></p>\n<p>如果要將 draft 發布為 post 的話，就鍵入：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo publish [layout] &lt;title&gt;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"把網站部署到-GitHub\"><a href=\"#把網站部署到-GitHub\" class=\"headerlink\" title=\"把網站部署到 GitHub\"></a>把網站部署到 GitHub</h2><hr>\n<p>既然都做的差不多了，就可以開始把網站部署到 GitHub Pages。</p>\n<ol>\n<li><p>新增名為 <code>&lt;username&gt;.github.io</code> 的 repo，例如：<code>bucky0112.github.io</code></p>\n</li>\n<li><p>安裝 <a href=\"https://github.com/hexojs/hexo-deployer-git\" target=\"_blank\" rel=\"noopener\">hexo-deployer-git</a> 這個插件：</p>\n</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure>\n\n<ol start=\"3\">\n<li>修改 /_config.yml：</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">url: https:&#x2F;&#x2F;username.github.io</span><br><span class=\"line\">root: &#x2F;repo.github.io&#x2F;</span><br><span class=\"line\"></span><br><span class=\"line\">deploy:</span><br><span class=\"line\">  type: git</span><br><span class=\"line\">  repo: &lt;repository url&gt; #新增repo的網址</span><br><span class=\"line\">  branch: master</span><br></pre></td></tr></table></figure>\n\n<ol start=\"4\">\n<li>上傳網站，執行：</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n\n<ol start=\"5\">\n<li>接著需要等待一些時間，讓子彈飛一會，就可以去你的網站看看成果了。</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">https:&#x2F;&#x2F;username.github.io&#x2F;repo.github.io</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Hexo-常用指令\"><a href=\"#Hexo-常用指令\" class=\"headerlink\" title=\"Hexo 常用指令\"></a>Hexo 常用指令</h2><hr>\n<p>以下是之後再使用 Hexo 發佈文章時常用的指令：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate      #產生靜態檔案 &#x2F; hexo g</span><br><span class=\"line\">$ hexo deploy        #部署網站 </span><br><span class=\"line\">$ hexo server        #啟動本地端伺服器 &#x2F; hexo s</span><br><span class=\"line\">$ hexo new &lt;post&gt;    #新增文章</span><br><span class=\"line\">$ hexo clean         #清除快取檔案和已產生的靜態檔案</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"<p>本來一直不是很想用 Hexo，因為覺得很多人使用，所以有使用另一種 Hugo 來架設 Blog，但是用完一直覺得不合口味，原本打算就將就著用。</p>\n<p>剛好看到 Hexo 最多人使用的主題 - Next，感覺還不錯，真香，就來裝裝看吧！</p>","more":"<h2 id=\"前置作業\"><a href=\"#前置作業\" class=\"headerlink\" title=\"前置作業\"></a>前置作業</h2><hr>\n<p><strong>安裝需求</strong></p>\n<p>需要安裝：</p>\n<ul>\n<li>Node.js</li>\n<li>Git</li>\n</ul>\n<blockquote>\n<p>以下方式為 Mac 使用者方法，其他作業系統請詳閱<a href=\"https://hexo.io/docs/index.html\" target=\"_blank\" rel=\"noopener\">官網</a></p>\n</blockquote>\n<ol>\n<li>安裝 Xcode</li>\n</ol>\n<p>首先到 App Store 安裝 Xcode，安裝完成後，<br>開啟它並前往 Preferences -&gt; Download -&gt; Command Line Tools -&gt; Install 安裝命令列工具。</p>\n<ol start=\"2\">\n<li>安裝 node.js</li>\n</ol>\n<p>使用 NVM，或是直接用 HomeBrew 安裝：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ brew install node</span><br></pre></td></tr></table></figure>\n\n<ol start=\"3\">\n<li>安裝 Hexo：</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ npm install -g hexo-cli</span><br></pre></td></tr></table></figure>\n\n<ol start=\"4\">\n<li>完成後可以輸入指令，看看有無安裝成功，成功的話會顯示版本：</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo version</span><br></pre></td></tr></table></figure>\n\n<p>我的版本是：</p>\n<p>hexo: 4.2.0<br>hexo-cli: 3.1.0</p>\n<h2 id=\"建立專案\"><a href=\"#建立專案\" class=\"headerlink\" title=\"建立專案\"></a>建立專案</h2><hr>\n<p>在指定資料夾建立檔案：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo init &lt;folder&gt;</span><br><span class=\"line\">$ cd &lt;folder&gt;</span><br><span class=\"line\">$ npm install</span><br></pre></td></tr></table></figure>\n\n<p>完成後會建立以下資料：</p>\n<p><img data-src=\"https://i.imgur.com/1eucaEQ.png\" alt=\"\"></p>\n<h2 id=\"更改主題與其他設定\"><a href=\"#更改主題與其他設定\" class=\"headerlink\" title=\"更改主題與其他設定\"></a>更改主題與其他設定</h2><hr>\n<p>主題選用的是 <a href=\"https://github.com/theme-next/hexo-theme-next\" target=\"_blank\" rel=\"noopener\">Next</a>，更改步驟如下：</p>\n<ol>\n<li>把 next 這個主題 clone 下來：</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git clone https:&#x2F;&#x2F;github.com&#x2F;theme-next&#x2F;hexo-theme-next themes&#x2F;next</span><br></pre></td></tr></table></figure>\n\n<ol start=\"2\">\n<li>找到 /_config.yml，打開修改：</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># Extensions</span><br><span class=\"line\">## Plugins: https:&#x2F;&#x2F;hexo.io&#x2F;plugins&#x2F;</span><br><span class=\"line\">## Themes: https:&#x2F;&#x2F;hexo.io&#x2F;themes&#x2F;</span><br><span class=\"line\">theme: next    &#x2F;&#x2F; 改為 next</span><br></pre></td></tr></table></figure>\n\n<ol start=\"3\">\n<li>網站設定：</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># Site</span><br><span class=\"line\">title: 標題</span><br><span class=\"line\">subtitle: 副標題</span><br><span class=\"line\">description: 網站描述</span><br><span class=\"line\">keywords: 網站關鍵字</span><br><span class=\"line\">author: 作者名</span><br><span class=\"line\">language: zh-TW</span><br><span class=\"line\">timezone: 時區</span><br></pre></td></tr></table></figure>\n\n<p>其他一些細部設定就可以自己慢慢摸索。</p>\n<p>如果要先看看網站的樣式，可以啟動本地端的 server：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"寫作\"><a href=\"#寫作\" class=\"headerlink\" title=\"寫作\"></a>寫作</h2><hr>\n<p>接下來，大概設定完就可以開始建立文章了。</p>\n<p>指令是：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new [layout] &lt;title&gt;</span><br></pre></td></tr></table></figure>\n\n<p>Layout 有 3 種，分別是：post、page(頁面)、draft(草稿)，</p>\n<p>假設要發一篇檔名為 Hello-World 草稿的話：<code>hexo new draft Hello-World</code></p>\n<p>如果要將 draft 發布為 post 的話，就鍵入：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo publish [layout] &lt;title&gt;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"把網站部署到-GitHub\"><a href=\"#把網站部署到-GitHub\" class=\"headerlink\" title=\"把網站部署到 GitHub\"></a>把網站部署到 GitHub</h2><hr>\n<p>既然都做的差不多了，就可以開始把網站部署到 GitHub Pages。</p>\n<ol>\n<li><p>新增名為 <code>&lt;username&gt;.github.io</code> 的 repo，例如：<code>bucky0112.github.io</code></p>\n</li>\n<li><p>安裝 <a href=\"https://github.com/hexojs/hexo-deployer-git\" target=\"_blank\" rel=\"noopener\">hexo-deployer-git</a> 這個插件：</p>\n</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure>\n\n<ol start=\"3\">\n<li>修改 /_config.yml：</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">url: https:&#x2F;&#x2F;username.github.io</span><br><span class=\"line\">root: &#x2F;repo.github.io&#x2F;</span><br><span class=\"line\"></span><br><span class=\"line\">deploy:</span><br><span class=\"line\">  type: git</span><br><span class=\"line\">  repo: &lt;repository url&gt; #新增repo的網址</span><br><span class=\"line\">  branch: master</span><br></pre></td></tr></table></figure>\n\n<ol start=\"4\">\n<li>上傳網站，執行：</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n\n<ol start=\"5\">\n<li>接著需要等待一些時間，讓子彈飛一會，就可以去你的網站看看成果了。</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">https:&#x2F;&#x2F;username.github.io&#x2F;repo.github.io</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Hexo-常用指令\"><a href=\"#Hexo-常用指令\" class=\"headerlink\" title=\"Hexo 常用指令\"></a>Hexo 常用指令</h2><hr>\n<p>以下是之後再使用 Hexo 發佈文章時常用的指令：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate      #產生靜態檔案 &#x2F; hexo g</span><br><span class=\"line\">$ hexo deploy        #部署網站 </span><br><span class=\"line\">$ hexo server        #啟動本地端伺服器 &#x2F; hexo s</span><br><span class=\"line\">$ hexo new &lt;post&gt;    #新增文章</span><br><span class=\"line\">$ hexo clean         #清除快取檔案和已產生的靜態檔案</span><br></pre></td></tr></table></figure>"},{"title":"Think first, code later","date":"2020-04-03T14:45:39.000Z","keywords":"先別急著寫 leetcode","decription":"先別急著寫 leetcode 課程心得","_content":"\n以前看過一篇文章，是用拉麵店販賣機講解關於 api 的概念，我覺得作者很厲害，可以用淺顯易懂的方式讓當時還是前端麻瓜的我看得懂，那篇文章很推薦新手去看 -> [從拉麵店的販賣機理解什麼是 API](https://medium.com/@hulitw/ramen-and-api-6238437dc544)\n\n最近作者開了一系列的課 -> [先別急著寫 leetcode](https://lidemy.com/p/alg101-leetcode)。因為我不是本科系出身，所以確實在解題時很容易遇上困難，不然就是會想很久。剛好看到這個課程就覺得蠻需要培養如何寫程式的思維，而且重點是免費喔！免費喔！免費喔！（很重要要說 3 次）所以這個系列會記載一些對我有幫助的筆記，希望能讓自己更進步一些。\n<!--more-->\n\n## 會寫程式的人與初學者差別在哪？\n---\n\n### 會寫程式的人\n\n1. 先想解法\n2. 如果是有做過或是簡單的，就會直接構思出方法\n3. 如果比較困難或是複雜的問題，就把解法轉換成程式碼\n\n### 初學者\n\n* 邊寫邊想怎麼解\n* 試著套用自己以前學過的語法\n\n這個我自己蠻有感覺的，確實一開始會邊寫邊想，然後如果卡住了，就翻筆記看有什麼語法可以拿來套用，不過通常都沒什麼好下場就是了，哈。\n\n## 在解題會有兩種情況\n---\n\n### 看題目覺得自己解得開\n\n* 有效率的解開\n* 有解開但是時間花較久\n* 最後解不開\n\n### 看題目就覺得看不懂\n\n撇開第二種看不懂的情況，在看得懂的情形下，以我自己比較常遇到解不開的狀況是，一開始覺得應該可以怎麼做，可是最後不知道怎麼將想法轉換成程式碼，而講者推薦了一些做法。\n\n## 推薦初學者寫程式的作法\n---\n\n首先看一道題目，然後按照以下的作法，題目是：\n\n如何印出 1-100 之間的偶數？\n\n### 想一下解法，不寫任何程式碼\n\n先不要急著想寫 code，想如何一步一步解決的方法。\n\n1. 如何印出 1-100\n2. 如何判斷偶數\n\n### 把解法寫成 pseudo code\n\n虛擬碼（pseudo code）在維基百科的解釋： \n\n> 更類似自然語言。它是半形式化、不標準的語言。我們可以將整個演算法執行過程的結構用接近自然語言的形式（這裡可以使用任何一種作者熟悉的文字，例如中文、英文，重點是將程式的意思表達出來）描述出來。使用虛擬碼，可以幫助我們更好的表述演算法，不用拘泥於具體的實現。\n\n主要是讓自己看得懂的方法，首先要讓如何印出 1-100：\n\n```\n讓 i = 1\n如果 i > 100，結束\n印出 i\n讓 i 可以一直累加\n然後再跳回第 2 步\n```\n\n然後題目是要印出偶數，所以把第 3 步改成判斷式：\n\n```\n讓 i = 1\n如果 i > 100，結束\n如果 i 是偶數，印出 i\n讓 i 可以一直累加\n然後再跳回第 2 步\n```\n\n雖然 pseudo code 沒有一定的形式，但是可以練習寫成比較像是程式碼的 pseudo code：\n\n```\nlet i = 1\nif i > 100 then exit\nif i % 2 === 0, print i\ni = i + 1\njump to line 2\n```\n\n寫到這邊還可以進一步寫成：\n\n```\nfor (i from 1 to 100) do\n\tif (i % 2 === 0)\n\tprint i\nend for\n```\n\n### 把 pseudo code 翻譯成程式碼\n\n到了這個步驟，如果有學過程式的話，應該就可以把程式碼寫出來，這邊使用 JavaScript 來寫，就可以印出從 1-100 的偶數：\n\n```\nfor ( let i = 1; i < 100; i ++) {\n\tif(i % 2 === 0) {\n\t\tconsole.log(i)\n\t}\n}\n```","source":"_posts/先別急著寫leetcode課程心得.md","raw":"---\ntitle: Think first, code later\ntags:\n  - 先別急著寫 leetcode\ndate: 2020-04-03 22:45:39\ncategories: 先別急著寫 leetcode 課程心得\nkeywords: 先別急著寫 leetcode\ndecription: 先別急著寫 leetcode 課程心得\n---\n\n以前看過一篇文章，是用拉麵店販賣機講解關於 api 的概念，我覺得作者很厲害，可以用淺顯易懂的方式讓當時還是前端麻瓜的我看得懂，那篇文章很推薦新手去看 -> [從拉麵店的販賣機理解什麼是 API](https://medium.com/@hulitw/ramen-and-api-6238437dc544)\n\n最近作者開了一系列的課 -> [先別急著寫 leetcode](https://lidemy.com/p/alg101-leetcode)。因為我不是本科系出身，所以確實在解題時很容易遇上困難，不然就是會想很久。剛好看到這個課程就覺得蠻需要培養如何寫程式的思維，而且重點是免費喔！免費喔！免費喔！（很重要要說 3 次）所以這個系列會記載一些對我有幫助的筆記，希望能讓自己更進步一些。\n<!--more-->\n\n## 會寫程式的人與初學者差別在哪？\n---\n\n### 會寫程式的人\n\n1. 先想解法\n2. 如果是有做過或是簡單的，就會直接構思出方法\n3. 如果比較困難或是複雜的問題，就把解法轉換成程式碼\n\n### 初學者\n\n* 邊寫邊想怎麼解\n* 試著套用自己以前學過的語法\n\n這個我自己蠻有感覺的，確實一開始會邊寫邊想，然後如果卡住了，就翻筆記看有什麼語法可以拿來套用，不過通常都沒什麼好下場就是了，哈。\n\n## 在解題會有兩種情況\n---\n\n### 看題目覺得自己解得開\n\n* 有效率的解開\n* 有解開但是時間花較久\n* 最後解不開\n\n### 看題目就覺得看不懂\n\n撇開第二種看不懂的情況，在看得懂的情形下，以我自己比較常遇到解不開的狀況是，一開始覺得應該可以怎麼做，可是最後不知道怎麼將想法轉換成程式碼，而講者推薦了一些做法。\n\n## 推薦初學者寫程式的作法\n---\n\n首先看一道題目，然後按照以下的作法，題目是：\n\n如何印出 1-100 之間的偶數？\n\n### 想一下解法，不寫任何程式碼\n\n先不要急著想寫 code，想如何一步一步解決的方法。\n\n1. 如何印出 1-100\n2. 如何判斷偶數\n\n### 把解法寫成 pseudo code\n\n虛擬碼（pseudo code）在維基百科的解釋： \n\n> 更類似自然語言。它是半形式化、不標準的語言。我們可以將整個演算法執行過程的結構用接近自然語言的形式（這裡可以使用任何一種作者熟悉的文字，例如中文、英文，重點是將程式的意思表達出來）描述出來。使用虛擬碼，可以幫助我們更好的表述演算法，不用拘泥於具體的實現。\n\n主要是讓自己看得懂的方法，首先要讓如何印出 1-100：\n\n```\n讓 i = 1\n如果 i > 100，結束\n印出 i\n讓 i 可以一直累加\n然後再跳回第 2 步\n```\n\n然後題目是要印出偶數，所以把第 3 步改成判斷式：\n\n```\n讓 i = 1\n如果 i > 100，結束\n如果 i 是偶數，印出 i\n讓 i 可以一直累加\n然後再跳回第 2 步\n```\n\n雖然 pseudo code 沒有一定的形式，但是可以練習寫成比較像是程式碼的 pseudo code：\n\n```\nlet i = 1\nif i > 100 then exit\nif i % 2 === 0, print i\ni = i + 1\njump to line 2\n```\n\n寫到這邊還可以進一步寫成：\n\n```\nfor (i from 1 to 100) do\n\tif (i % 2 === 0)\n\tprint i\nend for\n```\n\n### 把 pseudo code 翻譯成程式碼\n\n到了這個步驟，如果有學過程式的話，應該就可以把程式碼寫出來，這邊使用 JavaScript 來寫，就可以印出從 1-100 的偶數：\n\n```\nfor ( let i = 1; i < 100; i ++) {\n\tif(i % 2 === 0) {\n\t\tconsole.log(i)\n\t}\n}\n```","slug":"先別急著寫leetcode課程心得","published":1,"updated":"2020-04-04T07:20:52.320Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck8q2oqru0006k6u71zch93k4","content":"<p>以前看過一篇文章，是用拉麵店販賣機講解關於 api 的概念，我覺得作者很厲害，可以用淺顯易懂的方式讓當時還是前端麻瓜的我看得懂，那篇文章很推薦新手去看 -&gt; <a href=\"https://medium.com/@hulitw/ramen-and-api-6238437dc544\" target=\"_blank\" rel=\"noopener\">從拉麵店的販賣機理解什麼是 API</a></p>\n<p>最近作者開了一系列的課 -&gt; <a href=\"https://lidemy.com/p/alg101-leetcode\" target=\"_blank\" rel=\"noopener\">先別急著寫 leetcode</a>。因為我不是本科系出身，所以確實在解題時很容易遇上困難，不然就是會想很久。剛好看到這個課程就覺得蠻需要培養如何寫程式的思維，而且重點是免費喔！免費喔！免費喔！（很重要要說 3 次）所以這個系列會記載一些對我有幫助的筆記，希望能讓自己更進步一些。</p>\n<a id=\"more\"></a>\n\n<h2 id=\"會寫程式的人與初學者差別在哪？\"><a href=\"#會寫程式的人與初學者差別在哪？\" class=\"headerlink\" title=\"會寫程式的人與初學者差別在哪？\"></a>會寫程式的人與初學者差別在哪？</h2><hr>\n<h3 id=\"會寫程式的人\"><a href=\"#會寫程式的人\" class=\"headerlink\" title=\"會寫程式的人\"></a>會寫程式的人</h3><ol>\n<li>先想解法</li>\n<li>如果是有做過或是簡單的，就會直接構思出方法</li>\n<li>如果比較困難或是複雜的問題，就把解法轉換成程式碼</li>\n</ol>\n<h3 id=\"初學者\"><a href=\"#初學者\" class=\"headerlink\" title=\"初學者\"></a>初學者</h3><ul>\n<li>邊寫邊想怎麼解</li>\n<li>試著套用自己以前學過的語法</li>\n</ul>\n<p>這個我自己蠻有感覺的，確實一開始會邊寫邊想，然後如果卡住了，就翻筆記看有什麼語法可以拿來套用，不過通常都沒什麼好下場就是了，哈。</p>\n<h2 id=\"在解題會有兩種情況\"><a href=\"#在解題會有兩種情況\" class=\"headerlink\" title=\"在解題會有兩種情況\"></a>在解題會有兩種情況</h2><hr>\n<h3 id=\"看題目覺得自己解得開\"><a href=\"#看題目覺得自己解得開\" class=\"headerlink\" title=\"看題目覺得自己解得開\"></a>看題目覺得自己解得開</h3><ul>\n<li>有效率的解開</li>\n<li>有解開但是時間花較久</li>\n<li>最後解不開</li>\n</ul>\n<h3 id=\"看題目就覺得看不懂\"><a href=\"#看題目就覺得看不懂\" class=\"headerlink\" title=\"看題目就覺得看不懂\"></a>看題目就覺得看不懂</h3><p>撇開第二種看不懂的情況，在看得懂的情形下，以我自己比較常遇到解不開的狀況是，一開始覺得應該可以怎麼做，可是最後不知道怎麼將想法轉換成程式碼，而講者推薦了一些做法。</p>\n<h2 id=\"推薦初學者寫程式的作法\"><a href=\"#推薦初學者寫程式的作法\" class=\"headerlink\" title=\"推薦初學者寫程式的作法\"></a>推薦初學者寫程式的作法</h2><hr>\n<p>首先看一道題目，然後按照以下的作法，題目是：</p>\n<p>如何印出 1-100 之間的偶數？</p>\n<h3 id=\"想一下解法，不寫任何程式碼\"><a href=\"#想一下解法，不寫任何程式碼\" class=\"headerlink\" title=\"想一下解法，不寫任何程式碼\"></a>想一下解法，不寫任何程式碼</h3><p>先不要急著想寫 code，想如何一步一步解決的方法。</p>\n<ol>\n<li>如何印出 1-100</li>\n<li>如何判斷偶數</li>\n</ol>\n<h3 id=\"把解法寫成-pseudo-code\"><a href=\"#把解法寫成-pseudo-code\" class=\"headerlink\" title=\"把解法寫成 pseudo code\"></a>把解法寫成 pseudo code</h3><p>虛擬碼（pseudo code）在維基百科的解釋： </p>\n<blockquote>\n<p>更類似自然語言。它是半形式化、不標準的語言。我們可以將整個演算法執行過程的結構用接近自然語言的形式（這裡可以使用任何一種作者熟悉的文字，例如中文、英文，重點是將程式的意思表達出來）描述出來。使用虛擬碼，可以幫助我們更好的表述演算法，不用拘泥於具體的實現。</p>\n</blockquote>\n<p>主要是讓自己看得懂的方法，首先要讓如何印出 1-100：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">讓 i &#x3D; 1</span><br><span class=\"line\">如果 i &gt; 100，結束</span><br><span class=\"line\">印出 i</span><br><span class=\"line\">讓 i 可以一直累加</span><br><span class=\"line\">然後再跳回第 2 步</span><br></pre></td></tr></table></figure>\n\n<p>然後題目是要印出偶數，所以把第 3 步改成判斷式：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">讓 i &#x3D; 1</span><br><span class=\"line\">如果 i &gt; 100，結束</span><br><span class=\"line\">如果 i 是偶數，印出 i</span><br><span class=\"line\">讓 i 可以一直累加</span><br><span class=\"line\">然後再跳回第 2 步</span><br></pre></td></tr></table></figure>\n\n<p>雖然 pseudo code 沒有一定的形式，但是可以練習寫成比較像是程式碼的 pseudo code：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">let i &#x3D; 1</span><br><span class=\"line\">if i &gt; 100 then exit</span><br><span class=\"line\">if i % 2 &#x3D;&#x3D;&#x3D; 0, print i</span><br><span class=\"line\">i &#x3D; i + 1</span><br><span class=\"line\">jump to line 2</span><br></pre></td></tr></table></figure>\n\n<p>寫到這邊還可以進一步寫成：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">for (i from 1 to 100) do</span><br><span class=\"line\">\tif (i % 2 &#x3D;&#x3D;&#x3D; 0)</span><br><span class=\"line\">\tprint i</span><br><span class=\"line\">end for</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"把-pseudo-code-翻譯成程式碼\"><a href=\"#把-pseudo-code-翻譯成程式碼\" class=\"headerlink\" title=\"把 pseudo code 翻譯成程式碼\"></a>把 pseudo code 翻譯成程式碼</h3><p>到了這個步驟，如果有學過程式的話，應該就可以把程式碼寫出來，這邊使用 JavaScript 來寫，就可以印出從 1-100 的偶數：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">for ( let i &#x3D; 1; i &lt; 100; i ++) &#123;</span><br><span class=\"line\">\tif(i % 2 &#x3D;&#x3D;&#x3D; 0) &#123;</span><br><span class=\"line\">\t\tconsole.log(i)</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"<p>以前看過一篇文章，是用拉麵店販賣機講解關於 api 的概念，我覺得作者很厲害，可以用淺顯易懂的方式讓當時還是前端麻瓜的我看得懂，那篇文章很推薦新手去看 -&gt; <a href=\"https://medium.com/@hulitw/ramen-and-api-6238437dc544\" target=\"_blank\" rel=\"noopener\">從拉麵店的販賣機理解什麼是 API</a></p>\n<p>最近作者開了一系列的課 -&gt; <a href=\"https://lidemy.com/p/alg101-leetcode\" target=\"_blank\" rel=\"noopener\">先別急著寫 leetcode</a>。因為我不是本科系出身，所以確實在解題時很容易遇上困難，不然就是會想很久。剛好看到這個課程就覺得蠻需要培養如何寫程式的思維，而且重點是免費喔！免費喔！免費喔！（很重要要說 3 次）所以這個系列會記載一些對我有幫助的筆記，希望能讓自己更進步一些。</p>","more":"<h2 id=\"會寫程式的人與初學者差別在哪？\"><a href=\"#會寫程式的人與初學者差別在哪？\" class=\"headerlink\" title=\"會寫程式的人與初學者差別在哪？\"></a>會寫程式的人與初學者差別在哪？</h2><hr>\n<h3 id=\"會寫程式的人\"><a href=\"#會寫程式的人\" class=\"headerlink\" title=\"會寫程式的人\"></a>會寫程式的人</h3><ol>\n<li>先想解法</li>\n<li>如果是有做過或是簡單的，就會直接構思出方法</li>\n<li>如果比較困難或是複雜的問題，就把解法轉換成程式碼</li>\n</ol>\n<h3 id=\"初學者\"><a href=\"#初學者\" class=\"headerlink\" title=\"初學者\"></a>初學者</h3><ul>\n<li>邊寫邊想怎麼解</li>\n<li>試著套用自己以前學過的語法</li>\n</ul>\n<p>這個我自己蠻有感覺的，確實一開始會邊寫邊想，然後如果卡住了，就翻筆記看有什麼語法可以拿來套用，不過通常都沒什麼好下場就是了，哈。</p>\n<h2 id=\"在解題會有兩種情況\"><a href=\"#在解題會有兩種情況\" class=\"headerlink\" title=\"在解題會有兩種情況\"></a>在解題會有兩種情況</h2><hr>\n<h3 id=\"看題目覺得自己解得開\"><a href=\"#看題目覺得自己解得開\" class=\"headerlink\" title=\"看題目覺得自己解得開\"></a>看題目覺得自己解得開</h3><ul>\n<li>有效率的解開</li>\n<li>有解開但是時間花較久</li>\n<li>最後解不開</li>\n</ul>\n<h3 id=\"看題目就覺得看不懂\"><a href=\"#看題目就覺得看不懂\" class=\"headerlink\" title=\"看題目就覺得看不懂\"></a>看題目就覺得看不懂</h3><p>撇開第二種看不懂的情況，在看得懂的情形下，以我自己比較常遇到解不開的狀況是，一開始覺得應該可以怎麼做，可是最後不知道怎麼將想法轉換成程式碼，而講者推薦了一些做法。</p>\n<h2 id=\"推薦初學者寫程式的作法\"><a href=\"#推薦初學者寫程式的作法\" class=\"headerlink\" title=\"推薦初學者寫程式的作法\"></a>推薦初學者寫程式的作法</h2><hr>\n<p>首先看一道題目，然後按照以下的作法，題目是：</p>\n<p>如何印出 1-100 之間的偶數？</p>\n<h3 id=\"想一下解法，不寫任何程式碼\"><a href=\"#想一下解法，不寫任何程式碼\" class=\"headerlink\" title=\"想一下解法，不寫任何程式碼\"></a>想一下解法，不寫任何程式碼</h3><p>先不要急著想寫 code，想如何一步一步解決的方法。</p>\n<ol>\n<li>如何印出 1-100</li>\n<li>如何判斷偶數</li>\n</ol>\n<h3 id=\"把解法寫成-pseudo-code\"><a href=\"#把解法寫成-pseudo-code\" class=\"headerlink\" title=\"把解法寫成 pseudo code\"></a>把解法寫成 pseudo code</h3><p>虛擬碼（pseudo code）在維基百科的解釋： </p>\n<blockquote>\n<p>更類似自然語言。它是半形式化、不標準的語言。我們可以將整個演算法執行過程的結構用接近自然語言的形式（這裡可以使用任何一種作者熟悉的文字，例如中文、英文，重點是將程式的意思表達出來）描述出來。使用虛擬碼，可以幫助我們更好的表述演算法，不用拘泥於具體的實現。</p>\n</blockquote>\n<p>主要是讓自己看得懂的方法，首先要讓如何印出 1-100：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">讓 i &#x3D; 1</span><br><span class=\"line\">如果 i &gt; 100，結束</span><br><span class=\"line\">印出 i</span><br><span class=\"line\">讓 i 可以一直累加</span><br><span class=\"line\">然後再跳回第 2 步</span><br></pre></td></tr></table></figure>\n\n<p>然後題目是要印出偶數，所以把第 3 步改成判斷式：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">讓 i &#x3D; 1</span><br><span class=\"line\">如果 i &gt; 100，結束</span><br><span class=\"line\">如果 i 是偶數，印出 i</span><br><span class=\"line\">讓 i 可以一直累加</span><br><span class=\"line\">然後再跳回第 2 步</span><br></pre></td></tr></table></figure>\n\n<p>雖然 pseudo code 沒有一定的形式，但是可以練習寫成比較像是程式碼的 pseudo code：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">let i &#x3D; 1</span><br><span class=\"line\">if i &gt; 100 then exit</span><br><span class=\"line\">if i % 2 &#x3D;&#x3D;&#x3D; 0, print i</span><br><span class=\"line\">i &#x3D; i + 1</span><br><span class=\"line\">jump to line 2</span><br></pre></td></tr></table></figure>\n\n<p>寫到這邊還可以進一步寫成：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">for (i from 1 to 100) do</span><br><span class=\"line\">\tif (i % 2 &#x3D;&#x3D;&#x3D; 0)</span><br><span class=\"line\">\tprint i</span><br><span class=\"line\">end for</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"把-pseudo-code-翻譯成程式碼\"><a href=\"#把-pseudo-code-翻譯成程式碼\" class=\"headerlink\" title=\"把 pseudo code 翻譯成程式碼\"></a>把 pseudo code 翻譯成程式碼</h3><p>到了這個步驟，如果有學過程式的話，應該就可以把程式碼寫出來，這邊使用 JavaScript 來寫，就可以印出從 1-100 的偶數：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">for ( let i &#x3D; 1; i &lt; 100; i ++) &#123;</span><br><span class=\"line\">\tif(i % 2 &#x3D;&#x3D;&#x3D; 0) &#123;</span><br><span class=\"line\">\t\tconsole.log(i)</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"title":"JS notice： 語法解析器、詞彙環境、執行環境","keywords":["javascript","JavaScript 全攻略：克服 JS 的奇怪部分"],"decription":"Is a note about JavaScript Understanding the Weird Parts by Anthony Alicea","date":"2020-03-31T16:16:57.000Z","_content":"\n由於踩了不少 JavaScript 的雷，想說需要好好的重新認識一下，於是希望藉由 [JavaScript 全攻略：克服 JS 的奇怪部分](https://www.udemy.com/course/javascriptjs/) 這個系列，能夠更增進自己的實力，順便能夠培養寫文章的習慣，那麼就開始吧！Go！Go！\n<!--more-->\n\n## 語法解析器 (Syntax Parsers)\n---\n\n首先要先了解當電腦在執行你寫的 code，其實是看不懂你寫的文字是什麼意思，更精確地說是需要透過中間一個媒介去翻譯成電腦看得懂的東西。而這個媒介是是由人寫出來的程式就是語法解析器，又稱為編譯器（Compilers）。\n\n![給電腦執行的其實是被轉換過，讓電腦看得懂要做什麼。](https://i.imgur.com/500vRoE.png)\n\n**那麼編譯器是怎麼運作的呢？**\n\n當你輸入一段文字，例如： console.log('Hello')，編譯器會一個字一個字地讀，當讀完整個詞時，得到關鍵字 `console.log('Hello')`，就會轉換給電腦看得懂的指令。\n\n## 詞彙環境 (Lexical Environments)\n---\n\n>程式碼在程式中實際所在的位置\n\n詞彙環境在於一些程式語言中，認為程式碼寫在哪裡是很重要的。（不是每個程式語言都這樣）因為它幫助語法解析器看你寫的程式碼，它的語法、它的單字做決定，例如：\n\n```\nfunction greeting () {\n    var a = 'hello world';\n}\n```\n\n所以語法解析器讀到 `var a = 'hello world'` ，它就會了解說，這一段的位置是在 `greeting()` 這個 function 裡面。\n\n## 執行環境 (Execution Contexts)\n---\n\n一般在執行程式的時候，會有許多的詞彙環境，而執行環境會去管理哪一個要執行。\n\n## 資料來源\n---\n\n[圖片來源](https://www.guru99.com/syntax-analysis-parsing-types.html)\n[JavaScript 全攻略：克服 JS 的奇怪部分](https://www.udemy.com/course/javascriptjs/)","source":"_posts/JavaScript的怪奇物語.md","raw":"---\ntitle: JS notice： 語法解析器、詞彙環境、執行環境\ntags:\n  - javascript\ncategories: JavaScript 的怪奇物語\nkeywords:\n  - javascript\n  - JavaScript 全攻略：克服 JS 的奇怪部分\ndecription: Is a note about JavaScript Understanding the Weird Parts by Anthony Alicea\ndate: 2020-04-01 00:16:57\n---\n\n由於踩了不少 JavaScript 的雷，想說需要好好的重新認識一下，於是希望藉由 [JavaScript 全攻略：克服 JS 的奇怪部分](https://www.udemy.com/course/javascriptjs/) 這個系列，能夠更增進自己的實力，順便能夠培養寫文章的習慣，那麼就開始吧！Go！Go！\n<!--more-->\n\n## 語法解析器 (Syntax Parsers)\n---\n\n首先要先了解當電腦在執行你寫的 code，其實是看不懂你寫的文字是什麼意思，更精確地說是需要透過中間一個媒介去翻譯成電腦看得懂的東西。而這個媒介是是由人寫出來的程式就是語法解析器，又稱為編譯器（Compilers）。\n\n![給電腦執行的其實是被轉換過，讓電腦看得懂要做什麼。](https://i.imgur.com/500vRoE.png)\n\n**那麼編譯器是怎麼運作的呢？**\n\n當你輸入一段文字，例如： console.log('Hello')，編譯器會一個字一個字地讀，當讀完整個詞時，得到關鍵字 `console.log('Hello')`，就會轉換給電腦看得懂的指令。\n\n## 詞彙環境 (Lexical Environments)\n---\n\n>程式碼在程式中實際所在的位置\n\n詞彙環境在於一些程式語言中，認為程式碼寫在哪裡是很重要的。（不是每個程式語言都這樣）因為它幫助語法解析器看你寫的程式碼，它的語法、它的單字做決定，例如：\n\n```\nfunction greeting () {\n    var a = 'hello world';\n}\n```\n\n所以語法解析器讀到 `var a = 'hello world'` ，它就會了解說，這一段的位置是在 `greeting()` 這個 function 裡面。\n\n## 執行環境 (Execution Contexts)\n---\n\n一般在執行程式的時候，會有許多的詞彙環境，而執行環境會去管理哪一個要執行。\n\n## 資料來源\n---\n\n[圖片來源](https://www.guru99.com/syntax-analysis-parsing-types.html)\n[JavaScript 全攻略：克服 JS 的奇怪部分](https://www.udemy.com/course/javascriptjs/)","slug":"JavaScript的怪奇物語","published":1,"updated":"2020-03-31T16:33:16.871Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck8q2oqs20008k6u74i3g4v6l","content":"<p>由於踩了不少 JavaScript 的雷，想說需要好好的重新認識一下，於是希望藉由 <a href=\"https://www.udemy.com/course/javascriptjs/\" target=\"_blank\" rel=\"noopener\">JavaScript 全攻略：克服 JS 的奇怪部分</a> 這個系列，能夠更增進自己的實力，順便能夠培養寫文章的習慣，那麼就開始吧！Go！Go！</p>\n<a id=\"more\"></a>\n\n<h2 id=\"語法解析器-Syntax-Parsers\"><a href=\"#語法解析器-Syntax-Parsers\" class=\"headerlink\" title=\"語法解析器 (Syntax Parsers)\"></a>語法解析器 (Syntax Parsers)</h2><hr>\n<p>首先要先了解當電腦在執行你寫的 code，其實是看不懂你寫的文字是什麼意思，更精確地說是需要透過中間一個媒介去翻譯成電腦看得懂的東西。而這個媒介是是由人寫出來的程式就是語法解析器，又稱為編譯器（Compilers）。</p>\n<p><img data-src=\"https://i.imgur.com/500vRoE.png\" alt=\"給電腦執行的其實是被轉換過，讓電腦看得懂要做什麼。\"></p>\n<p><strong>那麼編譯器是怎麼運作的呢？</strong></p>\n<p>當你輸入一段文字，例如： console.log(‘Hello’)，編譯器會一個字一個字地讀，當讀完整個詞時，得到關鍵字 <code>console.log(&#39;Hello&#39;)</code>，就會轉換給電腦看得懂的指令。</p>\n<h2 id=\"詞彙環境-Lexical-Environments\"><a href=\"#詞彙環境-Lexical-Environments\" class=\"headerlink\" title=\"詞彙環境 (Lexical Environments)\"></a>詞彙環境 (Lexical Environments)</h2><hr>\n<blockquote>\n<p>程式碼在程式中實際所在的位置</p>\n</blockquote>\n<p>詞彙環境在於一些程式語言中，認為程式碼寫在哪裡是很重要的。（不是每個程式語言都這樣）因為它幫助語法解析器看你寫的程式碼，它的語法、它的單字做決定，例如：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">function greeting () &#123;</span><br><span class=\"line\">    var a &#x3D; &#39;hello world&#39;;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>所以語法解析器讀到 <code>var a = &#39;hello world&#39;</code> ，它就會了解說，這一段的位置是在 <code>greeting()</code> 這個 function 裡面。</p>\n<h2 id=\"執行環境-Execution-Contexts\"><a href=\"#執行環境-Execution-Contexts\" class=\"headerlink\" title=\"執行環境 (Execution Contexts)\"></a>執行環境 (Execution Contexts)</h2><hr>\n<p>一般在執行程式的時候，會有許多的詞彙環境，而執行環境會去管理哪一個要執行。</p>\n<h2 id=\"資料來源\"><a href=\"#資料來源\" class=\"headerlink\" title=\"資料來源\"></a>資料來源</h2><hr>\n<p><a href=\"https://www.guru99.com/syntax-analysis-parsing-types.html\" target=\"_blank\" rel=\"noopener\">圖片來源</a><br><a href=\"https://www.udemy.com/course/javascriptjs/\" target=\"_blank\" rel=\"noopener\">JavaScript 全攻略：克服 JS 的奇怪部分</a></p>\n","site":{"data":{}},"excerpt":"<p>由於踩了不少 JavaScript 的雷，想說需要好好的重新認識一下，於是希望藉由 <a href=\"https://www.udemy.com/course/javascriptjs/\" target=\"_blank\" rel=\"noopener\">JavaScript 全攻略：克服 JS 的奇怪部分</a> 這個系列，能夠更增進自己的實力，順便能夠培養寫文章的習慣，那麼就開始吧！Go！Go！</p>","more":"<h2 id=\"語法解析器-Syntax-Parsers\"><a href=\"#語法解析器-Syntax-Parsers\" class=\"headerlink\" title=\"語法解析器 (Syntax Parsers)\"></a>語法解析器 (Syntax Parsers)</h2><hr>\n<p>首先要先了解當電腦在執行你寫的 code，其實是看不懂你寫的文字是什麼意思，更精確地說是需要透過中間一個媒介去翻譯成電腦看得懂的東西。而這個媒介是是由人寫出來的程式就是語法解析器，又稱為編譯器（Compilers）。</p>\n<p><img data-src=\"https://i.imgur.com/500vRoE.png\" alt=\"給電腦執行的其實是被轉換過，讓電腦看得懂要做什麼。\"></p>\n<p><strong>那麼編譯器是怎麼運作的呢？</strong></p>\n<p>當你輸入一段文字，例如： console.log(‘Hello’)，編譯器會一個字一個字地讀，當讀完整個詞時，得到關鍵字 <code>console.log(&#39;Hello&#39;)</code>，就會轉換給電腦看得懂的指令。</p>\n<h2 id=\"詞彙環境-Lexical-Environments\"><a href=\"#詞彙環境-Lexical-Environments\" class=\"headerlink\" title=\"詞彙環境 (Lexical Environments)\"></a>詞彙環境 (Lexical Environments)</h2><hr>\n<blockquote>\n<p>程式碼在程式中實際所在的位置</p>\n</blockquote>\n<p>詞彙環境在於一些程式語言中，認為程式碼寫在哪裡是很重要的。（不是每個程式語言都這樣）因為它幫助語法解析器看你寫的程式碼，它的語法、它的單字做決定，例如：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">function greeting () &#123;</span><br><span class=\"line\">    var a &#x3D; &#39;hello world&#39;;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>所以語法解析器讀到 <code>var a = &#39;hello world&#39;</code> ，它就會了解說，這一段的位置是在 <code>greeting()</code> 這個 function 裡面。</p>\n<h2 id=\"執行環境-Execution-Contexts\"><a href=\"#執行環境-Execution-Contexts\" class=\"headerlink\" title=\"執行環境 (Execution Contexts)\"></a>執行環境 (Execution Contexts)</h2><hr>\n<p>一般在執行程式的時候，會有許多的詞彙環境，而執行環境會去管理哪一個要執行。</p>\n<h2 id=\"資料來源\"><a href=\"#資料來源\" class=\"headerlink\" title=\"資料來源\"></a>資料來源</h2><hr>\n<p><a href=\"https://www.guru99.com/syntax-analysis-parsing-types.html\" target=\"_blank\" rel=\"noopener\">圖片來源</a><br><a href=\"https://www.udemy.com/course/javascriptjs/\" target=\"_blank\" rel=\"noopener\">JavaScript 全攻略：克服 JS 的奇怪部分</a></p>"},{"title":"基礎 Vue.js(上)","date":"2020-03-30T03:34:35.000Z","keywords":["vue","javascript","前端框架"],"decription":"Basic use about Vue.","_content":"\n身為目前 3 大前端應用框架之一的 Vue.js，截至目前為止在 GitHub 已經累積 160k 的星星數，以下是個人淺薄的學習筆記。\n<!--more-->\n\n## 開發環境\n---\n\n在 [Vue.js官網](https://cn.vuejs.org/v2/guide/installation.html) 中建議在瀏覽器上安裝 [Vue Devtools](https://github.com/vuejs/vue-devtools#vue-devtools)，這樣可以方便在瀏覽器中觀看訊息。\n\n在 `<script>` 中直接載入 Vue 的檔案，在官網有提供各式檔案來源可供存取，要注意的是如果在開發環境下，建議使用開發版本，這樣會提供完整的警告訊息，方便開發者去查閱問題來源。\n\n## 應用程式建立\n---\n\n首先在 HTML 建立一個 `div` ，這邊可以使用 id 或是 class，一般建議是使用 id，\n\n接著在 `<script>` 中輸入建立 Vue 的起手式\n\n```\n<div>\n  <div id=\"app\"></div>\n</div>\n    \n<script>\n  var app = new Vue({\n    el: '#app'\n  })\n</script>\n```\n\n然後打開瀏覽器的開發人員工具，如果有安裝  [Vue Devtools](https://github.com/vuejs/vue-devtools#vue-devtools) 就可以看到已經建立了一個 Root\n\n![](https://i.imgur.com/01jwjmg.png)\n\n如果要建立資料的話，然後顯示在 HTML 上：\n\n```\n<div>\n  <div id=\"app\">\n  <!-- 建立完data，想要顯示message的話，在 {{ }} 中放入名稱就可以顯示 -->\n    {{message}} \n  </div>\n</div>\n    \n<script>\n  var app = new Vue({\n    el: '#app',\n    // 建立data，裡面可以存放資料，例如 message\n    data: {\n      message: 'Hello World'\n    }\n  })\n</script>\n```\n\n注意事項： 一個頁面可以同時建立 2 個 app，但是 3 個就沒辦法\n\n```\n<div>\n  <div id=\"app\">\n    {{message}} \n  </div>\n    \n  <div id=\"app2\">\n    {{message}} \n  </div>\n</div>\n    \n<script>\n  var app = new Vue({\n    el: '#app',\n    data: {\n    \tmessage: 'Hello'\n    }\n  })\n    \n  var app2 = new Vue({\n    el: 'app2',\n    data: {\n    \tmessage: 'World'\n    }\n  })\n</script>\n```\n\n建立兩個是可以的，一樣會出現 2 個 Root\n\n![](https://i.imgur.com/BYN501c.png)\n\n但是如果建立 3 個 app，就會出現找不到 element\n\n![](https://i.imgur.com/eyWxDkg.png)\n\n## 雙向綁定的資料\n\n在 Vue 中，有雙向綁定的特色，\n\n前面提到如果要將資料顯示在網頁上，可以使用 `{% raw %}{{  }}{% endraw %}` 這個語法，在 Vue 的語法中還有其他可以使用的：\n\n- v-model\n- v-text\n- v-html\n\n### v-model 的使用\n\n主要是使用在：\n\n- `<input>`\n- `<select>`\n- `<textarea>`\n- components\n\n例如：\n\n```\n<div id=\"app\">\n  {{message}}\n  <input type=\"text\" v-model=\"message\">\n</div>\n    \n<script>\n  var app = new Vue({\n    el: '#app',\n    data: {\n    \tmessage: 'Hello'\n    }\n  })\n</script>\n```\n\n在畫面上 `<text>` 跟 `{{message}}` 就會顯示一樣的內容\n\n![](https://i.imgur.com/bwOOIxu.png)\n\n而當直接在畫面修改 `<text>` 輸入欄中的內容時，`{{message}}`也會一起改變。\n\n![](https://i.imgur.com/NvbXPV9.png)\n\n### v-text 跟 v-html 使用的方法\n\n兩者差不多，都可以直接顯示內容，差別在 `v-html` 可以加入 html 標籤\n\n```\n<div id=\"app\">\n  {{message}}\n  <input type=\"text\" v-model=\"message\">\n  <div v-text=\"message\"></div>\n  <div v-html=\"message\"></div>\n</div>\n    \n<script>\n  var app = new Vue({\n    el: '#app',\n    \n    data: {\n    \tmessage: '<h1>Hello</h1>'\n    }\n  })\n</script>\n```\n\n在畫面上的呈現是這樣：\n\n![](https://i.imgur.com/Rhr0U3R.png)","source":"_posts/基礎 Vue.js-1.md","raw":"---\ntitle: 基礎 Vue.js(上)\ntags:\n  - vue\n  - javascript\ndate: 2020-03-30 11:34:35\ncategories: vue\nkeywords: \n- vue\n- javascript\n- 前端框架\ndecription: Basic use about Vue.\n---\n\n身為目前 3 大前端應用框架之一的 Vue.js，截至目前為止在 GitHub 已經累積 160k 的星星數，以下是個人淺薄的學習筆記。\n<!--more-->\n\n## 開發環境\n---\n\n在 [Vue.js官網](https://cn.vuejs.org/v2/guide/installation.html) 中建議在瀏覽器上安裝 [Vue Devtools](https://github.com/vuejs/vue-devtools#vue-devtools)，這樣可以方便在瀏覽器中觀看訊息。\n\n在 `<script>` 中直接載入 Vue 的檔案，在官網有提供各式檔案來源可供存取，要注意的是如果在開發環境下，建議使用開發版本，這樣會提供完整的警告訊息，方便開發者去查閱問題來源。\n\n## 應用程式建立\n---\n\n首先在 HTML 建立一個 `div` ，這邊可以使用 id 或是 class，一般建議是使用 id，\n\n接著在 `<script>` 中輸入建立 Vue 的起手式\n\n```\n<div>\n  <div id=\"app\"></div>\n</div>\n    \n<script>\n  var app = new Vue({\n    el: '#app'\n  })\n</script>\n```\n\n然後打開瀏覽器的開發人員工具，如果有安裝  [Vue Devtools](https://github.com/vuejs/vue-devtools#vue-devtools) 就可以看到已經建立了一個 Root\n\n![](https://i.imgur.com/01jwjmg.png)\n\n如果要建立資料的話，然後顯示在 HTML 上：\n\n```\n<div>\n  <div id=\"app\">\n  <!-- 建立完data，想要顯示message的話，在 {{ }} 中放入名稱就可以顯示 -->\n    {{message}} \n  </div>\n</div>\n    \n<script>\n  var app = new Vue({\n    el: '#app',\n    // 建立data，裡面可以存放資料，例如 message\n    data: {\n      message: 'Hello World'\n    }\n  })\n</script>\n```\n\n注意事項： 一個頁面可以同時建立 2 個 app，但是 3 個就沒辦法\n\n```\n<div>\n  <div id=\"app\">\n    {{message}} \n  </div>\n    \n  <div id=\"app2\">\n    {{message}} \n  </div>\n</div>\n    \n<script>\n  var app = new Vue({\n    el: '#app',\n    data: {\n    \tmessage: 'Hello'\n    }\n  })\n    \n  var app2 = new Vue({\n    el: 'app2',\n    data: {\n    \tmessage: 'World'\n    }\n  })\n</script>\n```\n\n建立兩個是可以的，一樣會出現 2 個 Root\n\n![](https://i.imgur.com/BYN501c.png)\n\n但是如果建立 3 個 app，就會出現找不到 element\n\n![](https://i.imgur.com/eyWxDkg.png)\n\n## 雙向綁定的資料\n\n在 Vue 中，有雙向綁定的特色，\n\n前面提到如果要將資料顯示在網頁上，可以使用 `{% raw %}{{  }}{% endraw %}` 這個語法，在 Vue 的語法中還有其他可以使用的：\n\n- v-model\n- v-text\n- v-html\n\n### v-model 的使用\n\n主要是使用在：\n\n- `<input>`\n- `<select>`\n- `<textarea>`\n- components\n\n例如：\n\n```\n<div id=\"app\">\n  {{message}}\n  <input type=\"text\" v-model=\"message\">\n</div>\n    \n<script>\n  var app = new Vue({\n    el: '#app',\n    data: {\n    \tmessage: 'Hello'\n    }\n  })\n</script>\n```\n\n在畫面上 `<text>` 跟 `{{message}}` 就會顯示一樣的內容\n\n![](https://i.imgur.com/bwOOIxu.png)\n\n而當直接在畫面修改 `<text>` 輸入欄中的內容時，`{{message}}`也會一起改變。\n\n![](https://i.imgur.com/NvbXPV9.png)\n\n### v-text 跟 v-html 使用的方法\n\n兩者差不多，都可以直接顯示內容，差別在 `v-html` 可以加入 html 標籤\n\n```\n<div id=\"app\">\n  {{message}}\n  <input type=\"text\" v-model=\"message\">\n  <div v-text=\"message\"></div>\n  <div v-html=\"message\"></div>\n</div>\n    \n<script>\n  var app = new Vue({\n    el: '#app',\n    \n    data: {\n    \tmessage: '<h1>Hello</h1>'\n    }\n  })\n</script>\n```\n\n在畫面上的呈現是這樣：\n\n![](https://i.imgur.com/Rhr0U3R.png)","slug":"基礎 Vue.js-1","published":1,"updated":"2020-03-30T08:59:44.332Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck8q2oqs40009k6u7e3y9h55h","content":"<p>身為目前 3 大前端應用框架之一的 Vue.js，截至目前為止在 GitHub 已經累積 160k 的星星數，以下是個人淺薄的學習筆記。</p>\n<a id=\"more\"></a>\n\n<h2 id=\"開發環境\"><a href=\"#開發環境\" class=\"headerlink\" title=\"開發環境\"></a>開發環境</h2><hr>\n<p>在 <a href=\"https://cn.vuejs.org/v2/guide/installation.html\" target=\"_blank\" rel=\"noopener\">Vue.js官網</a> 中建議在瀏覽器上安裝 <a href=\"https://github.com/vuejs/vue-devtools#vue-devtools\" target=\"_blank\" rel=\"noopener\">Vue Devtools</a>，這樣可以方便在瀏覽器中觀看訊息。</p>\n<p>在 <code>&lt;script&gt;</code> 中直接載入 Vue 的檔案，在官網有提供各式檔案來源可供存取，要注意的是如果在開發環境下，建議使用開發版本，這樣會提供完整的警告訊息，方便開發者去查閱問題來源。</p>\n<h2 id=\"應用程式建立\"><a href=\"#應用程式建立\" class=\"headerlink\" title=\"應用程式建立\"></a>應用程式建立</h2><hr>\n<p>首先在 HTML 建立一個 <code>div</code> ，這邊可以使用 id 或是 class，一般建議是使用 id，</p>\n<p>接著在 <code>&lt;script&gt;</code> 中輸入建立 Vue 的起手式</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;div&gt;</span><br><span class=\"line\">  &lt;div id&#x3D;&quot;app&quot;&gt;&lt;&#x2F;div&gt;</span><br><span class=\"line\">&lt;&#x2F;div&gt;</span><br><span class=\"line\">    </span><br><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">  var app &#x3D; new Vue(&#123;</span><br><span class=\"line\">    el: &#39;#app&#39;</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure>\n\n<p>然後打開瀏覽器的開發人員工具，如果有安裝  <a href=\"https://github.com/vuejs/vue-devtools#vue-devtools\" target=\"_blank\" rel=\"noopener\">Vue Devtools</a> 就可以看到已經建立了一個 Root</p>\n<p><img data-src=\"https://i.imgur.com/01jwjmg.png\" alt=\"\"></p>\n<p>如果要建立資料的話，然後顯示在 HTML 上：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;div&gt;</span><br><span class=\"line\">  &lt;div id&#x3D;&quot;app&quot;&gt;</span><br><span class=\"line\">  &lt;!-- 建立完data，想要顯示message的話，在 &#123;&#123; &#125;&#125; 中放入名稱就可以顯示 --&gt;</span><br><span class=\"line\">    &#123;&#123;message&#125;&#125; </span><br><span class=\"line\">  &lt;&#x2F;div&gt;</span><br><span class=\"line\">&lt;&#x2F;div&gt;</span><br><span class=\"line\">    </span><br><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">  var app &#x3D; new Vue(&#123;</span><br><span class=\"line\">    el: &#39;#app&#39;,</span><br><span class=\"line\">    &#x2F;&#x2F; 建立data，裡面可以存放資料，例如 message</span><br><span class=\"line\">    data: &#123;</span><br><span class=\"line\">      message: &#39;Hello World&#39;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure>\n\n<p>注意事項： 一個頁面可以同時建立 2 個 app，但是 3 個就沒辦法</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;div&gt;</span><br><span class=\"line\">  &lt;div id&#x3D;&quot;app&quot;&gt;</span><br><span class=\"line\">    &#123;&#123;message&#125;&#125; </span><br><span class=\"line\">  &lt;&#x2F;div&gt;</span><br><span class=\"line\">    </span><br><span class=\"line\">  &lt;div id&#x3D;&quot;app2&quot;&gt;</span><br><span class=\"line\">    &#123;&#123;message&#125;&#125; </span><br><span class=\"line\">  &lt;&#x2F;div&gt;</span><br><span class=\"line\">&lt;&#x2F;div&gt;</span><br><span class=\"line\">    </span><br><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">  var app &#x3D; new Vue(&#123;</span><br><span class=\"line\">    el: &#39;#app&#39;,</span><br><span class=\"line\">    data: &#123;</span><br><span class=\"line\">    \tmessage: &#39;Hello&#39;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">    </span><br><span class=\"line\">  var app2 &#x3D; new Vue(&#123;</span><br><span class=\"line\">    el: &#39;app2&#39;,</span><br><span class=\"line\">    data: &#123;</span><br><span class=\"line\">    \tmessage: &#39;World&#39;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure>\n\n<p>建立兩個是可以的，一樣會出現 2 個 Root</p>\n<p><img data-src=\"https://i.imgur.com/BYN501c.png\" alt=\"\"></p>\n<p>但是如果建立 3 個 app，就會出現找不到 element</p>\n<p><img data-src=\"https://i.imgur.com/eyWxDkg.png\" alt=\"\"></p>\n<h2 id=\"雙向綁定的資料\"><a href=\"#雙向綁定的資料\" class=\"headerlink\" title=\"雙向綁定的資料\"></a>雙向綁定的資料</h2><p>在 Vue 中，有雙向綁定的特色，</p>\n<p>前面提到如果要將資料顯示在網頁上，可以使用 <code>{{  }}</code> 這個語法，在 Vue 的語法中還有其他可以使用的：</p>\n<ul>\n<li>v-model</li>\n<li>v-text</li>\n<li>v-html</li>\n</ul>\n<h3 id=\"v-model-的使用\"><a href=\"#v-model-的使用\" class=\"headerlink\" title=\"v-model 的使用\"></a>v-model 的使用</h3><p>主要是使用在：</p>\n<ul>\n<li><code>&lt;input&gt;</code></li>\n<li><code>&lt;select&gt;</code></li>\n<li><code>&lt;textarea&gt;</code></li>\n<li>components</li>\n</ul>\n<p>例如：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;div id&#x3D;&quot;app&quot;&gt;</span><br><span class=\"line\">  &#123;&#123;message&#125;&#125;</span><br><span class=\"line\">  &lt;input type&#x3D;&quot;text&quot; v-model&#x3D;&quot;message&quot;&gt;</span><br><span class=\"line\">&lt;&#x2F;div&gt;</span><br><span class=\"line\">    </span><br><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">  var app &#x3D; new Vue(&#123;</span><br><span class=\"line\">    el: &#39;#app&#39;,</span><br><span class=\"line\">    data: &#123;</span><br><span class=\"line\">    \tmessage: &#39;Hello&#39;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure>\n\n<p>在畫面上 <code>&lt;text&gt;</code> 跟 <code></code> 就會顯示一樣的內容</p>\n<p><img data-src=\"https://i.imgur.com/bwOOIxu.png\" alt=\"\"></p>\n<p>而當直接在畫面修改 <code>&lt;text&gt;</code> 輸入欄中的內容時，<code></code>也會一起改變。</p>\n<p><img data-src=\"https://i.imgur.com/NvbXPV9.png\" alt=\"\"></p>\n<h3 id=\"v-text-跟-v-html-使用的方法\"><a href=\"#v-text-跟-v-html-使用的方法\" class=\"headerlink\" title=\"v-text 跟 v-html 使用的方法\"></a>v-text 跟 v-html 使用的方法</h3><p>兩者差不多，都可以直接顯示內容，差別在 <code>v-html</code> 可以加入 html 標籤</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;div id&#x3D;&quot;app&quot;&gt;</span><br><span class=\"line\">  &#123;&#123;message&#125;&#125;</span><br><span class=\"line\">  &lt;input type&#x3D;&quot;text&quot; v-model&#x3D;&quot;message&quot;&gt;</span><br><span class=\"line\">  &lt;div v-text&#x3D;&quot;message&quot;&gt;&lt;&#x2F;div&gt;</span><br><span class=\"line\">  &lt;div v-html&#x3D;&quot;message&quot;&gt;&lt;&#x2F;div&gt;</span><br><span class=\"line\">&lt;&#x2F;div&gt;</span><br><span class=\"line\">    </span><br><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">  var app &#x3D; new Vue(&#123;</span><br><span class=\"line\">    el: &#39;#app&#39;,</span><br><span class=\"line\">    </span><br><span class=\"line\">    data: &#123;</span><br><span class=\"line\">    \tmessage: &#39;&lt;h1&gt;Hello&lt;&#x2F;h1&gt;&#39;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure>\n\n<p>在畫面上的呈現是這樣：</p>\n<p><img data-src=\"https://i.imgur.com/Rhr0U3R.png\" alt=\"\"></p>\n","site":{"data":{}},"excerpt":"<p>身為目前 3 大前端應用框架之一的 Vue.js，截至目前為止在 GitHub 已經累積 160k 的星星數，以下是個人淺薄的學習筆記。</p>","more":"<h2 id=\"開發環境\"><a href=\"#開發環境\" class=\"headerlink\" title=\"開發環境\"></a>開發環境</h2><hr>\n<p>在 <a href=\"https://cn.vuejs.org/v2/guide/installation.html\" target=\"_blank\" rel=\"noopener\">Vue.js官網</a> 中建議在瀏覽器上安裝 <a href=\"https://github.com/vuejs/vue-devtools#vue-devtools\" target=\"_blank\" rel=\"noopener\">Vue Devtools</a>，這樣可以方便在瀏覽器中觀看訊息。</p>\n<p>在 <code>&lt;script&gt;</code> 中直接載入 Vue 的檔案，在官網有提供各式檔案來源可供存取，要注意的是如果在開發環境下，建議使用開發版本，這樣會提供完整的警告訊息，方便開發者去查閱問題來源。</p>\n<h2 id=\"應用程式建立\"><a href=\"#應用程式建立\" class=\"headerlink\" title=\"應用程式建立\"></a>應用程式建立</h2><hr>\n<p>首先在 HTML 建立一個 <code>div</code> ，這邊可以使用 id 或是 class，一般建議是使用 id，</p>\n<p>接著在 <code>&lt;script&gt;</code> 中輸入建立 Vue 的起手式</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;div&gt;</span><br><span class=\"line\">  &lt;div id&#x3D;&quot;app&quot;&gt;&lt;&#x2F;div&gt;</span><br><span class=\"line\">&lt;&#x2F;div&gt;</span><br><span class=\"line\">    </span><br><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">  var app &#x3D; new Vue(&#123;</span><br><span class=\"line\">    el: &#39;#app&#39;</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure>\n\n<p>然後打開瀏覽器的開發人員工具，如果有安裝  <a href=\"https://github.com/vuejs/vue-devtools#vue-devtools\" target=\"_blank\" rel=\"noopener\">Vue Devtools</a> 就可以看到已經建立了一個 Root</p>\n<p><img data-src=\"https://i.imgur.com/01jwjmg.png\" alt=\"\"></p>\n<p>如果要建立資料的話，然後顯示在 HTML 上：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;div&gt;</span><br><span class=\"line\">  &lt;div id&#x3D;&quot;app&quot;&gt;</span><br><span class=\"line\">  &lt;!-- 建立完data，想要顯示message的話，在 &#123;&#123; &#125;&#125; 中放入名稱就可以顯示 --&gt;</span><br><span class=\"line\">    &#123;&#123;message&#125;&#125; </span><br><span class=\"line\">  &lt;&#x2F;div&gt;</span><br><span class=\"line\">&lt;&#x2F;div&gt;</span><br><span class=\"line\">    </span><br><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">  var app &#x3D; new Vue(&#123;</span><br><span class=\"line\">    el: &#39;#app&#39;,</span><br><span class=\"line\">    &#x2F;&#x2F; 建立data，裡面可以存放資料，例如 message</span><br><span class=\"line\">    data: &#123;</span><br><span class=\"line\">      message: &#39;Hello World&#39;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure>\n\n<p>注意事項： 一個頁面可以同時建立 2 個 app，但是 3 個就沒辦法</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;div&gt;</span><br><span class=\"line\">  &lt;div id&#x3D;&quot;app&quot;&gt;</span><br><span class=\"line\">    &#123;&#123;message&#125;&#125; </span><br><span class=\"line\">  &lt;&#x2F;div&gt;</span><br><span class=\"line\">    </span><br><span class=\"line\">  &lt;div id&#x3D;&quot;app2&quot;&gt;</span><br><span class=\"line\">    &#123;&#123;message&#125;&#125; </span><br><span class=\"line\">  &lt;&#x2F;div&gt;</span><br><span class=\"line\">&lt;&#x2F;div&gt;</span><br><span class=\"line\">    </span><br><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">  var app &#x3D; new Vue(&#123;</span><br><span class=\"line\">    el: &#39;#app&#39;,</span><br><span class=\"line\">    data: &#123;</span><br><span class=\"line\">    \tmessage: &#39;Hello&#39;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">    </span><br><span class=\"line\">  var app2 &#x3D; new Vue(&#123;</span><br><span class=\"line\">    el: &#39;app2&#39;,</span><br><span class=\"line\">    data: &#123;</span><br><span class=\"line\">    \tmessage: &#39;World&#39;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure>\n\n<p>建立兩個是可以的，一樣會出現 2 個 Root</p>\n<p><img data-src=\"https://i.imgur.com/BYN501c.png\" alt=\"\"></p>\n<p>但是如果建立 3 個 app，就會出現找不到 element</p>\n<p><img data-src=\"https://i.imgur.com/eyWxDkg.png\" alt=\"\"></p>\n<h2 id=\"雙向綁定的資料\"><a href=\"#雙向綁定的資料\" class=\"headerlink\" title=\"雙向綁定的資料\"></a>雙向綁定的資料</h2><p>在 Vue 中，有雙向綁定的特色，</p>\n<p>前面提到如果要將資料顯示在網頁上，可以使用 <code>{{  }}</code> 這個語法，在 Vue 的語法中還有其他可以使用的：</p>\n<ul>\n<li>v-model</li>\n<li>v-text</li>\n<li>v-html</li>\n</ul>\n<h3 id=\"v-model-的使用\"><a href=\"#v-model-的使用\" class=\"headerlink\" title=\"v-model 的使用\"></a>v-model 的使用</h3><p>主要是使用在：</p>\n<ul>\n<li><code>&lt;input&gt;</code></li>\n<li><code>&lt;select&gt;</code></li>\n<li><code>&lt;textarea&gt;</code></li>\n<li>components</li>\n</ul>\n<p>例如：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;div id&#x3D;&quot;app&quot;&gt;</span><br><span class=\"line\">  &#123;&#123;message&#125;&#125;</span><br><span class=\"line\">  &lt;input type&#x3D;&quot;text&quot; v-model&#x3D;&quot;message&quot;&gt;</span><br><span class=\"line\">&lt;&#x2F;div&gt;</span><br><span class=\"line\">    </span><br><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">  var app &#x3D; new Vue(&#123;</span><br><span class=\"line\">    el: &#39;#app&#39;,</span><br><span class=\"line\">    data: &#123;</span><br><span class=\"line\">    \tmessage: &#39;Hello&#39;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure>\n\n<p>在畫面上 <code>&lt;text&gt;</code> 跟 <code></code> 就會顯示一樣的內容</p>\n<p><img data-src=\"https://i.imgur.com/bwOOIxu.png\" alt=\"\"></p>\n<p>而當直接在畫面修改 <code>&lt;text&gt;</code> 輸入欄中的內容時，<code></code>也會一起改變。</p>\n<p><img data-src=\"https://i.imgur.com/NvbXPV9.png\" alt=\"\"></p>\n<h3 id=\"v-text-跟-v-html-使用的方法\"><a href=\"#v-text-跟-v-html-使用的方法\" class=\"headerlink\" title=\"v-text 跟 v-html 使用的方法\"></a>v-text 跟 v-html 使用的方法</h3><p>兩者差不多，都可以直接顯示內容，差別在 <code>v-html</code> 可以加入 html 標籤</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;div id&#x3D;&quot;app&quot;&gt;</span><br><span class=\"line\">  &#123;&#123;message&#125;&#125;</span><br><span class=\"line\">  &lt;input type&#x3D;&quot;text&quot; v-model&#x3D;&quot;message&quot;&gt;</span><br><span class=\"line\">  &lt;div v-text&#x3D;&quot;message&quot;&gt;&lt;&#x2F;div&gt;</span><br><span class=\"line\">  &lt;div v-html&#x3D;&quot;message&quot;&gt;&lt;&#x2F;div&gt;</span><br><span class=\"line\">&lt;&#x2F;div&gt;</span><br><span class=\"line\">    </span><br><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">  var app &#x3D; new Vue(&#123;</span><br><span class=\"line\">    el: &#39;#app&#39;,</span><br><span class=\"line\">    </span><br><span class=\"line\">    data: &#123;</span><br><span class=\"line\">    \tmessage: &#39;&lt;h1&gt;Hello&lt;&#x2F;h1&gt;&#39;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure>\n\n<p>在畫面上的呈現是這樣：</p>\n<p><img data-src=\"https://i.imgur.com/Rhr0U3R.png\" alt=\"\"></p>"},{"title":"基礎 Vue.js(中)","date":"2020-03-30T08:52:44.000Z","keywords":["vue","javascript","前端框架"],"decription":"Basic use about Vue.","_content":"\n此篇會講到關於 MVVM 的概念、綁定、for 迴圈及判斷，還有行為 on 的使用。\n<!--more-->\n\n## MVVM 的概念\n---\n\n首先要先提到傳統 MVC 的概念，\n\n在 Web 應用程式的劃分分為：\n\n- 模型（Model）\n- 視圖（View）\n- 控制器（Controller）\n\n![](https://i.imgur.com/lmb7P7R.png)\n> 圖片來自 TechTerms.com\n\n使用者第一眼看到的就是 View，如果使用者想要取得某些資料，這時 View 會發送請求給 Controller，然後 Controller 會請 Model 找出資料，Model 就會另外在資料庫找出資料，Model 取得資料後，再回傳給 Controller，Controller 再呈現出畫面在 View 上。\n\n### 那麼 MVVM 又是什麼概念？\n\nView 跟 ViewModel 是綁定的，如果使用者想要取得資料，View 會直接請求給 Model，然後 Model 透過 Database 找到資料再回傳給 ViewModel，會直接即時顯示在 View 上。\n\n![](https://i.imgur.com/hYs0zLQ.png)\n> 圖片來自維基百科\n\n### 所以 Vue.js 跟 一般 JavaScript 有什麼不同？\n\n一般 JavaScript 在處理畫面上是直接操作 Dom 元素\n\n而 Vue.js 是以資料狀態操作 Dom 元素時，是以資料狀態去變動。\n\n## v-bind 動態屬性指令\n---\n\n上面提到 Vue.js 是以資料狀態去變動，這邊要來實際操作一下如何載入圖片：\n\n`<img v-bind:src=\"imageSrc\">`\n\n縮寫\n\n`<img :src=\"imageSrc\">`\n\n以下範例：\n\n```\n<div id='app'>\n  <!-- 綁定一個屬性src -->\n  <img v-bind:src=\"imgSrc\"> \n</div>\n    \n<script>\n  var app = new Vue({\n    el: '#app', \n    data: {\n    \timgSrc: 'https://images.unsplash.com/photo-1529778873920-4da4926a72c2?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1576&q=80'\n    }\n  })\n</scripy>\n```\n\n這樣就可以讓圖片顯示出來了\n\n{% iframe https://codepen.io/bucky0112/embed/KKpyXJB?height=361&theme-id=dark&default-tab=js,result %}\n\n\n不過圖片似乎太大，所以還可以改小一點\n\n這邊使用 Bootstrap 的 `.img-fluid` ，讓圖片設定為響應式。\n\n```\n<div id='app'>\n  <!-- 多綁定一個屬性class -->\n  <img v-bind:src=\"imgSrc\" v-bind:class=\"className\"> \n</div>\n    \n<script>\n  var app = new Vue({\n    el: '#app', \n    data: {\n    \timgSrc: 'https://images.unsplash.com/photo-1529778873920-4da4926a72c2?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1576&q=80',\n    \tclassName: 'img-fluid'\n    }\n  })\n</scripy> \n```\n\n{% iframe https://codepen.io/bucky0112/embed/wvaPPXQ?height=265&theme-id=dark&default-tab=js,result %}\n\n## v-if 及 v-for\n---\n\n這邊的 data 中有一組陣列屬於 JSON 格式，要運用 `v-for` 讓它顯示在畫面上\n\n```\nvar app = new Vue({\n  el: \"#app\",\n  data: {\n    list: [\n      {\n        name: \"小明\",\n        age: 16\n      },\n      {\n        name: \"媽媽\",\n        age: 38\n      },\n      {\n        name: \"漂亮阿姨\",\n        age: 24\n      }\n    ]\n  }\n});\n```\n\n這邊有一個語法 `<pre></pre>`，可以讓內容先在頁面上顯示出來，以方便開發者觀看。\n\n```\n<div id=\"app\">\n  <pre>{{list}}</pre>\n</div>\n```\n\n如果要讓全部的資料使用 for 迴圈跑出來，在 Vue 的方式是用 `v-for`\n\n```\n<div id=\"app\">\n  <ul>\n    <!-- item可以使用任意名稱 -->\n    <li v-for=\"item in list\">\n      {{item.name}}的年齡是 {{item.age}}\n    </li>\n  </ul>\n</div>\n```\n\n會顯示\n\n- 小明的年齡是 16\n- 媽媽的年齡是 38\n- 漂亮阿姨的年齡是 24\n\n如果想要顯示每一個 `li` 在陣列中索引是第幾個\n\n```\n<div id=\"app\">\n  <ul>\n      <!-- (陣列的值, 陣列的索引) -->\n    <li v-for=\"(item, index) in list\">\n      <!-- 索引是從 0 開始，如果要從 1 開始顯示要記得加 1 -->\n      {{index + 1}} - {{item.name}}的年齡是 {{item.age}}\n    </li>\n  </ul>\n</div>\n```\n\n如果要顯示大於 24 的資料的話，可以使用判斷式 `v-if`\n\n```\n<div id=\"app\">\n  <ul>\n    <li v-for=\"(item, index) in list\" v-if=\"item.age > 24\">\n      {{index + 1}} - {{item.name}}的年齡是 {{item.age}}\n    </li>\n  </ul>\n</div>\n```\n\n{% iframe https://codepen.io/bucky0112/embed/BaNmJaE?height=265&theme-id=dark&default-tab=js,result %}\n\n## 利用 v-on 來操作行為\n---\n\n在 jQuery 中，如果要操作行為的話，會使用 \n\n```\n$(selector).on(events, function () {\n        \n});\n```\n\n而在 Vue 中，方法差不多，採用的是 `v-on`，範例如下：\n\n```\n<!-- v-on:click 可以使用縮寫成 @click -->\n<button v-on:click=\"doThis\"></button>\n```\n\n這邊做一個反轉文字的練習\n\n```\n<div id=\"app\">\n  <!-- 用v-on:keyup.enter，綁定鍵盤按Enter事件到reverseText這個function -->\n  <input type=\"text\" v-model=\"text\" v-on:keyup.enter=\"reverseText\">\n  <!-- 用v-on:click綁定點擊事件到reverseText這個function -->\n  <button v-on:click=\"reverseText\">Reverse Text</button>\n  <div class=\"showText\">\n    {{newText}}\n  </div>\n</div>\n    \n<script>\n  var app = new Vue({\n    el: \"#app\",\n    data: {\n    \ttext: \"\",\n    \tnewText: \"\"\n    },\n    methods: {\n    \treverseText: function() {\n        // 反轉文字的語法 split(\"\").reverse().join(\"\")\n    \t\t// 當點擊按鈕後啟動function，this.newText顯示內容\n    \t  this.newText = this.text.split(\"\").reverse().join(\"\");\n    \t}\n    }\n  });\n</script>\n```\n\n> 重點 1：這邊控制資料要加上 \"this\"，像是 \"this.newText\"，沒有的話就不會顯示。\n\n> 重點 2 : 預先定義資料狀態很重要，如果 data 中的資料沒有先定義好，會發生錯誤\n\n{% iframe https://codepen.io/bucky0112/embed/abOEdRq?height=265&theme-id=dark&default-tab=js,result %}","source":"_posts/基礎Vue-js-2.md","raw":"---\ntitle: 基礎 Vue.js(中)\ntags:\n  - vue\n  - javascript\ndate: 2020-03-30 16:52:44\ncategories: vue\nkeywords: \n- vue\n- javascript\n- 前端框架\ndecription: Basic use about Vue.\n---\n\n此篇會講到關於 MVVM 的概念、綁定、for 迴圈及判斷，還有行為 on 的使用。\n<!--more-->\n\n## MVVM 的概念\n---\n\n首先要先提到傳統 MVC 的概念，\n\n在 Web 應用程式的劃分分為：\n\n- 模型（Model）\n- 視圖（View）\n- 控制器（Controller）\n\n![](https://i.imgur.com/lmb7P7R.png)\n> 圖片來自 TechTerms.com\n\n使用者第一眼看到的就是 View，如果使用者想要取得某些資料，這時 View 會發送請求給 Controller，然後 Controller 會請 Model 找出資料，Model 就會另外在資料庫找出資料，Model 取得資料後，再回傳給 Controller，Controller 再呈現出畫面在 View 上。\n\n### 那麼 MVVM 又是什麼概念？\n\nView 跟 ViewModel 是綁定的，如果使用者想要取得資料，View 會直接請求給 Model，然後 Model 透過 Database 找到資料再回傳給 ViewModel，會直接即時顯示在 View 上。\n\n![](https://i.imgur.com/hYs0zLQ.png)\n> 圖片來自維基百科\n\n### 所以 Vue.js 跟 一般 JavaScript 有什麼不同？\n\n一般 JavaScript 在處理畫面上是直接操作 Dom 元素\n\n而 Vue.js 是以資料狀態操作 Dom 元素時，是以資料狀態去變動。\n\n## v-bind 動態屬性指令\n---\n\n上面提到 Vue.js 是以資料狀態去變動，這邊要來實際操作一下如何載入圖片：\n\n`<img v-bind:src=\"imageSrc\">`\n\n縮寫\n\n`<img :src=\"imageSrc\">`\n\n以下範例：\n\n```\n<div id='app'>\n  <!-- 綁定一個屬性src -->\n  <img v-bind:src=\"imgSrc\"> \n</div>\n    \n<script>\n  var app = new Vue({\n    el: '#app', \n    data: {\n    \timgSrc: 'https://images.unsplash.com/photo-1529778873920-4da4926a72c2?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1576&q=80'\n    }\n  })\n</scripy>\n```\n\n這樣就可以讓圖片顯示出來了\n\n{% iframe https://codepen.io/bucky0112/embed/KKpyXJB?height=361&theme-id=dark&default-tab=js,result %}\n\n\n不過圖片似乎太大，所以還可以改小一點\n\n這邊使用 Bootstrap 的 `.img-fluid` ，讓圖片設定為響應式。\n\n```\n<div id='app'>\n  <!-- 多綁定一個屬性class -->\n  <img v-bind:src=\"imgSrc\" v-bind:class=\"className\"> \n</div>\n    \n<script>\n  var app = new Vue({\n    el: '#app', \n    data: {\n    \timgSrc: 'https://images.unsplash.com/photo-1529778873920-4da4926a72c2?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1576&q=80',\n    \tclassName: 'img-fluid'\n    }\n  })\n</scripy> \n```\n\n{% iframe https://codepen.io/bucky0112/embed/wvaPPXQ?height=265&theme-id=dark&default-tab=js,result %}\n\n## v-if 及 v-for\n---\n\n這邊的 data 中有一組陣列屬於 JSON 格式，要運用 `v-for` 讓它顯示在畫面上\n\n```\nvar app = new Vue({\n  el: \"#app\",\n  data: {\n    list: [\n      {\n        name: \"小明\",\n        age: 16\n      },\n      {\n        name: \"媽媽\",\n        age: 38\n      },\n      {\n        name: \"漂亮阿姨\",\n        age: 24\n      }\n    ]\n  }\n});\n```\n\n這邊有一個語法 `<pre></pre>`，可以讓內容先在頁面上顯示出來，以方便開發者觀看。\n\n```\n<div id=\"app\">\n  <pre>{{list}}</pre>\n</div>\n```\n\n如果要讓全部的資料使用 for 迴圈跑出來，在 Vue 的方式是用 `v-for`\n\n```\n<div id=\"app\">\n  <ul>\n    <!-- item可以使用任意名稱 -->\n    <li v-for=\"item in list\">\n      {{item.name}}的年齡是 {{item.age}}\n    </li>\n  </ul>\n</div>\n```\n\n會顯示\n\n- 小明的年齡是 16\n- 媽媽的年齡是 38\n- 漂亮阿姨的年齡是 24\n\n如果想要顯示每一個 `li` 在陣列中索引是第幾個\n\n```\n<div id=\"app\">\n  <ul>\n      <!-- (陣列的值, 陣列的索引) -->\n    <li v-for=\"(item, index) in list\">\n      <!-- 索引是從 0 開始，如果要從 1 開始顯示要記得加 1 -->\n      {{index + 1}} - {{item.name}}的年齡是 {{item.age}}\n    </li>\n  </ul>\n</div>\n```\n\n如果要顯示大於 24 的資料的話，可以使用判斷式 `v-if`\n\n```\n<div id=\"app\">\n  <ul>\n    <li v-for=\"(item, index) in list\" v-if=\"item.age > 24\">\n      {{index + 1}} - {{item.name}}的年齡是 {{item.age}}\n    </li>\n  </ul>\n</div>\n```\n\n{% iframe https://codepen.io/bucky0112/embed/BaNmJaE?height=265&theme-id=dark&default-tab=js,result %}\n\n## 利用 v-on 來操作行為\n---\n\n在 jQuery 中，如果要操作行為的話，會使用 \n\n```\n$(selector).on(events, function () {\n        \n});\n```\n\n而在 Vue 中，方法差不多，採用的是 `v-on`，範例如下：\n\n```\n<!-- v-on:click 可以使用縮寫成 @click -->\n<button v-on:click=\"doThis\"></button>\n```\n\n這邊做一個反轉文字的練習\n\n```\n<div id=\"app\">\n  <!-- 用v-on:keyup.enter，綁定鍵盤按Enter事件到reverseText這個function -->\n  <input type=\"text\" v-model=\"text\" v-on:keyup.enter=\"reverseText\">\n  <!-- 用v-on:click綁定點擊事件到reverseText這個function -->\n  <button v-on:click=\"reverseText\">Reverse Text</button>\n  <div class=\"showText\">\n    {{newText}}\n  </div>\n</div>\n    \n<script>\n  var app = new Vue({\n    el: \"#app\",\n    data: {\n    \ttext: \"\",\n    \tnewText: \"\"\n    },\n    methods: {\n    \treverseText: function() {\n        // 反轉文字的語法 split(\"\").reverse().join(\"\")\n    \t\t// 當點擊按鈕後啟動function，this.newText顯示內容\n    \t  this.newText = this.text.split(\"\").reverse().join(\"\");\n    \t}\n    }\n  });\n</script>\n```\n\n> 重點 1：這邊控制資料要加上 \"this\"，像是 \"this.newText\"，沒有的話就不會顯示。\n\n> 重點 2 : 預先定義資料狀態很重要，如果 data 中的資料沒有先定義好，會發生錯誤\n\n{% iframe https://codepen.io/bucky0112/embed/abOEdRq?height=265&theme-id=dark&default-tab=js,result %}","slug":"基礎Vue-js-2","published":1,"updated":"2020-03-30T13:36:34.918Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck8q2oqs7000ck6u77tms4gkn","content":"<p>此篇會講到關於 MVVM 的概念、綁定、for 迴圈及判斷，還有行為 on 的使用。</p>\n<a id=\"more\"></a>\n\n<h2 id=\"MVVM-的概念\"><a href=\"#MVVM-的概念\" class=\"headerlink\" title=\"MVVM 的概念\"></a>MVVM 的概念</h2><hr>\n<p>首先要先提到傳統 MVC 的概念，</p>\n<p>在 Web 應用程式的劃分分為：</p>\n<ul>\n<li>模型（Model）</li>\n<li>視圖（View）</li>\n<li>控制器（Controller）</li>\n</ul>\n<p><img data-src=\"https://i.imgur.com/lmb7P7R.png\" alt=\"\"></p>\n<blockquote>\n<p>圖片來自 TechTerms.com</p>\n</blockquote>\n<p>使用者第一眼看到的就是 View，如果使用者想要取得某些資料，這時 View 會發送請求給 Controller，然後 Controller 會請 Model 找出資料，Model 就會另外在資料庫找出資料，Model 取得資料後，再回傳給 Controller，Controller 再呈現出畫面在 View 上。</p>\n<h3 id=\"那麼-MVVM-又是什麼概念？\"><a href=\"#那麼-MVVM-又是什麼概念？\" class=\"headerlink\" title=\"那麼 MVVM 又是什麼概念？\"></a>那麼 MVVM 又是什麼概念？</h3><p>View 跟 ViewModel 是綁定的，如果使用者想要取得資料，View 會直接請求給 Model，然後 Model 透過 Database 找到資料再回傳給 ViewModel，會直接即時顯示在 View 上。</p>\n<p><img data-src=\"https://i.imgur.com/hYs0zLQ.png\" alt=\"\"></p>\n<blockquote>\n<p>圖片來自維基百科</p>\n</blockquote>\n<h3 id=\"所以-Vue-js-跟-一般-JavaScript-有什麼不同？\"><a href=\"#所以-Vue-js-跟-一般-JavaScript-有什麼不同？\" class=\"headerlink\" title=\"所以 Vue.js 跟 一般 JavaScript 有什麼不同？\"></a>所以 Vue.js 跟 一般 JavaScript 有什麼不同？</h3><p>一般 JavaScript 在處理畫面上是直接操作 Dom 元素</p>\n<p>而 Vue.js 是以資料狀態操作 Dom 元素時，是以資料狀態去變動。</p>\n<h2 id=\"v-bind-動態屬性指令\"><a href=\"#v-bind-動態屬性指令\" class=\"headerlink\" title=\"v-bind 動態屬性指令\"></a>v-bind 動態屬性指令</h2><hr>\n<p>上面提到 Vue.js 是以資料狀態去變動，這邊要來實際操作一下如何載入圖片：</p>\n<p><code>&lt;img v-bind:src=&quot;imageSrc&quot;&gt;</code></p>\n<p>縮寫</p>\n<p><code>&lt;img :src=&quot;imageSrc&quot;&gt;</code></p>\n<p>以下範例：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;div id&#x3D;&#39;app&#39;&gt;</span><br><span class=\"line\">  &lt;!-- 綁定一個屬性src --&gt;</span><br><span class=\"line\">  &lt;img v-bind:src&#x3D;&quot;imgSrc&quot;&gt; </span><br><span class=\"line\">&lt;&#x2F;div&gt;</span><br><span class=\"line\">    </span><br><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">  var app &#x3D; new Vue(&#123;</span><br><span class=\"line\">    el: &#39;#app&#39;, </span><br><span class=\"line\">    data: &#123;</span><br><span class=\"line\">    \timgSrc: &#39;https:&#x2F;&#x2F;images.unsplash.com&#x2F;photo-1529778873920-4da4926a72c2?ixlib&#x3D;rb-1.2.1&amp;ixid&#x3D;eyJhcHBfaWQiOjEyMDd9&amp;auto&#x3D;format&amp;fit&#x3D;crop&amp;w&#x3D;1576&amp;q&#x3D;80&#39;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&lt;&#x2F;scripy&gt;</span><br></pre></td></tr></table></figure>\n\n<p>這樣就可以讓圖片顯示出來了</p>\n<iframe src=\"https://codepen.io/bucky0112/embed/KKpyXJB?height=361&theme-id=dark&default-tab=js,result\" width=\"100%\" height=\"300\" frameborder=\"0\" loading=\"lazy\" allowfullscreen></iframe>\n\n\n<p>不過圖片似乎太大，所以還可以改小一點</p>\n<p>這邊使用 Bootstrap 的 <code>.img-fluid</code> ，讓圖片設定為響應式。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;div id&#x3D;&#39;app&#39;&gt;</span><br><span class=\"line\">  &lt;!-- 多綁定一個屬性class --&gt;</span><br><span class=\"line\">  &lt;img v-bind:src&#x3D;&quot;imgSrc&quot; v-bind:class&#x3D;&quot;className&quot;&gt; </span><br><span class=\"line\">&lt;&#x2F;div&gt;</span><br><span class=\"line\">    </span><br><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">  var app &#x3D; new Vue(&#123;</span><br><span class=\"line\">    el: &#39;#app&#39;, </span><br><span class=\"line\">    data: &#123;</span><br><span class=\"line\">    \timgSrc: &#39;https:&#x2F;&#x2F;images.unsplash.com&#x2F;photo-1529778873920-4da4926a72c2?ixlib&#x3D;rb-1.2.1&amp;ixid&#x3D;eyJhcHBfaWQiOjEyMDd9&amp;auto&#x3D;format&amp;fit&#x3D;crop&amp;w&#x3D;1576&amp;q&#x3D;80&#39;,</span><br><span class=\"line\">    \tclassName: &#39;img-fluid&#39;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&lt;&#x2F;scripy&gt;</span><br></pre></td></tr></table></figure>\n\n<iframe src=\"https://codepen.io/bucky0112/embed/wvaPPXQ?height=265&theme-id=dark&default-tab=js,result\" width=\"100%\" height=\"300\" frameborder=\"0\" loading=\"lazy\" allowfullscreen></iframe>\n\n<h2 id=\"v-if-及-v-for\"><a href=\"#v-if-及-v-for\" class=\"headerlink\" title=\"v-if 及 v-for\"></a>v-if 及 v-for</h2><hr>\n<p>這邊的 data 中有一組陣列屬於 JSON 格式，要運用 <code>v-for</code> 讓它顯示在畫面上</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var app &#x3D; new Vue(&#123;</span><br><span class=\"line\">  el: &quot;#app&quot;,</span><br><span class=\"line\">  data: &#123;</span><br><span class=\"line\">    list: [</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        name: &quot;小明&quot;,</span><br><span class=\"line\">        age: 16</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        name: &quot;媽媽&quot;,</span><br><span class=\"line\">        age: 38</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        name: &quot;漂亮阿姨&quot;,</span><br><span class=\"line\">        age: 24</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    ]</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<p>這邊有一個語法 <code>&lt;pre&gt;&lt;/pre&gt;</code>，可以讓內容先在頁面上顯示出來，以方便開發者觀看。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;div id&#x3D;&quot;app&quot;&gt;</span><br><span class=\"line\">  &lt;pre&gt;&#123;&#123;list&#125;&#125;&lt;&#x2F;pre&gt;</span><br><span class=\"line\">&lt;&#x2F;div&gt;</span><br></pre></td></tr></table></figure>\n\n<p>如果要讓全部的資料使用 for 迴圈跑出來，在 Vue 的方式是用 <code>v-for</code></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;div id&#x3D;&quot;app&quot;&gt;</span><br><span class=\"line\">  &lt;ul&gt;</span><br><span class=\"line\">    &lt;!-- item可以使用任意名稱 --&gt;</span><br><span class=\"line\">    &lt;li v-for&#x3D;&quot;item in list&quot;&gt;</span><br><span class=\"line\">      &#123;&#123;item.name&#125;&#125;的年齡是 &#123;&#123;item.age&#125;&#125;</span><br><span class=\"line\">    &lt;&#x2F;li&gt;</span><br><span class=\"line\">  &lt;&#x2F;ul&gt;</span><br><span class=\"line\">&lt;&#x2F;div&gt;</span><br></pre></td></tr></table></figure>\n\n<p>會顯示</p>\n<ul>\n<li>小明的年齡是 16</li>\n<li>媽媽的年齡是 38</li>\n<li>漂亮阿姨的年齡是 24</li>\n</ul>\n<p>如果想要顯示每一個 <code>li</code> 在陣列中索引是第幾個</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;div id&#x3D;&quot;app&quot;&gt;</span><br><span class=\"line\">  &lt;ul&gt;</span><br><span class=\"line\">      &lt;!-- (陣列的值, 陣列的索引) --&gt;</span><br><span class=\"line\">    &lt;li v-for&#x3D;&quot;(item, index) in list&quot;&gt;</span><br><span class=\"line\">      &lt;!-- 索引是從 0 開始，如果要從 1 開始顯示要記得加 1 --&gt;</span><br><span class=\"line\">      &#123;&#123;index + 1&#125;&#125; - &#123;&#123;item.name&#125;&#125;的年齡是 &#123;&#123;item.age&#125;&#125;</span><br><span class=\"line\">    &lt;&#x2F;li&gt;</span><br><span class=\"line\">  &lt;&#x2F;ul&gt;</span><br><span class=\"line\">&lt;&#x2F;div&gt;</span><br></pre></td></tr></table></figure>\n\n<p>如果要顯示大於 24 的資料的話，可以使用判斷式 <code>v-if</code></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;div id&#x3D;&quot;app&quot;&gt;</span><br><span class=\"line\">  &lt;ul&gt;</span><br><span class=\"line\">    &lt;li v-for&#x3D;&quot;(item, index) in list&quot; v-if&#x3D;&quot;item.age &gt; 24&quot;&gt;</span><br><span class=\"line\">      &#123;&#123;index + 1&#125;&#125; - &#123;&#123;item.name&#125;&#125;的年齡是 &#123;&#123;item.age&#125;&#125;</span><br><span class=\"line\">    &lt;&#x2F;li&gt;</span><br><span class=\"line\">  &lt;&#x2F;ul&gt;</span><br><span class=\"line\">&lt;&#x2F;div&gt;</span><br></pre></td></tr></table></figure>\n\n<iframe src=\"https://codepen.io/bucky0112/embed/BaNmJaE?height=265&theme-id=dark&default-tab=js,result\" width=\"100%\" height=\"300\" frameborder=\"0\" loading=\"lazy\" allowfullscreen></iframe>\n\n<h2 id=\"利用-v-on-來操作行為\"><a href=\"#利用-v-on-來操作行為\" class=\"headerlink\" title=\"利用 v-on 來操作行為\"></a>利用 v-on 來操作行為</h2><hr>\n<p>在 jQuery 中，如果要操作行為的話，會使用 </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$(selector).on(events, function () &#123;</span><br><span class=\"line\">        </span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<p>而在 Vue 中，方法差不多，採用的是 <code>v-on</code>，範例如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!-- v-on:click 可以使用縮寫成 @click --&gt;</span><br><span class=\"line\">&lt;button v-on:click&#x3D;&quot;doThis&quot;&gt;&lt;&#x2F;button&gt;</span><br></pre></td></tr></table></figure>\n\n<p>這邊做一個反轉文字的練習</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;div id&#x3D;&quot;app&quot;&gt;</span><br><span class=\"line\">  &lt;!-- 用v-on:keyup.enter，綁定鍵盤按Enter事件到reverseText這個function --&gt;</span><br><span class=\"line\">  &lt;input type&#x3D;&quot;text&quot; v-model&#x3D;&quot;text&quot; v-on:keyup.enter&#x3D;&quot;reverseText&quot;&gt;</span><br><span class=\"line\">  &lt;!-- 用v-on:click綁定點擊事件到reverseText這個function --&gt;</span><br><span class=\"line\">  &lt;button v-on:click&#x3D;&quot;reverseText&quot;&gt;Reverse Text&lt;&#x2F;button&gt;</span><br><span class=\"line\">  &lt;div class&#x3D;&quot;showText&quot;&gt;</span><br><span class=\"line\">    &#123;&#123;newText&#125;&#125;</span><br><span class=\"line\">  &lt;&#x2F;div&gt;</span><br><span class=\"line\">&lt;&#x2F;div&gt;</span><br><span class=\"line\">    </span><br><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">  var app &#x3D; new Vue(&#123;</span><br><span class=\"line\">    el: &quot;#app&quot;,</span><br><span class=\"line\">    data: &#123;</span><br><span class=\"line\">    \ttext: &quot;&quot;,</span><br><span class=\"line\">    \tnewText: &quot;&quot;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    methods: &#123;</span><br><span class=\"line\">    \treverseText: function() &#123;</span><br><span class=\"line\">        &#x2F;&#x2F; 反轉文字的語法 split(&quot;&quot;).reverse().join(&quot;&quot;)</span><br><span class=\"line\">    \t\t&#x2F;&#x2F; 當點擊按鈕後啟動function，this.newText顯示內容</span><br><span class=\"line\">    \t  this.newText &#x3D; this.text.split(&quot;&quot;).reverse().join(&quot;&quot;);</span><br><span class=\"line\">    \t&#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>重點 1：這邊控制資料要加上 “this”，像是 “this.newText”，沒有的話就不會顯示。</p>\n</blockquote>\n<blockquote>\n<p>重點 2 : 預先定義資料狀態很重要，如果 data 中的資料沒有先定義好，會發生錯誤</p>\n</blockquote>\n<iframe src=\"https://codepen.io/bucky0112/embed/abOEdRq?height=265&theme-id=dark&default-tab=js,result\" width=\"100%\" height=\"300\" frameborder=\"0\" loading=\"lazy\" allowfullscreen></iframe>","site":{"data":{}},"excerpt":"<p>此篇會講到關於 MVVM 的概念、綁定、for 迴圈及判斷，還有行為 on 的使用。</p>","more":"<h2 id=\"MVVM-的概念\"><a href=\"#MVVM-的概念\" class=\"headerlink\" title=\"MVVM 的概念\"></a>MVVM 的概念</h2><hr>\n<p>首先要先提到傳統 MVC 的概念，</p>\n<p>在 Web 應用程式的劃分分為：</p>\n<ul>\n<li>模型（Model）</li>\n<li>視圖（View）</li>\n<li>控制器（Controller）</li>\n</ul>\n<p><img data-src=\"https://i.imgur.com/lmb7P7R.png\" alt=\"\"></p>\n<blockquote>\n<p>圖片來自 TechTerms.com</p>\n</blockquote>\n<p>使用者第一眼看到的就是 View，如果使用者想要取得某些資料，這時 View 會發送請求給 Controller，然後 Controller 會請 Model 找出資料，Model 就會另外在資料庫找出資料，Model 取得資料後，再回傳給 Controller，Controller 再呈現出畫面在 View 上。</p>\n<h3 id=\"那麼-MVVM-又是什麼概念？\"><a href=\"#那麼-MVVM-又是什麼概念？\" class=\"headerlink\" title=\"那麼 MVVM 又是什麼概念？\"></a>那麼 MVVM 又是什麼概念？</h3><p>View 跟 ViewModel 是綁定的，如果使用者想要取得資料，View 會直接請求給 Model，然後 Model 透過 Database 找到資料再回傳給 ViewModel，會直接即時顯示在 View 上。</p>\n<p><img data-src=\"https://i.imgur.com/hYs0zLQ.png\" alt=\"\"></p>\n<blockquote>\n<p>圖片來自維基百科</p>\n</blockquote>\n<h3 id=\"所以-Vue-js-跟-一般-JavaScript-有什麼不同？\"><a href=\"#所以-Vue-js-跟-一般-JavaScript-有什麼不同？\" class=\"headerlink\" title=\"所以 Vue.js 跟 一般 JavaScript 有什麼不同？\"></a>所以 Vue.js 跟 一般 JavaScript 有什麼不同？</h3><p>一般 JavaScript 在處理畫面上是直接操作 Dom 元素</p>\n<p>而 Vue.js 是以資料狀態操作 Dom 元素時，是以資料狀態去變動。</p>\n<h2 id=\"v-bind-動態屬性指令\"><a href=\"#v-bind-動態屬性指令\" class=\"headerlink\" title=\"v-bind 動態屬性指令\"></a>v-bind 動態屬性指令</h2><hr>\n<p>上面提到 Vue.js 是以資料狀態去變動，這邊要來實際操作一下如何載入圖片：</p>\n<p><code>&lt;img v-bind:src=&quot;imageSrc&quot;&gt;</code></p>\n<p>縮寫</p>\n<p><code>&lt;img :src=&quot;imageSrc&quot;&gt;</code></p>\n<p>以下範例：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;div id&#x3D;&#39;app&#39;&gt;</span><br><span class=\"line\">  &lt;!-- 綁定一個屬性src --&gt;</span><br><span class=\"line\">  &lt;img v-bind:src&#x3D;&quot;imgSrc&quot;&gt; </span><br><span class=\"line\">&lt;&#x2F;div&gt;</span><br><span class=\"line\">    </span><br><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">  var app &#x3D; new Vue(&#123;</span><br><span class=\"line\">    el: &#39;#app&#39;, </span><br><span class=\"line\">    data: &#123;</span><br><span class=\"line\">    \timgSrc: &#39;https:&#x2F;&#x2F;images.unsplash.com&#x2F;photo-1529778873920-4da4926a72c2?ixlib&#x3D;rb-1.2.1&amp;ixid&#x3D;eyJhcHBfaWQiOjEyMDd9&amp;auto&#x3D;format&amp;fit&#x3D;crop&amp;w&#x3D;1576&amp;q&#x3D;80&#39;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&lt;&#x2F;scripy&gt;</span><br></pre></td></tr></table></figure>\n\n<p>這樣就可以讓圖片顯示出來了</p>\n<iframe src=\"https://codepen.io/bucky0112/embed/KKpyXJB?height=361&theme-id=dark&default-tab=js,result\" width=\"100%\" height=\"300\" frameborder=\"0\" loading=\"lazy\" allowfullscreen></iframe>\n\n\n<p>不過圖片似乎太大，所以還可以改小一點</p>\n<p>這邊使用 Bootstrap 的 <code>.img-fluid</code> ，讓圖片設定為響應式。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;div id&#x3D;&#39;app&#39;&gt;</span><br><span class=\"line\">  &lt;!-- 多綁定一個屬性class --&gt;</span><br><span class=\"line\">  &lt;img v-bind:src&#x3D;&quot;imgSrc&quot; v-bind:class&#x3D;&quot;className&quot;&gt; </span><br><span class=\"line\">&lt;&#x2F;div&gt;</span><br><span class=\"line\">    </span><br><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">  var app &#x3D; new Vue(&#123;</span><br><span class=\"line\">    el: &#39;#app&#39;, </span><br><span class=\"line\">    data: &#123;</span><br><span class=\"line\">    \timgSrc: &#39;https:&#x2F;&#x2F;images.unsplash.com&#x2F;photo-1529778873920-4da4926a72c2?ixlib&#x3D;rb-1.2.1&amp;ixid&#x3D;eyJhcHBfaWQiOjEyMDd9&amp;auto&#x3D;format&amp;fit&#x3D;crop&amp;w&#x3D;1576&amp;q&#x3D;80&#39;,</span><br><span class=\"line\">    \tclassName: &#39;img-fluid&#39;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&lt;&#x2F;scripy&gt;</span><br></pre></td></tr></table></figure>\n\n<iframe src=\"https://codepen.io/bucky0112/embed/wvaPPXQ?height=265&theme-id=dark&default-tab=js,result\" width=\"100%\" height=\"300\" frameborder=\"0\" loading=\"lazy\" allowfullscreen></iframe>\n\n<h2 id=\"v-if-及-v-for\"><a href=\"#v-if-及-v-for\" class=\"headerlink\" title=\"v-if 及 v-for\"></a>v-if 及 v-for</h2><hr>\n<p>這邊的 data 中有一組陣列屬於 JSON 格式，要運用 <code>v-for</code> 讓它顯示在畫面上</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var app &#x3D; new Vue(&#123;</span><br><span class=\"line\">  el: &quot;#app&quot;,</span><br><span class=\"line\">  data: &#123;</span><br><span class=\"line\">    list: [</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        name: &quot;小明&quot;,</span><br><span class=\"line\">        age: 16</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        name: &quot;媽媽&quot;,</span><br><span class=\"line\">        age: 38</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        name: &quot;漂亮阿姨&quot;,</span><br><span class=\"line\">        age: 24</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    ]</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<p>這邊有一個語法 <code>&lt;pre&gt;&lt;/pre&gt;</code>，可以讓內容先在頁面上顯示出來，以方便開發者觀看。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;div id&#x3D;&quot;app&quot;&gt;</span><br><span class=\"line\">  &lt;pre&gt;&#123;&#123;list&#125;&#125;&lt;&#x2F;pre&gt;</span><br><span class=\"line\">&lt;&#x2F;div&gt;</span><br></pre></td></tr></table></figure>\n\n<p>如果要讓全部的資料使用 for 迴圈跑出來，在 Vue 的方式是用 <code>v-for</code></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;div id&#x3D;&quot;app&quot;&gt;</span><br><span class=\"line\">  &lt;ul&gt;</span><br><span class=\"line\">    &lt;!-- item可以使用任意名稱 --&gt;</span><br><span class=\"line\">    &lt;li v-for&#x3D;&quot;item in list&quot;&gt;</span><br><span class=\"line\">      &#123;&#123;item.name&#125;&#125;的年齡是 &#123;&#123;item.age&#125;&#125;</span><br><span class=\"line\">    &lt;&#x2F;li&gt;</span><br><span class=\"line\">  &lt;&#x2F;ul&gt;</span><br><span class=\"line\">&lt;&#x2F;div&gt;</span><br></pre></td></tr></table></figure>\n\n<p>會顯示</p>\n<ul>\n<li>小明的年齡是 16</li>\n<li>媽媽的年齡是 38</li>\n<li>漂亮阿姨的年齡是 24</li>\n</ul>\n<p>如果想要顯示每一個 <code>li</code> 在陣列中索引是第幾個</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;div id&#x3D;&quot;app&quot;&gt;</span><br><span class=\"line\">  &lt;ul&gt;</span><br><span class=\"line\">      &lt;!-- (陣列的值, 陣列的索引) --&gt;</span><br><span class=\"line\">    &lt;li v-for&#x3D;&quot;(item, index) in list&quot;&gt;</span><br><span class=\"line\">      &lt;!-- 索引是從 0 開始，如果要從 1 開始顯示要記得加 1 --&gt;</span><br><span class=\"line\">      &#123;&#123;index + 1&#125;&#125; - &#123;&#123;item.name&#125;&#125;的年齡是 &#123;&#123;item.age&#125;&#125;</span><br><span class=\"line\">    &lt;&#x2F;li&gt;</span><br><span class=\"line\">  &lt;&#x2F;ul&gt;</span><br><span class=\"line\">&lt;&#x2F;div&gt;</span><br></pre></td></tr></table></figure>\n\n<p>如果要顯示大於 24 的資料的話，可以使用判斷式 <code>v-if</code></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;div id&#x3D;&quot;app&quot;&gt;</span><br><span class=\"line\">  &lt;ul&gt;</span><br><span class=\"line\">    &lt;li v-for&#x3D;&quot;(item, index) in list&quot; v-if&#x3D;&quot;item.age &gt; 24&quot;&gt;</span><br><span class=\"line\">      &#123;&#123;index + 1&#125;&#125; - &#123;&#123;item.name&#125;&#125;的年齡是 &#123;&#123;item.age&#125;&#125;</span><br><span class=\"line\">    &lt;&#x2F;li&gt;</span><br><span class=\"line\">  &lt;&#x2F;ul&gt;</span><br><span class=\"line\">&lt;&#x2F;div&gt;</span><br></pre></td></tr></table></figure>\n\n<iframe src=\"https://codepen.io/bucky0112/embed/BaNmJaE?height=265&theme-id=dark&default-tab=js,result\" width=\"100%\" height=\"300\" frameborder=\"0\" loading=\"lazy\" allowfullscreen></iframe>\n\n<h2 id=\"利用-v-on-來操作行為\"><a href=\"#利用-v-on-來操作行為\" class=\"headerlink\" title=\"利用 v-on 來操作行為\"></a>利用 v-on 來操作行為</h2><hr>\n<p>在 jQuery 中，如果要操作行為的話，會使用 </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$(selector).on(events, function () &#123;</span><br><span class=\"line\">        </span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<p>而在 Vue 中，方法差不多，採用的是 <code>v-on</code>，範例如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!-- v-on:click 可以使用縮寫成 @click --&gt;</span><br><span class=\"line\">&lt;button v-on:click&#x3D;&quot;doThis&quot;&gt;&lt;&#x2F;button&gt;</span><br></pre></td></tr></table></figure>\n\n<p>這邊做一個反轉文字的練習</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;div id&#x3D;&quot;app&quot;&gt;</span><br><span class=\"line\">  &lt;!-- 用v-on:keyup.enter，綁定鍵盤按Enter事件到reverseText這個function --&gt;</span><br><span class=\"line\">  &lt;input type&#x3D;&quot;text&quot; v-model&#x3D;&quot;text&quot; v-on:keyup.enter&#x3D;&quot;reverseText&quot;&gt;</span><br><span class=\"line\">  &lt;!-- 用v-on:click綁定點擊事件到reverseText這個function --&gt;</span><br><span class=\"line\">  &lt;button v-on:click&#x3D;&quot;reverseText&quot;&gt;Reverse Text&lt;&#x2F;button&gt;</span><br><span class=\"line\">  &lt;div class&#x3D;&quot;showText&quot;&gt;</span><br><span class=\"line\">    &#123;&#123;newText&#125;&#125;</span><br><span class=\"line\">  &lt;&#x2F;div&gt;</span><br><span class=\"line\">&lt;&#x2F;div&gt;</span><br><span class=\"line\">    </span><br><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">  var app &#x3D; new Vue(&#123;</span><br><span class=\"line\">    el: &quot;#app&quot;,</span><br><span class=\"line\">    data: &#123;</span><br><span class=\"line\">    \ttext: &quot;&quot;,</span><br><span class=\"line\">    \tnewText: &quot;&quot;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    methods: &#123;</span><br><span class=\"line\">    \treverseText: function() &#123;</span><br><span class=\"line\">        &#x2F;&#x2F; 反轉文字的語法 split(&quot;&quot;).reverse().join(&quot;&quot;)</span><br><span class=\"line\">    \t\t&#x2F;&#x2F; 當點擊按鈕後啟動function，this.newText顯示內容</span><br><span class=\"line\">    \t  this.newText &#x3D; this.text.split(&quot;&quot;).reverse().join(&quot;&quot;);</span><br><span class=\"line\">    \t&#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>重點 1：這邊控制資料要加上 “this”，像是 “this.newText”，沒有的話就不會顯示。</p>\n</blockquote>\n<blockquote>\n<p>重點 2 : 預先定義資料狀態很重要，如果 data 中的資料沒有先定義好，會發生錯誤</p>\n</blockquote>\n<iframe src=\"https://codepen.io/bucky0112/embed/abOEdRq?height=265&theme-id=dark&default-tab=js,result\" width=\"100%\" height=\"300\" frameborder=\"0\" loading=\"lazy\" allowfullscreen></iframe>"},{"title":"基礎 Vue.js(下)","date":"2020-03-30T08:54:07.000Z","keywords":["vue","javascript","前端框架"],"decription":"Basic use about Vue.","_content":"\n最後一篇 Vue 的基礎，會提到修飾符、還有 v-bind 切換 class，表單的運用，還有 component 的概念。\n<!--more-->\n\n## 修飾符\n---\n\n修飾符在網頁中很常使用到，例如點擊一個 a 連結，不想讓他產生作用的話，就會使用到 `preventDefault()` 這個語法，例如 jQuery 的用法：\n\n```\n<a href=\"http://www.google.com\">Click me</a>\n    \n<script>\n  $(\"a\").on(\"click\", function(e) {\n    e.preventDefault();\n  });\n</script>\n```\n\n這樣子點擊的話，連結就不會有作用。\n\n而在 Vue 中也有這個用法，阻止默認行為：\n\n`<button @click.prevent=\"doThis\"></button>`\n\n```\n<div id=\"app\">\n  <input type=\"text\" v-model=\"text\">\n  <!-- 當點擊a連結，一樣可以執行function，但不會連到Google -->\n  <a href=\"http://www.google.com\" @click.prevent=\"reverseText\">Reverse Text</a>\n  <div class=\"showText\">\n    {{newText}}\n  </div>\n</div>\n    \n<script>\n  var app = new Vue({\n    el: \"#app\",\n    data: {\n    \ttext: \"\",\n    \tnewText: \"\"\n    },\n    methods: {\n    \treverseText: function() {\n    \t  this.newText = this.text.split(\"\").reverse().join(\"\");\n    \t}\n    }\n  });\n</script>\n```\n\n## 透過 v-bind:class 來綁定 HTML\n---\n\n可以給予 `v-bind:class` 一個 class 對象，去做出動態切換 class\n\n`<div v-bind:class=\"{ class名稱: 切換的動作 }\"></div>`\n\n看以下範例，有一個藍色的方塊，只要在 class 名稱加上 yellow，就會變成黃色：\n\n```\n<div id=\"app\">\n  <!-- 只要在class動態加上yellow就會變黃色 -->\n  <div class=\"box\"></div>\n  <button class=\"changeColor btn btn-primary\">Change Color</button>\n</div>\n    \n<style>\n  .box {\n    width: 250px;\n    height: 250px;\n    background-color: blue;\n  }\n    \n  .box.yellow {\n    background-color: yellow;\n  }\n</style>\n    \n<script>\n  var app = new Vue({\n    el: \"#app\",\n    data: {\n    \tchange: false  // 這邊有一個切換動作change的data\n    }\n  });\n</script>\n```\n\n```    \n<div id=\"app\">\n  <!-- 加上 v-bind:class=\"{class名稱: 切換的動作}\" -->\n  <div class=\"box\" :class=\"{'yellow': change}\"></div>\n  <!-- 在按鈕綁定click，讓它去做切換的效果 -->\n  <button class=\"changeColor btn btn-primary\" @click=\"change = !change\">Change Color</button>\n</div>\n```\n\n{%iframe https://codepen.io/bucky0112/embed/dyoJaow?height=265&theme-id=dark&default-tab=html,result %}\n\n## 計算屬性 computed 的使用\n---\n\n下面的範例是當在 `text` 欄位輸入文字時，會在 `.showText` 顯示反轉文字\n\n不過\n\n```\n<div id=\"app\">\n  <h2>直接輸入文字</h2>\n  <input type=\"text\" class=\"form-control mt-3\" v-model=\"text\">\n  <h2>在下方顯示反轉文字</h2>\n  <h3 class=\"showText\">\n    {{text.split(\"\").reverse().join(\"\")}}\n  </h3>\n</div>\n    \n<script>\n  var app = new Vue({\n    el: \"#app\",\n    data: {\n    \ttext: \"\"\n    }\n</script>\n```\n\n但是如果要重複使用 `{% raw %}{{text.split(\"\").reverse().join(\"\")}}{% endraw %}` 這一段的話，會有點難維護，所以可以運用 computed 來處理\n\n```\nvar app = new Vue({\n  el: \"#app\",\n  data: {\n    text: \"\"\n  },\n  computed: {\n    reverseText: function() {  // 在 computed 中要使用 function\n    \treturn this.text.split(\"\").reverse().join(\"\"); // 並且會回傳值，所以就可以應用在回傳反轉後的結果\n    }\n  }\n});\n```\n\n接著只要加上回傳值的 function，就可以顯示結果了。\n\n```\n<div id=\"app\">\n  <h2>直接輸入文字</h2>\n  <input type=\"text\" class=\"form-control mt-3\" v-model=\"text\">\n  <h2>在下方顯示反轉文字</h2>\n  <h3 class=\"showText\">\n    {{reverseText}}\n  </h3>\n</div>\n```\n\n那麼 computed 跟 methods 在使用上有什麼差異呢？\n\n- computed 一般用來回傳用於畫面呈現的資料 **在監控資料更動後，重新運算後將結果呈現於畫面上。由於資料變動就會觸發，所以如果運行的資料太多，在效能處理上就會變慢。**\n- methods 是運用在互動的函式，可以用來修改資料，內容因為需要觸發才會運作，所以如果資料量大的話會建議使用 methods。\n\n## Vue 表單與資料的綁定\n---\n\n前面有提到 Vue 雙向綁定用 `v-model` 的用法，這個部份來看看其他綁定的用法。\n\n### checkbox\n\n```\n<div id=\"app\">\n  <div class=\"form\">\n    <label for=\"dinner\">要吃晚餐嗎？</label>\n    <input type=\"checkbox\" v-model=\"checkboxDinner\" id=\"dinner\">\n      {{checkboxDinner}}\n  </div>\n</div>\n\n\n<script>\n  var app = new Vue ({\n  \tel: \"#app\",\n  \tdata: {\n  \t  checkboxDinner: false, // checkbox 選項只有true或false\n  \t}\n  })\n</script>\n```\n\n`checkbox` 的用法這邊用在是或不是的選項 ，這邊預設是 false，當點擊時就會變成 true。\n\n還有加入 Array 的用法：\n\n```\nvar app = new Vue ({\n  el: \"#app\",\n  data: {\n    checkboxArray: [],\n  }\n})\n```\n\n這裏有綁定 3 個選項，當點擊 `checkbox` ，data 的 checkboxArray 空陣列就會填入該選項的 value，最後會顯示在 `<span>` 中的 `v-for` 迴圈。\n\n```\n<div id=\"app\">\n  <div class=\"form\">\n    <div class=\"form-check\">\n      <input type=\"checkbox\" class=\"form-check-input\" id=\"check2\" value=\"雞\" v-model=\"checkboxArray\">\n      <label class=\"form-check-label\" for=\"check2\">雞</label>\n    </div>\n    <div class=\"form-check\">\n      <input type=\"checkbox\" class=\"form-check-input\" id=\"check3\" value=\"豬\" v-model=\"checkboxArray\">\n      <label class=\"form-check-label\" for=\"check3\">豬</label>\n    </div>\n    <div class=\"form-check\">\n      <input type=\"checkbox\" class=\"form-check-input\" id=\"check4\" value=\"牛\" v-model=\"checkboxArray\">\n      <label class=\"form-check-label\" for=\"check4\">牛</label>\n    </div>\n    <p>晚餐火鍋裡有<span v-for=\"item in checkboxArray\">{{item}}</span>。</p>\n  </div>\n</div>\n```\n\n`checkbox` 還可以另一種的運用，就是只顯示單選，例如當選擇一個選項就會將 value 綁入 singleRadio 的空字串中\n\n```\nvar app = new Vue ({\n  el: \"#app\",\n  data: {\n    singleRadio: \"\",\n  }\n})\n    \n<div id=\"app\">\n  <div class=\"form-check\">\n    <input type=\"radio\" class=\"form-check-input\" id=\"radio2\" value=\"雞\" v-model=\"singleRadio\">\n    <label class=\"form-check-label\" for=\"radio2\">雞</label>\n  </div>\n  <div class=\"form-check\">\n    <input type=\"radio\" class=\"form-check-input\" id=\"radio3\" value=\"豬\" v-model=\"singleRadio\">\n    <label class=\"form-check-label\" for=\"radio3\">豬</label>\n  </div>\n  <div class=\"form-check\">\n    <input type=\"radio\" class=\"form-check-input\" id=\"radio4\" value=\"牛\" v-model=\"singleRadio\">\n    <label class=\"form-check-label\" for=\"radio4\">牛</label>\n  </div>\n  <p>晚餐火鍋裡有 {{singleRadio}}。</p>\n</div>\n```\n\n### 下拉式的選單\n\n當選擇某一個選項時，會將 value 綁入 data 的 selected 空字串中，然後顯示在 `{{selected}}`\n\n```\n<div id=\"app\">\n  <h2>喜歡澳洲哪一個城市？</h2>\n  <select name=\"\" id=\"\" class=\"form-control\" v-model=\"selected\">\n    <option value=\"\" disabled>-- 請選擇地點 --</option>\n    <option value=\"Melbourne\">墨爾本</option>\n    <option value=\"Sydney\">雪梨</option>\n    <option value=\"Adelaide\">阿德雷德</option>\n  </select>\n  {{selected}}\n</div>\n    \n<script>\n  var app = new Vue ({\n    el: \"#app\",\n    data: {\n    \tselected: \"\",\n    }\n  })\n</script>\n```\n\n## component 元件基礎概念\n---\n\n以下有一個範例，當點擊按鈕時，透過 `v-on:click` 綁定 counter 的按鈕會 + 1：\n\n```\n<!-- 當點擊按鈕時，透過 v-on:click綁定counter的按鈕會+1 -->\n<div id=\"app\">\n  <div>\n    目前點擊<button @click=\"counter += 1\">{{counter}}</button>下\n  </div>\n</div>\n    \n<script>\n  let app = new Vue({\n    el: \"#app\",\n    data: {\n    \tcounter: 0\n    }\n  })\n</script>\n```\n\n如果新增另一個按鈕的話，會怎麼樣呢？\n\n```\n<div id=\"app\">\n  <div>\n    目前點擊<button @click=\"counter += 1\">{{counter}}</button>下\n  </div>\n  <div>\n    目前點擊<button @click=\"counter += 1\">{{counter}}</button>下\n  </div>\n</div>\n```\n\n因為兩個是共用同一個變數 counter，所以當按其中一個按鈕，兩個會一起 + 1。\n\n那麼如果想要讓個別按鈕資料獨立的話，這邊有另一個方法可以使用：\n\n**component 元件**，透過這樣的方式，可以讓每個 component 中的 data 都會是互相獨立，看以下範例：\n\n```\n// Vue.component(tagName, options)\nVue.component('counter-component', {\n  template: `<div>\n    C目前點擊<button @click=\"counter += 1\">{{counter}}</button>下\n  </div>`,\n  data: function() {\n    return {\n      counter: 0 \n    }\n  },\n});\n    \nlet app = new Vue({\n  el: \"#app\",\n  data: {\n    counter: 0\n  }\n})\n```\n\ntagName 可以取任意的名字，但是要注意必須是小寫，如果是多組字，就要使用 kebab Case 來命名。\n\noption 裡面有 template 跟 data，template 是要顯示在頁面上的樣板，注意要用 `` 包起來，data 在這邊則是 function 並 return 值。\n\n這樣點擊的數量就會是單獨計算，就算再新增一個 component 也一樣會分開計算。\n\n```\n<div id=\"app\">\n  <div>\n    A目前點擊<button @click=\"counter += 1\">{{counter}}</button>下\n  </div>\n  <!-- 兩者所點擊的數量是分開計算 -->\n  <counter-component></counter-component>\n  <counter-component></counter-component>\n</div>\n```","source":"_posts/基礎Vue-js-3.md","raw":"---\ntitle: 基礎 Vue.js(下)\ntags:\n  - vue\n  - javascript\ndate: 2020-03-30 16:54:07\ncategories: vue\nkeywords: \n- vue\n- javascript\n- 前端框架\ndecription: Basic use about Vue.\n---\n\n最後一篇 Vue 的基礎，會提到修飾符、還有 v-bind 切換 class，表單的運用，還有 component 的概念。\n<!--more-->\n\n## 修飾符\n---\n\n修飾符在網頁中很常使用到，例如點擊一個 a 連結，不想讓他產生作用的話，就會使用到 `preventDefault()` 這個語法，例如 jQuery 的用法：\n\n```\n<a href=\"http://www.google.com\">Click me</a>\n    \n<script>\n  $(\"a\").on(\"click\", function(e) {\n    e.preventDefault();\n  });\n</script>\n```\n\n這樣子點擊的話，連結就不會有作用。\n\n而在 Vue 中也有這個用法，阻止默認行為：\n\n`<button @click.prevent=\"doThis\"></button>`\n\n```\n<div id=\"app\">\n  <input type=\"text\" v-model=\"text\">\n  <!-- 當點擊a連結，一樣可以執行function，但不會連到Google -->\n  <a href=\"http://www.google.com\" @click.prevent=\"reverseText\">Reverse Text</a>\n  <div class=\"showText\">\n    {{newText}}\n  </div>\n</div>\n    \n<script>\n  var app = new Vue({\n    el: \"#app\",\n    data: {\n    \ttext: \"\",\n    \tnewText: \"\"\n    },\n    methods: {\n    \treverseText: function() {\n    \t  this.newText = this.text.split(\"\").reverse().join(\"\");\n    \t}\n    }\n  });\n</script>\n```\n\n## 透過 v-bind:class 來綁定 HTML\n---\n\n可以給予 `v-bind:class` 一個 class 對象，去做出動態切換 class\n\n`<div v-bind:class=\"{ class名稱: 切換的動作 }\"></div>`\n\n看以下範例，有一個藍色的方塊，只要在 class 名稱加上 yellow，就會變成黃色：\n\n```\n<div id=\"app\">\n  <!-- 只要在class動態加上yellow就會變黃色 -->\n  <div class=\"box\"></div>\n  <button class=\"changeColor btn btn-primary\">Change Color</button>\n</div>\n    \n<style>\n  .box {\n    width: 250px;\n    height: 250px;\n    background-color: blue;\n  }\n    \n  .box.yellow {\n    background-color: yellow;\n  }\n</style>\n    \n<script>\n  var app = new Vue({\n    el: \"#app\",\n    data: {\n    \tchange: false  // 這邊有一個切換動作change的data\n    }\n  });\n</script>\n```\n\n```    \n<div id=\"app\">\n  <!-- 加上 v-bind:class=\"{class名稱: 切換的動作}\" -->\n  <div class=\"box\" :class=\"{'yellow': change}\"></div>\n  <!-- 在按鈕綁定click，讓它去做切換的效果 -->\n  <button class=\"changeColor btn btn-primary\" @click=\"change = !change\">Change Color</button>\n</div>\n```\n\n{%iframe https://codepen.io/bucky0112/embed/dyoJaow?height=265&theme-id=dark&default-tab=html,result %}\n\n## 計算屬性 computed 的使用\n---\n\n下面的範例是當在 `text` 欄位輸入文字時，會在 `.showText` 顯示反轉文字\n\n不過\n\n```\n<div id=\"app\">\n  <h2>直接輸入文字</h2>\n  <input type=\"text\" class=\"form-control mt-3\" v-model=\"text\">\n  <h2>在下方顯示反轉文字</h2>\n  <h3 class=\"showText\">\n    {{text.split(\"\").reverse().join(\"\")}}\n  </h3>\n</div>\n    \n<script>\n  var app = new Vue({\n    el: \"#app\",\n    data: {\n    \ttext: \"\"\n    }\n</script>\n```\n\n但是如果要重複使用 `{% raw %}{{text.split(\"\").reverse().join(\"\")}}{% endraw %}` 這一段的話，會有點難維護，所以可以運用 computed 來處理\n\n```\nvar app = new Vue({\n  el: \"#app\",\n  data: {\n    text: \"\"\n  },\n  computed: {\n    reverseText: function() {  // 在 computed 中要使用 function\n    \treturn this.text.split(\"\").reverse().join(\"\"); // 並且會回傳值，所以就可以應用在回傳反轉後的結果\n    }\n  }\n});\n```\n\n接著只要加上回傳值的 function，就可以顯示結果了。\n\n```\n<div id=\"app\">\n  <h2>直接輸入文字</h2>\n  <input type=\"text\" class=\"form-control mt-3\" v-model=\"text\">\n  <h2>在下方顯示反轉文字</h2>\n  <h3 class=\"showText\">\n    {{reverseText}}\n  </h3>\n</div>\n```\n\n那麼 computed 跟 methods 在使用上有什麼差異呢？\n\n- computed 一般用來回傳用於畫面呈現的資料 **在監控資料更動後，重新運算後將結果呈現於畫面上。由於資料變動就會觸發，所以如果運行的資料太多，在效能處理上就會變慢。**\n- methods 是運用在互動的函式，可以用來修改資料，內容因為需要觸發才會運作，所以如果資料量大的話會建議使用 methods。\n\n## Vue 表單與資料的綁定\n---\n\n前面有提到 Vue 雙向綁定用 `v-model` 的用法，這個部份來看看其他綁定的用法。\n\n### checkbox\n\n```\n<div id=\"app\">\n  <div class=\"form\">\n    <label for=\"dinner\">要吃晚餐嗎？</label>\n    <input type=\"checkbox\" v-model=\"checkboxDinner\" id=\"dinner\">\n      {{checkboxDinner}}\n  </div>\n</div>\n\n\n<script>\n  var app = new Vue ({\n  \tel: \"#app\",\n  \tdata: {\n  \t  checkboxDinner: false, // checkbox 選項只有true或false\n  \t}\n  })\n</script>\n```\n\n`checkbox` 的用法這邊用在是或不是的選項 ，這邊預設是 false，當點擊時就會變成 true。\n\n還有加入 Array 的用法：\n\n```\nvar app = new Vue ({\n  el: \"#app\",\n  data: {\n    checkboxArray: [],\n  }\n})\n```\n\n這裏有綁定 3 個選項，當點擊 `checkbox` ，data 的 checkboxArray 空陣列就會填入該選項的 value，最後會顯示在 `<span>` 中的 `v-for` 迴圈。\n\n```\n<div id=\"app\">\n  <div class=\"form\">\n    <div class=\"form-check\">\n      <input type=\"checkbox\" class=\"form-check-input\" id=\"check2\" value=\"雞\" v-model=\"checkboxArray\">\n      <label class=\"form-check-label\" for=\"check2\">雞</label>\n    </div>\n    <div class=\"form-check\">\n      <input type=\"checkbox\" class=\"form-check-input\" id=\"check3\" value=\"豬\" v-model=\"checkboxArray\">\n      <label class=\"form-check-label\" for=\"check3\">豬</label>\n    </div>\n    <div class=\"form-check\">\n      <input type=\"checkbox\" class=\"form-check-input\" id=\"check4\" value=\"牛\" v-model=\"checkboxArray\">\n      <label class=\"form-check-label\" for=\"check4\">牛</label>\n    </div>\n    <p>晚餐火鍋裡有<span v-for=\"item in checkboxArray\">{{item}}</span>。</p>\n  </div>\n</div>\n```\n\n`checkbox` 還可以另一種的運用，就是只顯示單選，例如當選擇一個選項就會將 value 綁入 singleRadio 的空字串中\n\n```\nvar app = new Vue ({\n  el: \"#app\",\n  data: {\n    singleRadio: \"\",\n  }\n})\n    \n<div id=\"app\">\n  <div class=\"form-check\">\n    <input type=\"radio\" class=\"form-check-input\" id=\"radio2\" value=\"雞\" v-model=\"singleRadio\">\n    <label class=\"form-check-label\" for=\"radio2\">雞</label>\n  </div>\n  <div class=\"form-check\">\n    <input type=\"radio\" class=\"form-check-input\" id=\"radio3\" value=\"豬\" v-model=\"singleRadio\">\n    <label class=\"form-check-label\" for=\"radio3\">豬</label>\n  </div>\n  <div class=\"form-check\">\n    <input type=\"radio\" class=\"form-check-input\" id=\"radio4\" value=\"牛\" v-model=\"singleRadio\">\n    <label class=\"form-check-label\" for=\"radio4\">牛</label>\n  </div>\n  <p>晚餐火鍋裡有 {{singleRadio}}。</p>\n</div>\n```\n\n### 下拉式的選單\n\n當選擇某一個選項時，會將 value 綁入 data 的 selected 空字串中，然後顯示在 `{{selected}}`\n\n```\n<div id=\"app\">\n  <h2>喜歡澳洲哪一個城市？</h2>\n  <select name=\"\" id=\"\" class=\"form-control\" v-model=\"selected\">\n    <option value=\"\" disabled>-- 請選擇地點 --</option>\n    <option value=\"Melbourne\">墨爾本</option>\n    <option value=\"Sydney\">雪梨</option>\n    <option value=\"Adelaide\">阿德雷德</option>\n  </select>\n  {{selected}}\n</div>\n    \n<script>\n  var app = new Vue ({\n    el: \"#app\",\n    data: {\n    \tselected: \"\",\n    }\n  })\n</script>\n```\n\n## component 元件基礎概念\n---\n\n以下有一個範例，當點擊按鈕時，透過 `v-on:click` 綁定 counter 的按鈕會 + 1：\n\n```\n<!-- 當點擊按鈕時，透過 v-on:click綁定counter的按鈕會+1 -->\n<div id=\"app\">\n  <div>\n    目前點擊<button @click=\"counter += 1\">{{counter}}</button>下\n  </div>\n</div>\n    \n<script>\n  let app = new Vue({\n    el: \"#app\",\n    data: {\n    \tcounter: 0\n    }\n  })\n</script>\n```\n\n如果新增另一個按鈕的話，會怎麼樣呢？\n\n```\n<div id=\"app\">\n  <div>\n    目前點擊<button @click=\"counter += 1\">{{counter}}</button>下\n  </div>\n  <div>\n    目前點擊<button @click=\"counter += 1\">{{counter}}</button>下\n  </div>\n</div>\n```\n\n因為兩個是共用同一個變數 counter，所以當按其中一個按鈕，兩個會一起 + 1。\n\n那麼如果想要讓個別按鈕資料獨立的話，這邊有另一個方法可以使用：\n\n**component 元件**，透過這樣的方式，可以讓每個 component 中的 data 都會是互相獨立，看以下範例：\n\n```\n// Vue.component(tagName, options)\nVue.component('counter-component', {\n  template: `<div>\n    C目前點擊<button @click=\"counter += 1\">{{counter}}</button>下\n  </div>`,\n  data: function() {\n    return {\n      counter: 0 \n    }\n  },\n});\n    \nlet app = new Vue({\n  el: \"#app\",\n  data: {\n    counter: 0\n  }\n})\n```\n\ntagName 可以取任意的名字，但是要注意必須是小寫，如果是多組字，就要使用 kebab Case 來命名。\n\noption 裡面有 template 跟 data，template 是要顯示在頁面上的樣板，注意要用 `` 包起來，data 在這邊則是 function 並 return 值。\n\n這樣點擊的數量就會是單獨計算，就算再新增一個 component 也一樣會分開計算。\n\n```\n<div id=\"app\">\n  <div>\n    A目前點擊<button @click=\"counter += 1\">{{counter}}</button>下\n  </div>\n  <!-- 兩者所點擊的數量是分開計算 -->\n  <counter-component></counter-component>\n  <counter-component></counter-component>\n</div>\n```","slug":"基礎Vue-js-3","published":1,"updated":"2020-03-30T14:55:26.046Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck8q2oqs8000dk6u764jp77p0","content":"<p>最後一篇 Vue 的基礎，會提到修飾符、還有 v-bind 切換 class，表單的運用，還有 component 的概念。</p>\n<a id=\"more\"></a>\n\n<h2 id=\"修飾符\"><a href=\"#修飾符\" class=\"headerlink\" title=\"修飾符\"></a>修飾符</h2><hr>\n<p>修飾符在網頁中很常使用到，例如點擊一個 a 連結，不想讓他產生作用的話，就會使用到 <code>preventDefault()</code> 這個語法，例如 jQuery 的用法：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;a href&#x3D;&quot;http:&#x2F;&#x2F;www.google.com&quot;&gt;Click me&lt;&#x2F;a&gt;</span><br><span class=\"line\">    </span><br><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">  $(&quot;a&quot;).on(&quot;click&quot;, function(e) &#123;</span><br><span class=\"line\">    e.preventDefault();</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure>\n\n<p>這樣子點擊的話，連結就不會有作用。</p>\n<p>而在 Vue 中也有這個用法，阻止默認行為：</p>\n<p><code>&lt;button @click.prevent=&quot;doThis&quot;&gt;&lt;/button&gt;</code></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;div id&#x3D;&quot;app&quot;&gt;</span><br><span class=\"line\">  &lt;input type&#x3D;&quot;text&quot; v-model&#x3D;&quot;text&quot;&gt;</span><br><span class=\"line\">  &lt;!-- 當點擊a連結，一樣可以執行function，但不會連到Google --&gt;</span><br><span class=\"line\">  &lt;a href&#x3D;&quot;http:&#x2F;&#x2F;www.google.com&quot; @click.prevent&#x3D;&quot;reverseText&quot;&gt;Reverse Text&lt;&#x2F;a&gt;</span><br><span class=\"line\">  &lt;div class&#x3D;&quot;showText&quot;&gt;</span><br><span class=\"line\">    &#123;&#123;newText&#125;&#125;</span><br><span class=\"line\">  &lt;&#x2F;div&gt;</span><br><span class=\"line\">&lt;&#x2F;div&gt;</span><br><span class=\"line\">    </span><br><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">  var app &#x3D; new Vue(&#123;</span><br><span class=\"line\">    el: &quot;#app&quot;,</span><br><span class=\"line\">    data: &#123;</span><br><span class=\"line\">    \ttext: &quot;&quot;,</span><br><span class=\"line\">    \tnewText: &quot;&quot;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    methods: &#123;</span><br><span class=\"line\">    \treverseText: function() &#123;</span><br><span class=\"line\">    \t  this.newText &#x3D; this.text.split(&quot;&quot;).reverse().join(&quot;&quot;);</span><br><span class=\"line\">    \t&#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"透過-v-bind-class-來綁定-HTML\"><a href=\"#透過-v-bind-class-來綁定-HTML\" class=\"headerlink\" title=\"透過 v-bind:class 來綁定 HTML\"></a>透過 v-bind:class 來綁定 HTML</h2><hr>\n<p>可以給予 <code>v-bind:class</code> 一個 class 對象，去做出動態切換 class</p>\n<p><code>&lt;div v-bind:class=&quot;{ class名稱: 切換的動作 }&quot;&gt;&lt;/div&gt;</code></p>\n<p>看以下範例，有一個藍色的方塊，只要在 class 名稱加上 yellow，就會變成黃色：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;div id&#x3D;&quot;app&quot;&gt;</span><br><span class=\"line\">  &lt;!-- 只要在class動態加上yellow就會變黃色 --&gt;</span><br><span class=\"line\">  &lt;div class&#x3D;&quot;box&quot;&gt;&lt;&#x2F;div&gt;</span><br><span class=\"line\">  &lt;button class&#x3D;&quot;changeColor btn btn-primary&quot;&gt;Change Color&lt;&#x2F;button&gt;</span><br><span class=\"line\">&lt;&#x2F;div&gt;</span><br><span class=\"line\">    </span><br><span class=\"line\">&lt;style&gt;</span><br><span class=\"line\">  .box &#123;</span><br><span class=\"line\">    width: 250px;</span><br><span class=\"line\">    height: 250px;</span><br><span class=\"line\">    background-color: blue;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">  .box.yellow &#123;</span><br><span class=\"line\">    background-color: yellow;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&lt;&#x2F;style&gt;</span><br><span class=\"line\">    </span><br><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">  var app &#x3D; new Vue(&#123;</span><br><span class=\"line\">    el: &quot;#app&quot;,</span><br><span class=\"line\">    data: &#123;</span><br><span class=\"line\">    \tchange: false  &#x2F;&#x2F; 這邊有一個切換動作change的data</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;div id&#x3D;&quot;app&quot;&gt;</span><br><span class=\"line\">  &lt;!-- 加上 v-bind:class&#x3D;&quot;&#123;class名稱: 切換的動作&#125;&quot; --&gt;</span><br><span class=\"line\">  &lt;div class&#x3D;&quot;box&quot; :class&#x3D;&quot;&#123;&#39;yellow&#39;: change&#125;&quot;&gt;&lt;&#x2F;div&gt;</span><br><span class=\"line\">  &lt;!-- 在按鈕綁定click，讓它去做切換的效果 --&gt;</span><br><span class=\"line\">  &lt;button class&#x3D;&quot;changeColor btn btn-primary&quot; @click&#x3D;&quot;change &#x3D; !change&quot;&gt;Change Color&lt;&#x2F;button&gt;</span><br><span class=\"line\">&lt;&#x2F;div&gt;</span><br></pre></td></tr></table></figure>\n\n<iframe src=\"https://codepen.io/bucky0112/embed/dyoJaow?height=265&theme-id=dark&default-tab=html,result\" width=\"100%\" height=\"300\" frameborder=\"0\" loading=\"lazy\" allowfullscreen></iframe>\n\n<h2 id=\"計算屬性-computed-的使用\"><a href=\"#計算屬性-computed-的使用\" class=\"headerlink\" title=\"計算屬性 computed 的使用\"></a>計算屬性 computed 的使用</h2><hr>\n<p>下面的範例是當在 <code>text</code> 欄位輸入文字時，會在 <code>.showText</code> 顯示反轉文字</p>\n<p>不過</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;div id&#x3D;&quot;app&quot;&gt;</span><br><span class=\"line\">  &lt;h2&gt;直接輸入文字&lt;&#x2F;h2&gt;</span><br><span class=\"line\">  &lt;input type&#x3D;&quot;text&quot; class&#x3D;&quot;form-control mt-3&quot; v-model&#x3D;&quot;text&quot;&gt;</span><br><span class=\"line\">  &lt;h2&gt;在下方顯示反轉文字&lt;&#x2F;h2&gt;</span><br><span class=\"line\">  &lt;h3 class&#x3D;&quot;showText&quot;&gt;</span><br><span class=\"line\">    &#123;&#123;text.split(&quot;&quot;).reverse().join(&quot;&quot;)&#125;&#125;</span><br><span class=\"line\">  &lt;&#x2F;h3&gt;</span><br><span class=\"line\">&lt;&#x2F;div&gt;</span><br><span class=\"line\">    </span><br><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">  var app &#x3D; new Vue(&#123;</span><br><span class=\"line\">    el: &quot;#app&quot;,</span><br><span class=\"line\">    data: &#123;</span><br><span class=\"line\">    \ttext: &quot;&quot;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure>\n\n<p>但是如果要重複使用 <code>{{text.split(\"\").reverse().join(\"\")}}</code> 這一段的話，會有點難維護，所以可以運用 computed 來處理</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var app &#x3D; new Vue(&#123;</span><br><span class=\"line\">  el: &quot;#app&quot;,</span><br><span class=\"line\">  data: &#123;</span><br><span class=\"line\">    text: &quot;&quot;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  computed: &#123;</span><br><span class=\"line\">    reverseText: function() &#123;  &#x2F;&#x2F; 在 computed 中要使用 function</span><br><span class=\"line\">    \treturn this.text.split(&quot;&quot;).reverse().join(&quot;&quot;); &#x2F;&#x2F; 並且會回傳值，所以就可以應用在回傳反轉後的結果</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<p>接著只要加上回傳值的 function，就可以顯示結果了。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;div id&#x3D;&quot;app&quot;&gt;</span><br><span class=\"line\">  &lt;h2&gt;直接輸入文字&lt;&#x2F;h2&gt;</span><br><span class=\"line\">  &lt;input type&#x3D;&quot;text&quot; class&#x3D;&quot;form-control mt-3&quot; v-model&#x3D;&quot;text&quot;&gt;</span><br><span class=\"line\">  &lt;h2&gt;在下方顯示反轉文字&lt;&#x2F;h2&gt;</span><br><span class=\"line\">  &lt;h3 class&#x3D;&quot;showText&quot;&gt;</span><br><span class=\"line\">    &#123;&#123;reverseText&#125;&#125;</span><br><span class=\"line\">  &lt;&#x2F;h3&gt;</span><br><span class=\"line\">&lt;&#x2F;div&gt;</span><br></pre></td></tr></table></figure>\n\n<p>那麼 computed 跟 methods 在使用上有什麼差異呢？</p>\n<ul>\n<li>computed 一般用來回傳用於畫面呈現的資料 <strong>在監控資料更動後，重新運算後將結果呈現於畫面上。由於資料變動就會觸發，所以如果運行的資料太多，在效能處理上就會變慢。</strong></li>\n<li>methods 是運用在互動的函式，可以用來修改資料，內容因為需要觸發才會運作，所以如果資料量大的話會建議使用 methods。</li>\n</ul>\n<h2 id=\"Vue-表單與資料的綁定\"><a href=\"#Vue-表單與資料的綁定\" class=\"headerlink\" title=\"Vue 表單與資料的綁定\"></a>Vue 表單與資料的綁定</h2><hr>\n<p>前面有提到 Vue 雙向綁定用 <code>v-model</code> 的用法，這個部份來看看其他綁定的用法。</p>\n<h3 id=\"checkbox\"><a href=\"#checkbox\" class=\"headerlink\" title=\"checkbox\"></a>checkbox</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;div id&#x3D;&quot;app&quot;&gt;</span><br><span class=\"line\">  &lt;div class&#x3D;&quot;form&quot;&gt;</span><br><span class=\"line\">    &lt;label for&#x3D;&quot;dinner&quot;&gt;要吃晚餐嗎？&lt;&#x2F;label&gt;</span><br><span class=\"line\">    &lt;input type&#x3D;&quot;checkbox&quot; v-model&#x3D;&quot;checkboxDinner&quot; id&#x3D;&quot;dinner&quot;&gt;</span><br><span class=\"line\">      &#123;&#123;checkboxDinner&#125;&#125;</span><br><span class=\"line\">  &lt;&#x2F;div&gt;</span><br><span class=\"line\">&lt;&#x2F;div&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">  var app &#x3D; new Vue (&#123;</span><br><span class=\"line\">  \tel: &quot;#app&quot;,</span><br><span class=\"line\">  \tdata: &#123;</span><br><span class=\"line\">  \t  checkboxDinner: false, &#x2F;&#x2F; checkbox 選項只有true或false</span><br><span class=\"line\">  \t&#125;</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure>\n\n<p><code>checkbox</code> 的用法這邊用在是或不是的選項 ，這邊預設是 false，當點擊時就會變成 true。</p>\n<p>還有加入 Array 的用法：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var app &#x3D; new Vue (&#123;</span><br><span class=\"line\">  el: &quot;#app&quot;,</span><br><span class=\"line\">  data: &#123;</span><br><span class=\"line\">    checkboxArray: [],</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n\n<p>這裏有綁定 3 個選項，當點擊 <code>checkbox</code> ，data 的 checkboxArray 空陣列就會填入該選項的 value，最後會顯示在 <code>&lt;span&gt;</code> 中的 <code>v-for</code> 迴圈。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;div id&#x3D;&quot;app&quot;&gt;</span><br><span class=\"line\">  &lt;div class&#x3D;&quot;form&quot;&gt;</span><br><span class=\"line\">    &lt;div class&#x3D;&quot;form-check&quot;&gt;</span><br><span class=\"line\">      &lt;input type&#x3D;&quot;checkbox&quot; class&#x3D;&quot;form-check-input&quot; id&#x3D;&quot;check2&quot; value&#x3D;&quot;雞&quot; v-model&#x3D;&quot;checkboxArray&quot;&gt;</span><br><span class=\"line\">      &lt;label class&#x3D;&quot;form-check-label&quot; for&#x3D;&quot;check2&quot;&gt;雞&lt;&#x2F;label&gt;</span><br><span class=\"line\">    &lt;&#x2F;div&gt;</span><br><span class=\"line\">    &lt;div class&#x3D;&quot;form-check&quot;&gt;</span><br><span class=\"line\">      &lt;input type&#x3D;&quot;checkbox&quot; class&#x3D;&quot;form-check-input&quot; id&#x3D;&quot;check3&quot; value&#x3D;&quot;豬&quot; v-model&#x3D;&quot;checkboxArray&quot;&gt;</span><br><span class=\"line\">      &lt;label class&#x3D;&quot;form-check-label&quot; for&#x3D;&quot;check3&quot;&gt;豬&lt;&#x2F;label&gt;</span><br><span class=\"line\">    &lt;&#x2F;div&gt;</span><br><span class=\"line\">    &lt;div class&#x3D;&quot;form-check&quot;&gt;</span><br><span class=\"line\">      &lt;input type&#x3D;&quot;checkbox&quot; class&#x3D;&quot;form-check-input&quot; id&#x3D;&quot;check4&quot; value&#x3D;&quot;牛&quot; v-model&#x3D;&quot;checkboxArray&quot;&gt;</span><br><span class=\"line\">      &lt;label class&#x3D;&quot;form-check-label&quot; for&#x3D;&quot;check4&quot;&gt;牛&lt;&#x2F;label&gt;</span><br><span class=\"line\">    &lt;&#x2F;div&gt;</span><br><span class=\"line\">    &lt;p&gt;晚餐火鍋裡有&lt;span v-for&#x3D;&quot;item in checkboxArray&quot;&gt;&#123;&#123;item&#125;&#125;&lt;&#x2F;span&gt;。&lt;&#x2F;p&gt;</span><br><span class=\"line\">  &lt;&#x2F;div&gt;</span><br><span class=\"line\">&lt;&#x2F;div&gt;</span><br></pre></td></tr></table></figure>\n\n<p><code>checkbox</code> 還可以另一種的運用，就是只顯示單選，例如當選擇一個選項就會將 value 綁入 singleRadio 的空字串中</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var app &#x3D; new Vue (&#123;</span><br><span class=\"line\">  el: &quot;#app&quot;,</span><br><span class=\"line\">  data: &#123;</span><br><span class=\"line\">    singleRadio: &quot;&quot;,</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\">    </span><br><span class=\"line\">&lt;div id&#x3D;&quot;app&quot;&gt;</span><br><span class=\"line\">  &lt;div class&#x3D;&quot;form-check&quot;&gt;</span><br><span class=\"line\">    &lt;input type&#x3D;&quot;radio&quot; class&#x3D;&quot;form-check-input&quot; id&#x3D;&quot;radio2&quot; value&#x3D;&quot;雞&quot; v-model&#x3D;&quot;singleRadio&quot;&gt;</span><br><span class=\"line\">    &lt;label class&#x3D;&quot;form-check-label&quot; for&#x3D;&quot;radio2&quot;&gt;雞&lt;&#x2F;label&gt;</span><br><span class=\"line\">  &lt;&#x2F;div&gt;</span><br><span class=\"line\">  &lt;div class&#x3D;&quot;form-check&quot;&gt;</span><br><span class=\"line\">    &lt;input type&#x3D;&quot;radio&quot; class&#x3D;&quot;form-check-input&quot; id&#x3D;&quot;radio3&quot; value&#x3D;&quot;豬&quot; v-model&#x3D;&quot;singleRadio&quot;&gt;</span><br><span class=\"line\">    &lt;label class&#x3D;&quot;form-check-label&quot; for&#x3D;&quot;radio3&quot;&gt;豬&lt;&#x2F;label&gt;</span><br><span class=\"line\">  &lt;&#x2F;div&gt;</span><br><span class=\"line\">  &lt;div class&#x3D;&quot;form-check&quot;&gt;</span><br><span class=\"line\">    &lt;input type&#x3D;&quot;radio&quot; class&#x3D;&quot;form-check-input&quot; id&#x3D;&quot;radio4&quot; value&#x3D;&quot;牛&quot; v-model&#x3D;&quot;singleRadio&quot;&gt;</span><br><span class=\"line\">    &lt;label class&#x3D;&quot;form-check-label&quot; for&#x3D;&quot;radio4&quot;&gt;牛&lt;&#x2F;label&gt;</span><br><span class=\"line\">  &lt;&#x2F;div&gt;</span><br><span class=\"line\">  &lt;p&gt;晚餐火鍋裡有 &#123;&#123;singleRadio&#125;&#125;。&lt;&#x2F;p&gt;</span><br><span class=\"line\">&lt;&#x2F;div&gt;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"下拉式的選單\"><a href=\"#下拉式的選單\" class=\"headerlink\" title=\"下拉式的選單\"></a>下拉式的選單</h3><p>當選擇某一個選項時，會將 value 綁入 data 的 selected 空字串中，然後顯示在 <code></code></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;div id&#x3D;&quot;app&quot;&gt;</span><br><span class=\"line\">  &lt;h2&gt;喜歡澳洲哪一個城市？&lt;&#x2F;h2&gt;</span><br><span class=\"line\">  &lt;select name&#x3D;&quot;&quot; id&#x3D;&quot;&quot; class&#x3D;&quot;form-control&quot; v-model&#x3D;&quot;selected&quot;&gt;</span><br><span class=\"line\">    &lt;option value&#x3D;&quot;&quot; disabled&gt;-- 請選擇地點 --&lt;&#x2F;option&gt;</span><br><span class=\"line\">    &lt;option value&#x3D;&quot;Melbourne&quot;&gt;墨爾本&lt;&#x2F;option&gt;</span><br><span class=\"line\">    &lt;option value&#x3D;&quot;Sydney&quot;&gt;雪梨&lt;&#x2F;option&gt;</span><br><span class=\"line\">    &lt;option value&#x3D;&quot;Adelaide&quot;&gt;阿德雷德&lt;&#x2F;option&gt;</span><br><span class=\"line\">  &lt;&#x2F;select&gt;</span><br><span class=\"line\">  &#123;&#123;selected&#125;&#125;</span><br><span class=\"line\">&lt;&#x2F;div&gt;</span><br><span class=\"line\">    </span><br><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">  var app &#x3D; new Vue (&#123;</span><br><span class=\"line\">    el: &quot;#app&quot;,</span><br><span class=\"line\">    data: &#123;</span><br><span class=\"line\">    \tselected: &quot;&quot;,</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"component-元件基礎概念\"><a href=\"#component-元件基礎概念\" class=\"headerlink\" title=\"component 元件基礎概念\"></a>component 元件基礎概念</h2><hr>\n<p>以下有一個範例，當點擊按鈕時，透過 <code>v-on:click</code> 綁定 counter 的按鈕會 + 1：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!-- 當點擊按鈕時，透過 v-on:click綁定counter的按鈕會+1 --&gt;</span><br><span class=\"line\">&lt;div id&#x3D;&quot;app&quot;&gt;</span><br><span class=\"line\">  &lt;div&gt;</span><br><span class=\"line\">    目前點擊&lt;button @click&#x3D;&quot;counter +&#x3D; 1&quot;&gt;&#123;&#123;counter&#125;&#125;&lt;&#x2F;button&gt;下</span><br><span class=\"line\">  &lt;&#x2F;div&gt;</span><br><span class=\"line\">&lt;&#x2F;div&gt;</span><br><span class=\"line\">    </span><br><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">  let app &#x3D; new Vue(&#123;</span><br><span class=\"line\">    el: &quot;#app&quot;,</span><br><span class=\"line\">    data: &#123;</span><br><span class=\"line\">    \tcounter: 0</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure>\n\n<p>如果新增另一個按鈕的話，會怎麼樣呢？</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;div id&#x3D;&quot;app&quot;&gt;</span><br><span class=\"line\">  &lt;div&gt;</span><br><span class=\"line\">    目前點擊&lt;button @click&#x3D;&quot;counter +&#x3D; 1&quot;&gt;&#123;&#123;counter&#125;&#125;&lt;&#x2F;button&gt;下</span><br><span class=\"line\">  &lt;&#x2F;div&gt;</span><br><span class=\"line\">  &lt;div&gt;</span><br><span class=\"line\">    目前點擊&lt;button @click&#x3D;&quot;counter +&#x3D; 1&quot;&gt;&#123;&#123;counter&#125;&#125;&lt;&#x2F;button&gt;下</span><br><span class=\"line\">  &lt;&#x2F;div&gt;</span><br><span class=\"line\">&lt;&#x2F;div&gt;</span><br></pre></td></tr></table></figure>\n\n<p>因為兩個是共用同一個變數 counter，所以當按其中一個按鈕，兩個會一起 + 1。</p>\n<p>那麼如果想要讓個別按鈕資料獨立的話，這邊有另一個方法可以使用：</p>\n<p><strong>component 元件</strong>，透過這樣的方式，可以讓每個 component 中的 data 都會是互相獨立，看以下範例：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#x2F;&#x2F; Vue.component(tagName, options)</span><br><span class=\"line\">Vue.component(&#39;counter-component&#39;, &#123;</span><br><span class=\"line\">  template: &#96;&lt;div&gt;</span><br><span class=\"line\">    C目前點擊&lt;button @click&#x3D;&quot;counter +&#x3D; 1&quot;&gt;&#123;&#123;counter&#125;&#125;&lt;&#x2F;button&gt;下</span><br><span class=\"line\">  &lt;&#x2F;div&gt;&#96;,</span><br><span class=\"line\">  data: function() &#123;</span><br><span class=\"line\">    return &#123;</span><br><span class=\"line\">      counter: 0 </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\">    </span><br><span class=\"line\">let app &#x3D; new Vue(&#123;</span><br><span class=\"line\">  el: &quot;#app&quot;,</span><br><span class=\"line\">  data: &#123;</span><br><span class=\"line\">    counter: 0</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n\n<p>tagName 可以取任意的名字，但是要注意必須是小寫，如果是多組字，就要使用 kebab Case 來命名。</p>\n<p>option 裡面有 template 跟 data，template 是要顯示在頁面上的樣板，注意要用 `` 包起來，data 在這邊則是 function 並 return 值。</p>\n<p>這樣點擊的數量就會是單獨計算，就算再新增一個 component 也一樣會分開計算。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;div id&#x3D;&quot;app&quot;&gt;</span><br><span class=\"line\">  &lt;div&gt;</span><br><span class=\"line\">    A目前點擊&lt;button @click&#x3D;&quot;counter +&#x3D; 1&quot;&gt;&#123;&#123;counter&#125;&#125;&lt;&#x2F;button&gt;下</span><br><span class=\"line\">  &lt;&#x2F;div&gt;</span><br><span class=\"line\">  &lt;!-- 兩者所點擊的數量是分開計算 --&gt;</span><br><span class=\"line\">  &lt;counter-component&gt;&lt;&#x2F;counter-component&gt;</span><br><span class=\"line\">  &lt;counter-component&gt;&lt;&#x2F;counter-component&gt;</span><br><span class=\"line\">&lt;&#x2F;div&gt;</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"<p>最後一篇 Vue 的基礎，會提到修飾符、還有 v-bind 切換 class，表單的運用，還有 component 的概念。</p>","more":"<h2 id=\"修飾符\"><a href=\"#修飾符\" class=\"headerlink\" title=\"修飾符\"></a>修飾符</h2><hr>\n<p>修飾符在網頁中很常使用到，例如點擊一個 a 連結，不想讓他產生作用的話，就會使用到 <code>preventDefault()</code> 這個語法，例如 jQuery 的用法：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;a href&#x3D;&quot;http:&#x2F;&#x2F;www.google.com&quot;&gt;Click me&lt;&#x2F;a&gt;</span><br><span class=\"line\">    </span><br><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">  $(&quot;a&quot;).on(&quot;click&quot;, function(e) &#123;</span><br><span class=\"line\">    e.preventDefault();</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure>\n\n<p>這樣子點擊的話，連結就不會有作用。</p>\n<p>而在 Vue 中也有這個用法，阻止默認行為：</p>\n<p><code>&lt;button @click.prevent=&quot;doThis&quot;&gt;&lt;/button&gt;</code></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;div id&#x3D;&quot;app&quot;&gt;</span><br><span class=\"line\">  &lt;input type&#x3D;&quot;text&quot; v-model&#x3D;&quot;text&quot;&gt;</span><br><span class=\"line\">  &lt;!-- 當點擊a連結，一樣可以執行function，但不會連到Google --&gt;</span><br><span class=\"line\">  &lt;a href&#x3D;&quot;http:&#x2F;&#x2F;www.google.com&quot; @click.prevent&#x3D;&quot;reverseText&quot;&gt;Reverse Text&lt;&#x2F;a&gt;</span><br><span class=\"line\">  &lt;div class&#x3D;&quot;showText&quot;&gt;</span><br><span class=\"line\">    &#123;&#123;newText&#125;&#125;</span><br><span class=\"line\">  &lt;&#x2F;div&gt;</span><br><span class=\"line\">&lt;&#x2F;div&gt;</span><br><span class=\"line\">    </span><br><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">  var app &#x3D; new Vue(&#123;</span><br><span class=\"line\">    el: &quot;#app&quot;,</span><br><span class=\"line\">    data: &#123;</span><br><span class=\"line\">    \ttext: &quot;&quot;,</span><br><span class=\"line\">    \tnewText: &quot;&quot;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    methods: &#123;</span><br><span class=\"line\">    \treverseText: function() &#123;</span><br><span class=\"line\">    \t  this.newText &#x3D; this.text.split(&quot;&quot;).reverse().join(&quot;&quot;);</span><br><span class=\"line\">    \t&#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"透過-v-bind-class-來綁定-HTML\"><a href=\"#透過-v-bind-class-來綁定-HTML\" class=\"headerlink\" title=\"透過 v-bind:class 來綁定 HTML\"></a>透過 v-bind:class 來綁定 HTML</h2><hr>\n<p>可以給予 <code>v-bind:class</code> 一個 class 對象，去做出動態切換 class</p>\n<p><code>&lt;div v-bind:class=&quot;{ class名稱: 切換的動作 }&quot;&gt;&lt;/div&gt;</code></p>\n<p>看以下範例，有一個藍色的方塊，只要在 class 名稱加上 yellow，就會變成黃色：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;div id&#x3D;&quot;app&quot;&gt;</span><br><span class=\"line\">  &lt;!-- 只要在class動態加上yellow就會變黃色 --&gt;</span><br><span class=\"line\">  &lt;div class&#x3D;&quot;box&quot;&gt;&lt;&#x2F;div&gt;</span><br><span class=\"line\">  &lt;button class&#x3D;&quot;changeColor btn btn-primary&quot;&gt;Change Color&lt;&#x2F;button&gt;</span><br><span class=\"line\">&lt;&#x2F;div&gt;</span><br><span class=\"line\">    </span><br><span class=\"line\">&lt;style&gt;</span><br><span class=\"line\">  .box &#123;</span><br><span class=\"line\">    width: 250px;</span><br><span class=\"line\">    height: 250px;</span><br><span class=\"line\">    background-color: blue;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">  .box.yellow &#123;</span><br><span class=\"line\">    background-color: yellow;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&lt;&#x2F;style&gt;</span><br><span class=\"line\">    </span><br><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">  var app &#x3D; new Vue(&#123;</span><br><span class=\"line\">    el: &quot;#app&quot;,</span><br><span class=\"line\">    data: &#123;</span><br><span class=\"line\">    \tchange: false  &#x2F;&#x2F; 這邊有一個切換動作change的data</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;div id&#x3D;&quot;app&quot;&gt;</span><br><span class=\"line\">  &lt;!-- 加上 v-bind:class&#x3D;&quot;&#123;class名稱: 切換的動作&#125;&quot; --&gt;</span><br><span class=\"line\">  &lt;div class&#x3D;&quot;box&quot; :class&#x3D;&quot;&#123;&#39;yellow&#39;: change&#125;&quot;&gt;&lt;&#x2F;div&gt;</span><br><span class=\"line\">  &lt;!-- 在按鈕綁定click，讓它去做切換的效果 --&gt;</span><br><span class=\"line\">  &lt;button class&#x3D;&quot;changeColor btn btn-primary&quot; @click&#x3D;&quot;change &#x3D; !change&quot;&gt;Change Color&lt;&#x2F;button&gt;</span><br><span class=\"line\">&lt;&#x2F;div&gt;</span><br></pre></td></tr></table></figure>\n\n<iframe src=\"https://codepen.io/bucky0112/embed/dyoJaow?height=265&theme-id=dark&default-tab=html,result\" width=\"100%\" height=\"300\" frameborder=\"0\" loading=\"lazy\" allowfullscreen></iframe>\n\n<h2 id=\"計算屬性-computed-的使用\"><a href=\"#計算屬性-computed-的使用\" class=\"headerlink\" title=\"計算屬性 computed 的使用\"></a>計算屬性 computed 的使用</h2><hr>\n<p>下面的範例是當在 <code>text</code> 欄位輸入文字時，會在 <code>.showText</code> 顯示反轉文字</p>\n<p>不過</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;div id&#x3D;&quot;app&quot;&gt;</span><br><span class=\"line\">  &lt;h2&gt;直接輸入文字&lt;&#x2F;h2&gt;</span><br><span class=\"line\">  &lt;input type&#x3D;&quot;text&quot; class&#x3D;&quot;form-control mt-3&quot; v-model&#x3D;&quot;text&quot;&gt;</span><br><span class=\"line\">  &lt;h2&gt;在下方顯示反轉文字&lt;&#x2F;h2&gt;</span><br><span class=\"line\">  &lt;h3 class&#x3D;&quot;showText&quot;&gt;</span><br><span class=\"line\">    &#123;&#123;text.split(&quot;&quot;).reverse().join(&quot;&quot;)&#125;&#125;</span><br><span class=\"line\">  &lt;&#x2F;h3&gt;</span><br><span class=\"line\">&lt;&#x2F;div&gt;</span><br><span class=\"line\">    </span><br><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">  var app &#x3D; new Vue(&#123;</span><br><span class=\"line\">    el: &quot;#app&quot;,</span><br><span class=\"line\">    data: &#123;</span><br><span class=\"line\">    \ttext: &quot;&quot;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure>\n\n<p>但是如果要重複使用 <code>{{text.split(\"\").reverse().join(\"\")}}</code> 這一段的話，會有點難維護，所以可以運用 computed 來處理</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var app &#x3D; new Vue(&#123;</span><br><span class=\"line\">  el: &quot;#app&quot;,</span><br><span class=\"line\">  data: &#123;</span><br><span class=\"line\">    text: &quot;&quot;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  computed: &#123;</span><br><span class=\"line\">    reverseText: function() &#123;  &#x2F;&#x2F; 在 computed 中要使用 function</span><br><span class=\"line\">    \treturn this.text.split(&quot;&quot;).reverse().join(&quot;&quot;); &#x2F;&#x2F; 並且會回傳值，所以就可以應用在回傳反轉後的結果</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<p>接著只要加上回傳值的 function，就可以顯示結果了。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;div id&#x3D;&quot;app&quot;&gt;</span><br><span class=\"line\">  &lt;h2&gt;直接輸入文字&lt;&#x2F;h2&gt;</span><br><span class=\"line\">  &lt;input type&#x3D;&quot;text&quot; class&#x3D;&quot;form-control mt-3&quot; v-model&#x3D;&quot;text&quot;&gt;</span><br><span class=\"line\">  &lt;h2&gt;在下方顯示反轉文字&lt;&#x2F;h2&gt;</span><br><span class=\"line\">  &lt;h3 class&#x3D;&quot;showText&quot;&gt;</span><br><span class=\"line\">    &#123;&#123;reverseText&#125;&#125;</span><br><span class=\"line\">  &lt;&#x2F;h3&gt;</span><br><span class=\"line\">&lt;&#x2F;div&gt;</span><br></pre></td></tr></table></figure>\n\n<p>那麼 computed 跟 methods 在使用上有什麼差異呢？</p>\n<ul>\n<li>computed 一般用來回傳用於畫面呈現的資料 <strong>在監控資料更動後，重新運算後將結果呈現於畫面上。由於資料變動就會觸發，所以如果運行的資料太多，在效能處理上就會變慢。</strong></li>\n<li>methods 是運用在互動的函式，可以用來修改資料，內容因為需要觸發才會運作，所以如果資料量大的話會建議使用 methods。</li>\n</ul>\n<h2 id=\"Vue-表單與資料的綁定\"><a href=\"#Vue-表單與資料的綁定\" class=\"headerlink\" title=\"Vue 表單與資料的綁定\"></a>Vue 表單與資料的綁定</h2><hr>\n<p>前面有提到 Vue 雙向綁定用 <code>v-model</code> 的用法，這個部份來看看其他綁定的用法。</p>\n<h3 id=\"checkbox\"><a href=\"#checkbox\" class=\"headerlink\" title=\"checkbox\"></a>checkbox</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;div id&#x3D;&quot;app&quot;&gt;</span><br><span class=\"line\">  &lt;div class&#x3D;&quot;form&quot;&gt;</span><br><span class=\"line\">    &lt;label for&#x3D;&quot;dinner&quot;&gt;要吃晚餐嗎？&lt;&#x2F;label&gt;</span><br><span class=\"line\">    &lt;input type&#x3D;&quot;checkbox&quot; v-model&#x3D;&quot;checkboxDinner&quot; id&#x3D;&quot;dinner&quot;&gt;</span><br><span class=\"line\">      &#123;&#123;checkboxDinner&#125;&#125;</span><br><span class=\"line\">  &lt;&#x2F;div&gt;</span><br><span class=\"line\">&lt;&#x2F;div&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">  var app &#x3D; new Vue (&#123;</span><br><span class=\"line\">  \tel: &quot;#app&quot;,</span><br><span class=\"line\">  \tdata: &#123;</span><br><span class=\"line\">  \t  checkboxDinner: false, &#x2F;&#x2F; checkbox 選項只有true或false</span><br><span class=\"line\">  \t&#125;</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure>\n\n<p><code>checkbox</code> 的用法這邊用在是或不是的選項 ，這邊預設是 false，當點擊時就會變成 true。</p>\n<p>還有加入 Array 的用法：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var app &#x3D; new Vue (&#123;</span><br><span class=\"line\">  el: &quot;#app&quot;,</span><br><span class=\"line\">  data: &#123;</span><br><span class=\"line\">    checkboxArray: [],</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n\n<p>這裏有綁定 3 個選項，當點擊 <code>checkbox</code> ，data 的 checkboxArray 空陣列就會填入該選項的 value，最後會顯示在 <code>&lt;span&gt;</code> 中的 <code>v-for</code> 迴圈。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;div id&#x3D;&quot;app&quot;&gt;</span><br><span class=\"line\">  &lt;div class&#x3D;&quot;form&quot;&gt;</span><br><span class=\"line\">    &lt;div class&#x3D;&quot;form-check&quot;&gt;</span><br><span class=\"line\">      &lt;input type&#x3D;&quot;checkbox&quot; class&#x3D;&quot;form-check-input&quot; id&#x3D;&quot;check2&quot; value&#x3D;&quot;雞&quot; v-model&#x3D;&quot;checkboxArray&quot;&gt;</span><br><span class=\"line\">      &lt;label class&#x3D;&quot;form-check-label&quot; for&#x3D;&quot;check2&quot;&gt;雞&lt;&#x2F;label&gt;</span><br><span class=\"line\">    &lt;&#x2F;div&gt;</span><br><span class=\"line\">    &lt;div class&#x3D;&quot;form-check&quot;&gt;</span><br><span class=\"line\">      &lt;input type&#x3D;&quot;checkbox&quot; class&#x3D;&quot;form-check-input&quot; id&#x3D;&quot;check3&quot; value&#x3D;&quot;豬&quot; v-model&#x3D;&quot;checkboxArray&quot;&gt;</span><br><span class=\"line\">      &lt;label class&#x3D;&quot;form-check-label&quot; for&#x3D;&quot;check3&quot;&gt;豬&lt;&#x2F;label&gt;</span><br><span class=\"line\">    &lt;&#x2F;div&gt;</span><br><span class=\"line\">    &lt;div class&#x3D;&quot;form-check&quot;&gt;</span><br><span class=\"line\">      &lt;input type&#x3D;&quot;checkbox&quot; class&#x3D;&quot;form-check-input&quot; id&#x3D;&quot;check4&quot; value&#x3D;&quot;牛&quot; v-model&#x3D;&quot;checkboxArray&quot;&gt;</span><br><span class=\"line\">      &lt;label class&#x3D;&quot;form-check-label&quot; for&#x3D;&quot;check4&quot;&gt;牛&lt;&#x2F;label&gt;</span><br><span class=\"line\">    &lt;&#x2F;div&gt;</span><br><span class=\"line\">    &lt;p&gt;晚餐火鍋裡有&lt;span v-for&#x3D;&quot;item in checkboxArray&quot;&gt;&#123;&#123;item&#125;&#125;&lt;&#x2F;span&gt;。&lt;&#x2F;p&gt;</span><br><span class=\"line\">  &lt;&#x2F;div&gt;</span><br><span class=\"line\">&lt;&#x2F;div&gt;</span><br></pre></td></tr></table></figure>\n\n<p><code>checkbox</code> 還可以另一種的運用，就是只顯示單選，例如當選擇一個選項就會將 value 綁入 singleRadio 的空字串中</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var app &#x3D; new Vue (&#123;</span><br><span class=\"line\">  el: &quot;#app&quot;,</span><br><span class=\"line\">  data: &#123;</span><br><span class=\"line\">    singleRadio: &quot;&quot;,</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\">    </span><br><span class=\"line\">&lt;div id&#x3D;&quot;app&quot;&gt;</span><br><span class=\"line\">  &lt;div class&#x3D;&quot;form-check&quot;&gt;</span><br><span class=\"line\">    &lt;input type&#x3D;&quot;radio&quot; class&#x3D;&quot;form-check-input&quot; id&#x3D;&quot;radio2&quot; value&#x3D;&quot;雞&quot; v-model&#x3D;&quot;singleRadio&quot;&gt;</span><br><span class=\"line\">    &lt;label class&#x3D;&quot;form-check-label&quot; for&#x3D;&quot;radio2&quot;&gt;雞&lt;&#x2F;label&gt;</span><br><span class=\"line\">  &lt;&#x2F;div&gt;</span><br><span class=\"line\">  &lt;div class&#x3D;&quot;form-check&quot;&gt;</span><br><span class=\"line\">    &lt;input type&#x3D;&quot;radio&quot; class&#x3D;&quot;form-check-input&quot; id&#x3D;&quot;radio3&quot; value&#x3D;&quot;豬&quot; v-model&#x3D;&quot;singleRadio&quot;&gt;</span><br><span class=\"line\">    &lt;label class&#x3D;&quot;form-check-label&quot; for&#x3D;&quot;radio3&quot;&gt;豬&lt;&#x2F;label&gt;</span><br><span class=\"line\">  &lt;&#x2F;div&gt;</span><br><span class=\"line\">  &lt;div class&#x3D;&quot;form-check&quot;&gt;</span><br><span class=\"line\">    &lt;input type&#x3D;&quot;radio&quot; class&#x3D;&quot;form-check-input&quot; id&#x3D;&quot;radio4&quot; value&#x3D;&quot;牛&quot; v-model&#x3D;&quot;singleRadio&quot;&gt;</span><br><span class=\"line\">    &lt;label class&#x3D;&quot;form-check-label&quot; for&#x3D;&quot;radio4&quot;&gt;牛&lt;&#x2F;label&gt;</span><br><span class=\"line\">  &lt;&#x2F;div&gt;</span><br><span class=\"line\">  &lt;p&gt;晚餐火鍋裡有 &#123;&#123;singleRadio&#125;&#125;。&lt;&#x2F;p&gt;</span><br><span class=\"line\">&lt;&#x2F;div&gt;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"下拉式的選單\"><a href=\"#下拉式的選單\" class=\"headerlink\" title=\"下拉式的選單\"></a>下拉式的選單</h3><p>當選擇某一個選項時，會將 value 綁入 data 的 selected 空字串中，然後顯示在 <code></code></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;div id&#x3D;&quot;app&quot;&gt;</span><br><span class=\"line\">  &lt;h2&gt;喜歡澳洲哪一個城市？&lt;&#x2F;h2&gt;</span><br><span class=\"line\">  &lt;select name&#x3D;&quot;&quot; id&#x3D;&quot;&quot; class&#x3D;&quot;form-control&quot; v-model&#x3D;&quot;selected&quot;&gt;</span><br><span class=\"line\">    &lt;option value&#x3D;&quot;&quot; disabled&gt;-- 請選擇地點 --&lt;&#x2F;option&gt;</span><br><span class=\"line\">    &lt;option value&#x3D;&quot;Melbourne&quot;&gt;墨爾本&lt;&#x2F;option&gt;</span><br><span class=\"line\">    &lt;option value&#x3D;&quot;Sydney&quot;&gt;雪梨&lt;&#x2F;option&gt;</span><br><span class=\"line\">    &lt;option value&#x3D;&quot;Adelaide&quot;&gt;阿德雷德&lt;&#x2F;option&gt;</span><br><span class=\"line\">  &lt;&#x2F;select&gt;</span><br><span class=\"line\">  &#123;&#123;selected&#125;&#125;</span><br><span class=\"line\">&lt;&#x2F;div&gt;</span><br><span class=\"line\">    </span><br><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">  var app &#x3D; new Vue (&#123;</span><br><span class=\"line\">    el: &quot;#app&quot;,</span><br><span class=\"line\">    data: &#123;</span><br><span class=\"line\">    \tselected: &quot;&quot;,</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"component-元件基礎概念\"><a href=\"#component-元件基礎概念\" class=\"headerlink\" title=\"component 元件基礎概念\"></a>component 元件基礎概念</h2><hr>\n<p>以下有一個範例，當點擊按鈕時，透過 <code>v-on:click</code> 綁定 counter 的按鈕會 + 1：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!-- 當點擊按鈕時，透過 v-on:click綁定counter的按鈕會+1 --&gt;</span><br><span class=\"line\">&lt;div id&#x3D;&quot;app&quot;&gt;</span><br><span class=\"line\">  &lt;div&gt;</span><br><span class=\"line\">    目前點擊&lt;button @click&#x3D;&quot;counter +&#x3D; 1&quot;&gt;&#123;&#123;counter&#125;&#125;&lt;&#x2F;button&gt;下</span><br><span class=\"line\">  &lt;&#x2F;div&gt;</span><br><span class=\"line\">&lt;&#x2F;div&gt;</span><br><span class=\"line\">    </span><br><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">  let app &#x3D; new Vue(&#123;</span><br><span class=\"line\">    el: &quot;#app&quot;,</span><br><span class=\"line\">    data: &#123;</span><br><span class=\"line\">    \tcounter: 0</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure>\n\n<p>如果新增另一個按鈕的話，會怎麼樣呢？</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;div id&#x3D;&quot;app&quot;&gt;</span><br><span class=\"line\">  &lt;div&gt;</span><br><span class=\"line\">    目前點擊&lt;button @click&#x3D;&quot;counter +&#x3D; 1&quot;&gt;&#123;&#123;counter&#125;&#125;&lt;&#x2F;button&gt;下</span><br><span class=\"line\">  &lt;&#x2F;div&gt;</span><br><span class=\"line\">  &lt;div&gt;</span><br><span class=\"line\">    目前點擊&lt;button @click&#x3D;&quot;counter +&#x3D; 1&quot;&gt;&#123;&#123;counter&#125;&#125;&lt;&#x2F;button&gt;下</span><br><span class=\"line\">  &lt;&#x2F;div&gt;</span><br><span class=\"line\">&lt;&#x2F;div&gt;</span><br></pre></td></tr></table></figure>\n\n<p>因為兩個是共用同一個變數 counter，所以當按其中一個按鈕，兩個會一起 + 1。</p>\n<p>那麼如果想要讓個別按鈕資料獨立的話，這邊有另一個方法可以使用：</p>\n<p><strong>component 元件</strong>，透過這樣的方式，可以讓每個 component 中的 data 都會是互相獨立，看以下範例：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#x2F;&#x2F; Vue.component(tagName, options)</span><br><span class=\"line\">Vue.component(&#39;counter-component&#39;, &#123;</span><br><span class=\"line\">  template: &#96;&lt;div&gt;</span><br><span class=\"line\">    C目前點擊&lt;button @click&#x3D;&quot;counter +&#x3D; 1&quot;&gt;&#123;&#123;counter&#125;&#125;&lt;&#x2F;button&gt;下</span><br><span class=\"line\">  &lt;&#x2F;div&gt;&#96;,</span><br><span class=\"line\">  data: function() &#123;</span><br><span class=\"line\">    return &#123;</span><br><span class=\"line\">      counter: 0 </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\">    </span><br><span class=\"line\">let app &#x3D; new Vue(&#123;</span><br><span class=\"line\">  el: &quot;#app&quot;,</span><br><span class=\"line\">  data: &#123;</span><br><span class=\"line\">    counter: 0</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n\n<p>tagName 可以取任意的名字，但是要注意必須是小寫，如果是多組字，就要使用 kebab Case 來命名。</p>\n<p>option 裡面有 template 跟 data，template 是要顯示在頁面上的樣板，注意要用 `` 包起來，data 在這邊則是 function 並 return 值。</p>\n<p>這樣點擊的數量就會是單獨計算，就算再新增一個 component 也一樣會分開計算。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;div id&#x3D;&quot;app&quot;&gt;</span><br><span class=\"line\">  &lt;div&gt;</span><br><span class=\"line\">    A目前點擊&lt;button @click&#x3D;&quot;counter +&#x3D; 1&quot;&gt;&#123;&#123;counter&#125;&#125;&lt;&#x2F;button&gt;下</span><br><span class=\"line\">  &lt;&#x2F;div&gt;</span><br><span class=\"line\">  &lt;!-- 兩者所點擊的數量是分開計算 --&gt;</span><br><span class=\"line\">  &lt;counter-component&gt;&lt;&#x2F;counter-component&gt;</span><br><span class=\"line\">  &lt;counter-component&gt;&lt;&#x2F;counter-component&gt;</span><br><span class=\"line\">&lt;&#x2F;div&gt;</span><br></pre></td></tr></table></figure>"}],"PostAsset":[],"PostCategory":[{"post_id":"ck8q2oqrd0000k6u73hma25ne","category_id":"ck8q2oqrs0004k6u79gq7hrmf","_id":"ck8q2oqs9000ek6u7a4nyad20"},{"post_id":"ck8q2oqru0006k6u71zch93k4","category_id":"ck8q2oqs5000ak6u73y3q3kuo","_id":"ck8q2oqsb000jk6u74wsr4c3e"},{"post_id":"ck8q2oqs20008k6u74i3g4v6l","category_id":"ck8q2oqs9000fk6u78uwy8l4n","_id":"ck8q2oqsd000nk6u7gqn9fr33"},{"post_id":"ck8q2oqs40009k6u7e3y9h55h","category_id":"ck8q2oqsb000kk6u7cn6r63me","_id":"ck8q2oqsi000sk6u77h7n9koa"},{"post_id":"ck8q2oqs7000ck6u77tms4gkn","category_id":"ck8q2oqsb000kk6u7cn6r63me","_id":"ck8q2oqsk000uk6u7fuskcpjr"},{"post_id":"ck8q2oqs8000dk6u764jp77p0","category_id":"ck8q2oqsb000kk6u7cn6r63me","_id":"ck8q2oqsl000xk6u7a9350fup"}],"PostTag":[{"post_id":"ck8q2oqrd0000k6u73hma25ne","tag_id":"ck8q2oqru0005k6u75h52c6mu","_id":"ck8q2oqsb000hk6u70ipk6mr5"},{"post_id":"ck8q2oqrd0000k6u73hma25ne","tag_id":"ck8q2oqs5000bk6u7f5ol79us","_id":"ck8q2oqsb000ik6u75ur88x8i"},{"post_id":"ck8q2oqru0006k6u71zch93k4","tag_id":"ck8q2oqsa000gk6u7ctnv4phz","_id":"ck8q2oqsc000mk6u7gl9x3ac4"},{"post_id":"ck8q2oqs20008k6u74i3g4v6l","tag_id":"ck8q2oqsb000lk6u7dwoy64j7","_id":"ck8q2oqsi000qk6u71bos6776"},{"post_id":"ck8q2oqs40009k6u7e3y9h55h","tag_id":"ck8q2oqse000pk6u7c2wyeri2","_id":"ck8q2oqsl000wk6u71mnq80gm"},{"post_id":"ck8q2oqs40009k6u7e3y9h55h","tag_id":"ck8q2oqsb000lk6u7dwoy64j7","_id":"ck8q2oqsl000yk6u7ebev2aq0"},{"post_id":"ck8q2oqs7000ck6u77tms4gkn","tag_id":"ck8q2oqse000pk6u7c2wyeri2","_id":"ck8q2oqso0011k6u77ysedy0x"},{"post_id":"ck8q2oqs7000ck6u77tms4gkn","tag_id":"ck8q2oqsb000lk6u7dwoy64j7","_id":"ck8q2oqso0012k6u77w687s0k"},{"post_id":"ck8q2oqs8000dk6u764jp77p0","tag_id":"ck8q2oqse000pk6u7c2wyeri2","_id":"ck8q2oqsq0014k6u7dhjx7ohk"},{"post_id":"ck8q2oqs8000dk6u764jp77p0","tag_id":"ck8q2oqsb000lk6u7dwoy64j7","_id":"ck8q2oqsq0015k6u7a4um6pof"}],"Tag":[{"name":"hexo","_id":"ck8q2oqru0005k6u75h52c6mu"},{"name":"next","_id":"ck8q2oqs5000bk6u7f5ol79us"},{"name":"先別急著寫 leetcode","_id":"ck8q2oqsa000gk6u7ctnv4phz"},{"name":"javascript","_id":"ck8q2oqsb000lk6u7dwoy64j7"},{"name":"vue","_id":"ck8q2oqse000pk6u7c2wyeri2"}]}}